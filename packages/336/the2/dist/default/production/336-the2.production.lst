

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 11 13:42:36 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F8722 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000D36                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _game_level
    77  000D36  01                 	db	1
    78                           
    79                           ;initializer for _L3
    80  000D37  0F                 	db	15
    81                           
    82                           ;initializer for _L2
    83  000D38  0A                 	db	10
    84                           
    85                           ;initializer for _L1
    86  000D39  05                 	db	5
    87                           
    88                           	psect	nvCOMRAM
    89  000024                     __pnvCOMRAM:
    90                           	callstack 0
    91  000024                     _whichRG:
    92                           	callstack 0
    93  000024                     	ds	1
    94  000025                     _isRG4Pressed:
    95                           	callstack 0
    96  000025                     	ds	1
    97  000026                     _isRG3Pressed:
    98                           	callstack 0
    99  000026                     	ds	1
   100  000027                     _isRG2Pressed:
   101                           	callstack 0
   102  000027                     	ds	1
   103  000028                     _isRG1Pressed:
   104                           	callstack 0
   105  000028                     	ds	1
   106  000029                     _isRG0Pressed:
   107                           	callstack 0
   108  000029                     	ds	1
   109  00002A                     _level:
   110                           	callstack 0
   111  00002A                     	ds	1
   112  00002B                     _health:
   113                           	callstack 0
   114  00002B                     	ds	1
   115  0000                     _TMR0	set	4054
   116  0000                     _PORTFbits	set	3973
   117  0000                     _PORTGbits	set	3974
   118  0000                     _PORTC	set	3970
   119  0000                     _PORTCbits	set	3970
   120  0000                     _T1CON	set	4045
   121  0000                     _T0CON	set	4053
   122  0000                     _RCONbits	set	4048
   123  0000                     _INTCON	set	4082
   124  0000                     _PORTJ	set	3976
   125  0000                     _PORTH	set	3975
   126  0000                     _PORTF	set	3973
   127  0000                     _PORTE	set	3972
   128  0000                     _PORTD	set	3971
   129  0000                     _PORTB	set	3969
   130  0000                     _PORTA	set	3968
   131  0000                     _TRISJ	set	3994
   132  0000                     _TRISH	set	3993
   133  0000                     _TRISG	set	3992
   134  0000                     _TRISF	set	3991
   135  0000                     _TRISE	set	3990
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISB	set	3987
   139  0000                     _TRISA	set	3986
   140  0000                     _ADCON1	set	4033
   141  0000                     _INTCONbits	set	4082
   142  0000                     _TMR1L	set	4046
   143  0000                     _TMR1H	set	4047
   144                           
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  000C20                     __pcinit:
   149                           	callstack 0
   150  000C20                     start_initialization:
   151                           	callstack 0
   152  000C20                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (4 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  000C20  0E36               	movlw	low __pidataCOMRAM
   158  000C22  6EF6               	movwf	tblptrl,c
   159  000C24  0E0D               	movlw	high __pidataCOMRAM
   160  000C26  6EF7               	movwf	tblptrh,c
   161  000C28  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162  000C2A  6EF8               	movwf	tblptru,c
   163  000C2C  EE00  F02C         	lfsr	0,__pdataCOMRAM
   164  000C30  EE10 F004          	lfsr	1,4
   165  000C34                     copy_data0:
   166  000C34  0009               	tblrd		*+
   167  000C36  CFF5 FFEE          	movff	tablat,postinc0
   168  000C3A  50E5               	movf	postdec1,w,c
   169  000C3C  50E1               	movf	fsr1l,w,c
   170  000C3E  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (13 bytes)
   173  000C40  EE00  F017         	lfsr	0,__pbssCOMRAM
   174  000C44  0E0D               	movlw	13
   175  000C46                     clear_0:
   176  000C46  6AEE               	clrf	postinc0,c
   177  000C48  06E8               	decf	wreg,f,c
   178  000C4A  E1FD               	bnz	clear_0
   179  000C4C                     end_of_initialization:
   180                           	callstack 0
   181  000C4C                     __end_of__initialization:
   182                           	callstack 0
   183  000C4C  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  000C4E  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  000C50  0100               	movlb	0
   186  000C52  EFC9  F005         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189  000017                     __pbssCOMRAM:
   190                           	callstack 0
   191  000017                     _tmr_ticks_left:
   192                           	callstack 0
   193  000017                     	ds	1
   194  000018                     _tmr_startreq:
   195                           	callstack 0
   196  000018                     	ds	1
   197  000019                     _tmr_state:
   198                           	callstack 0
   199  000019                     	ds	1
   200  00001A                     _level_subcount:
   201                           	callstack 0
   202  00001A                     	ds	1
   203  00001B                     _game_state:
   204                           	callstack 0
   205  00001B                     	ds	1
   206  00001C                     _htmrval:
   207                           	callstack 0
   208  00001C                     	ds	1
   209  00001D                     _tmr1flag:
   210                           	callstack 0
   211  00001D                     	ds	1
   212  00001E                     _isPressed:
   213                           	callstack 0
   214  00001E                     	ds	1
   215  00001F                     _isRC0Pressed:
   216                           	callstack 0
   217  00001F                     	ds	1
   218  000020                     _isGameFinished:
   219                           	callstack 0
   220  000020                     	ds	1
   221  000021                     _isGameStarted:
   222                           	callstack 0
   223  000021                     	ds	1
   224  000022                     _sevenSegCounter:
   225                           	callstack 0
   226  000022                     	ds	1
   227  000023                     _ltmrval:
   228                           	callstack 0
   229  000023                     	ds	1
   230                           
   231                           	psect	dataCOMRAM
   232  00002C                     __pdataCOMRAM:
   233                           	callstack 0
   234  00002C                     _game_level:
   235                           	callstack 0
   236  00002C                     	ds	1
   237  00002D                     _L3:
   238                           	callstack 0
   239  00002D                     	ds	1
   240  00002E                     _L2:
   241                           	callstack 0
   242  00002E                     	ds	1
   243  00002F                     _L1:
   244                           	callstack 0
   245  00002F                     	ds	1
   246                           
   247                           	psect	cstackCOMRAM
   248  000001                     __pcstackCOMRAM:
   249                           	callstack 0
   250  000001                     ?i2___awmod:
   251                           	callstack 0
   252  000001                     i2___awmod@dividend:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  000001                     	ds	2
   257  000003                     i2___awmod@divisor:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  000003                     	ds	2
   262  000005                     i2___awmod@counter:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x4
   266  000005                     	ds	1
   267  000006                     i2___awmod@sign:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x5
   271  000006                     	ds	1
   272  000007                     ??_lowPriorityISR:
   273                           
   274                           ; 1 bytes @ 0x6
   275  000007                     	ds	1
   276  000008                     ?___awmod:
   277                           	callstack 0
   278  000008                     tmr_start@ticks:
   279                           	callstack 0
   280  000008                     sevenSeg@D:
   281                           	callstack 0
   282  000008                     ___awmod@dividend:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x7
   286  000008                     	ds	1
   287  000009                     ??_sevenSeg:
   288                           
   289                           ; 1 bytes @ 0x8
   290  000009                     	ds	1
   291  00000A                     ___awmod@divisor:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x9
   295  00000A                     	ds	1
   296  00000B                     sevenSeg@J:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0xA
   300  00000B                     	ds	1
   301  00000C                     ___awmod@counter:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xB
   305  00000C                     	ds	1
   306  00000D                     ___awmod@sign:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xC
   310  00000D                     	ds	1
   311  00000E                     ??_sevenSeg_controller:
   312  00000E                     randomgen@i:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xD
   316  00000E                     	ds	1
   317  00000F                     randomgen@val:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xE
   321  00000F                     	ds	1
   322  000010                     randomgen@noteval:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xF
   326  000010                     	ds	1
   327  000011                     randomgen@num:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x10
   331  000011                     	ds	1
   332  000012                     randomgen@lastbit:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x11
   336  000012                     	ds	1
   337  000013                     randomgen@intermbit:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x12
   341  000013                     	ds	1
   342  000014                     ??_game_task:
   343                           
   344                           ; 1 bytes @ 0x13
   345  000014                     	ds	2
   346  000016                     game_task@count:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x15
   350  000016                     	ds	1
   351  000017                     
   352                           ; 1 bytes @ 0x16
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 678 in file "newmain.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels required when called:    6
   378 ;; This function calls:
   379 ;;		_game_task
   380 ;;		_init_irq
   381 ;;		_init_ports
   382 ;;		_init_vars
   383 ;;		_input_task
   384 ;;		_sevenSeg_controller
   385 ;;		_tmr_init
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text0
   392  000B92                     __ptext0:
   393                           	callstack 0
   394  000B92                     _main:
   395                           	callstack 25
   396  000B92                     
   397                           ;newmain.c: 680:             continue;
   398  000B92  EC43  F006         	call	_init_vars	;wreg free
   399                           
   400                           ;newmain.c: 681:         }
   401  000B96  ECED  F005         	call	_init_ports	;wreg free
   402                           
   403                           ;newmain.c: 682:         game_task();
   404  000B9A  EC7E  F006         	call	_tmr_init	;wreg free
   405                           
   406                           ;newmain.c: 683:     }
   407  000B9E  EC95  F006         	call	_init_irq	;wreg free
   408  000BA2                     l320:
   409  000BA2  ECEC  F002         	call	_input_task	;wreg free
   410  000BA6  ECCA  F001         	call	_sevenSeg_controller	;wreg free
   411  000BAA  5021               	movf	_isGameStarted^0,w,c
   412  000BAC  B4D8               	btfsc	status,2,c
   413  000BAE  EFDB  F005         	goto	u1401
   414  000BB2  EFDD  F005         	goto	u1400
   415  000BB6                     u1401:
   416  000BB6  EFD1  F005         	goto	l320
   417  000BBA                     u1400:
   418  000BBA  0420               	decf	_isGameFinished^0,w,c
   419  000BBC  A4D8               	btfss	status,2,c
   420  000BBE  EFE3  F005         	goto	u1411
   421  000BC2  EFE5  F005         	goto	u1410
   422  000BC6                     u1411:
   423  000BC6  EFE7  F005         	goto	l2024
   424  000BCA                     u1410:
   425  000BCA  EFD1  F005         	goto	l320
   426  000BCE                     l2024:
   427  000BCE  EC15  F000         	call	_game_task	;wreg free
   428  000BD2  EFD1  F005         	goto	l320
   429  000BD6  EF13  F000         	goto	start
   430  000BDA                     __end_of_main:
   431                           	callstack 0
   432                           
   433 ;; *************** function _tmr_init *****************
   434 ;; Defined at:
   435 ;;		line 126 in file "newmain.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    3
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text1
   464  000CFC                     __ptext1:
   465                           	callstack 0
   466  000CFC                     _tmr_init:
   467                           	callstack 27
   468  000CFC                     
   469                           ;newmain.c: 131:     INTCONbits.T0IF = 0;
   470  000CFC  0E47               	movlw	71
   471  000CFE  6ED5               	movwf	213,c	;volatile
   472                           
   473                           ;newmain.c: 132:     T0CON |= 0x80;
   474  000D00  0E00               	movlw	0
   475  000D02  6ED7               	movwf	215,c	;volatile
   476  000D04  0E00               	movlw	0
   477  000D06  6ED6               	movwf	214,c	;volatile
   478                           
   479                           ;newmain.c: 133: }
   480  000D08  0EC9               	movlw	201
   481  000D0A  6ECD               	movwf	205,c	;volatile
   482  000D0C  0012               	return		;funcret
   483  000D0E                     __end_of_tmr_init:
   484                           	callstack 0
   485                           
   486 ;; *************** function _sevenSeg_controller *****************
   487 ;; Defined at:
   488 ;;		line 313 in file "newmain.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;Total ram usage:        2 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; Hardware stack levels required when called:    4
   509 ;; This function calls:
   510 ;;		___awmod
   511 ;;		_sevenSeg
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text2
   518  000394                     __ptext2:
   519                           	callstack 0
   520  000394                     _sevenSeg_controller:
   521                           	callstack 26
   522  000394                     
   523                           ;newmain.c: 315:             sevenSeg(game_level, 3);
   524  000394  EFBE  F002         	goto	l1772
   525  000398                     l193:
   526                           
   527                           ;newmain.c: 318:         if (sevenSegCounter % 2 == 0)
   528  000398  B022               	btfsc	_sevenSegCounter^0,0,c
   529  00039A  EFD1  F001         	goto	u961
   530  00039E  EFD3  F001         	goto	u960
   531  0003A2                     u961:
   532  0003A2  EFDA  F001         	goto	l1724
   533  0003A6                     u960:
   534  0003A6                     
   535                           ;newmain.c: 319:             sevenSeg(health, 0);
   536  0003A6  0E00               	movlw	0
   537  0003A8  6E08               	movwf	sevenSeg@D^0,c
   538  0003AA  502B               	movf	_health^0,w,c
   539  0003AC  EC6B  F004         	call	_sevenSeg
   540  0003B0  EFEB  F002         	goto	l224
   541  0003B4                     l1724:
   542                           
   543                           ;newmain.c: 321:             sevenSeg(game_level, 3);
   544  0003B4  0E03               	movlw	3
   545  0003B6  6E08               	movwf	sevenSeg@D^0,c
   546  0003B8  502C               	movf	_game_level^0,w,c
   547  0003BA  EC6B  F004         	call	_sevenSeg
   548  0003BE  EFEB  F002         	goto	l224
   549  0003C2                     l197:
   550                           
   551                           ;newmain.c: 324:         if (sevenSegCounter % 2 == 0)
   552  0003C2  B022               	btfsc	_sevenSegCounter^0,0,c
   553  0003C4  EFE6  F001         	goto	u971
   554  0003C8  EFE8  F001         	goto	u970
   555  0003CC                     u971:
   556  0003CC  EFEF  F001         	goto	l1728
   557  0003D0                     u970:
   558  0003D0                     
   559                           ;newmain.c: 325:             sevenSeg(health, 0);
   560  0003D0  0E00               	movlw	0
   561  0003D2  6E08               	movwf	sevenSeg@D^0,c
   562  0003D4  502B               	movf	_health^0,w,c
   563  0003D6  EC6B  F004         	call	_sevenSeg
   564  0003DA  EFEB  F002         	goto	l224
   565  0003DE                     l1728:
   566                           
   567                           ;newmain.c: 327:             sevenSeg(game_level, 3);
   568  0003DE  0E03               	movlw	3
   569  0003E0  6E08               	movwf	sevenSeg@D^0,c
   570  0003E2  502C               	movf	_game_level^0,w,c
   571  0003E4  EC6B  F004         	call	_sevenSeg
   572  0003E8  EFEB  F002         	goto	l224
   573  0003EC                     l200:
   574                           
   575                           ;newmain.c: 330:     case LEVEL3_INIT:
   576  0003EC  B022               	btfsc	_sevenSegCounter^0,0,c
   577  0003EE  EFFB  F001         	goto	u981
   578  0003F2  EFFD  F001         	goto	u980
   579  0003F6                     u981:
   580  0003F6  EF04  F002         	goto	l1732
   581  0003FA                     u980:
   582  0003FA                     
   583                           ;newmain.c: 331:         if (sevenSegCounter % 2 == 0)
   584  0003FA  0E00               	movlw	0
   585  0003FC  6E08               	movwf	sevenSeg@D^0,c
   586  0003FE  502B               	movf	_health^0,w,c
   587  000400  EC6B  F004         	call	_sevenSeg
   588  000404  EFEB  F002         	goto	l224
   589  000408                     l1732:
   590                           
   591                           ;newmain.c: 333:         else
   592  000408  0E03               	movlw	3
   593  00040A  6E08               	movwf	sevenSeg@D^0,c
   594  00040C  502C               	movf	_game_level^0,w,c
   595  00040E  EC6B  F004         	call	_sevenSeg
   596  000412  EFEB  F002         	goto	l224
   597  000416                     l203:
   598                           
   599                           ;newmain.c: 336:     case LEVEL3:
   600  000416  B022               	btfsc	_sevenSegCounter^0,0,c
   601  000418  EF10  F002         	goto	u991
   602  00041C  EF12  F002         	goto	u990
   603  000420                     u991:
   604  000420  EF19  F002         	goto	l1736
   605  000424                     u990:
   606  000424                     
   607                           ;newmain.c: 337:         if (sevenSegCounter % 2 == 0)
   608  000424  0E00               	movlw	0
   609  000426  6E08               	movwf	sevenSeg@D^0,c
   610  000428  502B               	movf	_health^0,w,c
   611  00042A  EC6B  F004         	call	_sevenSeg
   612  00042E  EFEB  F002         	goto	l224
   613  000432                     l1736:
   614                           
   615                           ;newmain.c: 339:         else
   616  000432  0E03               	movlw	3
   617  000434  6E08               	movwf	sevenSeg@D^0,c
   618  000436  502C               	movf	_game_level^0,w,c
   619  000438  EC6B  F004         	call	_sevenSeg
   620  00043C  EFEB  F002         	goto	l224
   621  000440                     l206:
   622                           
   623                           ;newmain.c: 343:         if (sevenSegCounter % 3 == 0)
   624  000440  B022               	btfsc	_sevenSegCounter^0,0,c
   625  000442  EF25  F002         	goto	u1001
   626  000446  EF27  F002         	goto	u1000
   627  00044A                     u1001:
   628  00044A  EF2E  F002         	goto	l1740
   629  00044E                     u1000:
   630  00044E                     
   631                           ;newmain.c: 344:             sevenSeg(11, 0);
   632  00044E  0E00               	movlw	0
   633  000450  6E08               	movwf	sevenSeg@D^0,c
   634  000452  502B               	movf	_health^0,w,c
   635  000454  EC6B  F004         	call	_sevenSeg
   636  000458  EFEB  F002         	goto	l224
   637  00045C                     l1740:
   638                           
   639                           ;newmain.c: 346:             sevenSeg(12, 1);
   640  00045C  0E03               	movlw	3
   641  00045E  6E08               	movwf	sevenSeg@D^0,c
   642  000460  502C               	movf	_game_level^0,w,c
   643  000462  EC6B  F004         	call	_sevenSeg
   644  000466  EFEB  F002         	goto	l224
   645  00046A                     l209:
   646                           
   647                           ;newmain.c: 349:         break;
   648  00046A  B022               	btfsc	_sevenSegCounter^0,0,c
   649  00046C  EF3A  F002         	goto	u1011
   650  000470  EF3C  F002         	goto	u1010
   651  000474                     u1011:
   652  000474  EF43  F002         	goto	l1744
   653  000478                     u1010:
   654  000478                     
   655                           ;newmain.c: 350:     case LOSE:
   656  000478  0E00               	movlw	0
   657  00047A  6E08               	movwf	sevenSeg@D^0,c
   658  00047C  502B               	movf	_health^0,w,c
   659  00047E  EC6B  F004         	call	_sevenSeg
   660  000482  EFEB  F002         	goto	l224
   661  000486                     l1744:
   662                           
   663                           ;newmain.c: 352:             sevenSeg(10, 0);
   664  000486  0E03               	movlw	3
   665  000488  6E08               	movwf	sevenSeg@D^0,c
   666  00048A  502C               	movf	_game_level^0,w,c
   667  00048C  EC6B  F004         	call	_sevenSeg
   668  000490  EFEB  F002         	goto	l224
   669  000494                     l1746:
   670                           
   671                           ;newmain.c: 355:         else if (sevenSegCounter % 4 == 2)
   672  000494  C022  F008         	movff	_sevenSegCounter,___awmod@dividend
   673  000498  6A09               	clrf	(___awmod@dividend+1)^0,c
   674  00049A  0E00               	movlw	0
   675  00049C  6E0B               	movwf	(___awmod@divisor+1)^0,c
   676  00049E  0E03               	movlw	3
   677  0004A0  6E0A               	movwf	___awmod@divisor^0,c
   678  0004A2  EC19  F005         	call	___awmod	;wreg free
   679  0004A6  5008               	movf	?___awmod^0,w,c
   680  0004A8  1009               	iorwf	(?___awmod+1)^0,w,c
   681  0004AA  A4D8               	btfss	status,2,c
   682  0004AC  EF5A  F002         	goto	u1021
   683  0004B0  EF5C  F002         	goto	u1020
   684  0004B4                     u1021:
   685  0004B4  EF63  F002         	goto	l1750
   686  0004B8                     u1020:
   687  0004B8                     
   688                           ;newmain.c: 356:             sevenSeg(5, 2);
   689  0004B8  0E00               	movlw	0
   690  0004BA  6E08               	movwf	sevenSeg@D^0,c
   691  0004BC  0E0B               	movlw	11
   692  0004BE  EC6B  F004         	call	_sevenSeg
   693  0004C2  EFEB  F002         	goto	l224
   694  0004C6                     l1750:
   695  0004C6  C022  F008         	movff	_sevenSegCounter,___awmod@dividend
   696  0004CA  6A09               	clrf	(___awmod@dividend+1)^0,c
   697  0004CC  0E00               	movlw	0
   698  0004CE  6E0B               	movwf	(___awmod@divisor+1)^0,c
   699  0004D0  0E03               	movlw	3
   700  0004D2  6E0A               	movwf	___awmod@divisor^0,c
   701  0004D4  EC19  F005         	call	___awmod	;wreg free
   702  0004D8  0408               	decf	?___awmod^0,w,c
   703  0004DA  1009               	iorwf	(?___awmod+1)^0,w,c
   704  0004DC  A4D8               	btfss	status,2,c
   705  0004DE  EF73  F002         	goto	u1031
   706  0004E2  EF75  F002         	goto	u1030
   707  0004E6                     u1031:
   708  0004E6  EF7C  F002         	goto	l1754
   709  0004EA                     u1030:
   710  0004EA                     
   711                           ;newmain.c: 358:             sevenSeg(11, 3);
   712  0004EA  0E01               	movlw	1
   713  0004EC  6E08               	movwf	sevenSeg@D^0,c
   714  0004EE  0E0C               	movlw	12
   715  0004F0  EC6B  F004         	call	_sevenSeg
   716  0004F4  EFEB  F002         	goto	l224
   717  0004F8                     l1754:
   718                           
   719                           ;newmain.c: 360:     }
   720  0004F8  0E02               	movlw	2
   721  0004FA  6E08               	movwf	sevenSeg@D^0,c
   722  0004FC  0E0D               	movlw	13
   723  0004FE  EC6B  F004         	call	_sevenSeg
   724  000502  EFEB  F002         	goto	l224
   725  000506                     l1756:
   726                           
   727                           ;newmain.c: 363: void sevenSeg(uint8_t J, uint8_t D)
   728  000506  C022  F00E         	movff	_sevenSegCounter,??_sevenSeg_controller
   729  00050A  0E03               	movlw	3
   730  00050C  160E               	andwf	??_sevenSeg_controller^0,f,c
   731  00050E  A4D8               	btfss	status,2,c
   732  000510  EF8C  F002         	goto	u1041
   733  000514  EF8E  F002         	goto	u1040
   734  000518                     u1041:
   735  000518  EF95  F002         	goto	l1760
   736  00051C                     u1040:
   737  00051C                     
   738                           ;newmain.c: 364: {
   739  00051C  0E00               	movlw	0
   740  00051E  6E08               	movwf	sevenSeg@D^0,c
   741  000520  0E0A               	movlw	10
   742  000522  EC6B  F004         	call	_sevenSeg
   743  000526  EFEB  F002         	goto	l224
   744  00052A                     l1760:
   745  00052A  5022               	movf	_sevenSegCounter^0,w,c
   746  00052C  0B03               	andlw	3
   747  00052E  06E8               	decf	wreg,f,c
   748  000530  A4D8               	btfss	status,2,c
   749  000532  EF9D  F002         	goto	u1051
   750  000536  EF9F  F002         	goto	u1050
   751  00053A                     u1051:
   752  00053A  EFA6  F002         	goto	l1764
   753  00053E                     u1050:
   754  00053E                     
   755                           ;newmain.c: 366:     {
   756  00053E  0E01               	movlw	1
   757  000540  6E08               	movwf	sevenSeg@D^0,c
   758  000542  0E00               	movlw	0
   759  000544  EC6B  F004         	call	_sevenSeg
   760  000548  EFEB  F002         	goto	l224
   761  00054C                     l1764:
   762  00054C  5022               	movf	_sevenSegCounter^0,w,c
   763  00054E  0B03               	andlw	3
   764  000550  0A02               	xorlw	2
   765  000552  A4D8               	btfss	status,2,c
   766  000554  EFAE  F002         	goto	u1061
   767  000558  EFB0  F002         	goto	u1060
   768  00055C                     u1061:
   769  00055C  EFB7  F002         	goto	l1768
   770  000560                     u1060:
   771  000560                     
   772                           ;newmain.c: 368: 
   773  000560  0E02               	movlw	2
   774  000562  6E08               	movwf	sevenSeg@D^0,c
   775  000564  0E05               	movlw	5
   776  000566  EC6B  F004         	call	_sevenSeg
   777  00056A  EFEB  F002         	goto	l224
   778  00056E                     l1768:
   779                           
   780                           ;newmain.c: 370:         PORTJ = 0x3f;
   781  00056E  0E03               	movlw	3
   782  000570  6E08               	movwf	sevenSeg@D^0,c
   783  000572  0E0B               	movlw	11
   784  000574  EC6B  F004         	call	_sevenSeg
   785  000578  EFEB  F002         	goto	l224
   786  00057C                     l1772:
   787  00057C  501B               	movf	_game_state^0,w,c
   788  00057E  6E0E               	movwf	??_sevenSeg_controller^0,c
   789  000580  6A0F               	clrf	(??_sevenSeg_controller+1)^0,c
   790                           
   791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   792                           ; Switch size 1, requested type "simple"
   793                           ; Number of cases is 1, Range of values is 0 to 0
   794                           ; switch strategies available:
   795                           ; Name         Instructions Cycles
   796                           ; simple_byte            4     3 (average)
   797                           ;	Chosen strategy is simple_byte
   798  000582  500F               	movf	(??_sevenSeg_controller+1)^0,w,c
   799  000584  0A00               	xorlw	0	; case 0
   800  000586  B4D8               	btfsc	status,2,c
   801  000588  EFC8  F002         	goto	l2050
   802  00058C  EFEB  F002         	goto	l224
   803  000590                     l2050:
   804                           
   805                           ; Switch size 1, requested type "simple"
   806                           ; Number of cases is 8, Range of values is 0 to 7
   807                           ; switch strategies available:
   808                           ; Name         Instructions Cycles
   809                           ; simple_byte           25    13 (average)
   810                           ;	Chosen strategy is simple_byte
   811  000590  500E               	movf	??_sevenSeg_controller^0,w,c
   812  000592  0A00               	xorlw	0	; case 0
   813  000594  B4D8               	btfsc	status,2,c
   814  000596  EFCC  F001         	goto	l193
   815  00059A  0A01               	xorlw	1	; case 1
   816  00059C  B4D8               	btfsc	status,2,c
   817  00059E  EFE1  F001         	goto	l197
   818  0005A2  0A03               	xorlw	3	; case 2
   819  0005A4  B4D8               	btfsc	status,2,c
   820  0005A6  EFF6  F001         	goto	l200
   821  0005AA  0A01               	xorlw	1	; case 3
   822  0005AC  B4D8               	btfsc	status,2,c
   823  0005AE  EF0B  F002         	goto	l203
   824  0005B2  0A07               	xorlw	7	; case 4
   825  0005B4  B4D8               	btfsc	status,2,c
   826  0005B6  EF20  F002         	goto	l206
   827  0005BA  0A01               	xorlw	1	; case 5
   828  0005BC  B4D8               	btfsc	status,2,c
   829  0005BE  EF35  F002         	goto	l209
   830  0005C2  0A03               	xorlw	3	; case 6
   831  0005C4  B4D8               	btfsc	status,2,c
   832  0005C6  EF4A  F002         	goto	l1746
   833  0005CA  0A01               	xorlw	1	; case 7
   834  0005CC  B4D8               	btfsc	status,2,c
   835  0005CE  EF83  F002         	goto	l1756
   836  0005D2  EFEB  F002         	goto	l224
   837  0005D6                     l224:
   838  0005D6  0012               	return		;funcret
   839  0005D8                     __end_of_sevenSeg_controller:
   840                           	callstack 0
   841                           
   842 ;; *************** function _sevenSeg *****************
   843 ;; Defined at:
   844 ;;		line 375 in file "newmain.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  J               1    wreg     unsigned char 
   847 ;;  D               1    7[COMRAM] unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  J               1   10[COMRAM] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        4 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    3
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_sevenSeg_controller
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text3
   874  0008D6                     __ptext3:
   875                           	callstack 0
   876  0008D6                     _sevenSeg:
   877                           	callstack 26
   878                           
   879                           ;incstack = 0
   880                           ;sevenSeg@J stored from wreg
   881  0008D6  6E0B               	movwf	sevenSeg@J^0,c
   882  0008D8                     
   883                           ;newmain.c: 375:     case 2:;newmain.c: 376:         PORTJ = 0x5b;;newmain.c: 377:      
      +                             break;
   884  0008D8  EFA6  F004         	goto	l1698
   885  0008DC                     l1668:
   886                           
   887                           ;newmain.c: 382:         PORTJ = 0x66;
   888  0008DC  0E3F               	movlw	63
   889  0008DE  6E88               	movwf	136,c	;volatile
   890                           
   891                           ;newmain.c: 383:         break;
   892  0008E0  EFFB  F004         	goto	l1710
   893  0008E4                     l1670:
   894                           
   895                           ;newmain.c: 385:         PORTJ = 0x6d;
   896  0008E4  0E06               	movlw	6
   897  0008E6  6E88               	movwf	136,c	;volatile
   898                           
   899                           ;newmain.c: 386:         break;
   900  0008E8  EFFB  F004         	goto	l1710
   901  0008EC                     l1672:
   902                           
   903                           ;newmain.c: 388:         PORTJ = 0x7d;
   904  0008EC  0E5B               	movlw	91
   905  0008EE  6E88               	movwf	136,c	;volatile
   906                           
   907                           ;newmain.c: 389:         break;
   908  0008F0  EFFB  F004         	goto	l1710
   909  0008F4                     l1674:
   910                           
   911                           ;newmain.c: 391:         PORTJ = 0x07;
   912  0008F4  0E4F               	movlw	79
   913  0008F6  6E88               	movwf	136,c	;volatile
   914                           
   915                           ;newmain.c: 392:         break;
   916  0008F8  EFFB  F004         	goto	l1710
   917  0008FC                     l1676:
   918                           
   919                           ;newmain.c: 394:         PORTJ = 0x7f;
   920  0008FC  0E66               	movlw	102
   921  0008FE  6E88               	movwf	136,c	;volatile
   922                           
   923                           ;newmain.c: 395:         break;
   924  000900  EFFB  F004         	goto	l1710
   925  000904                     l1678:
   926                           
   927                           ;newmain.c: 397:         PORTJ = 0x6f;
   928  000904  0E6D               	movlw	109
   929  000906  6E88               	movwf	136,c	;volatile
   930                           
   931                           ;newmain.c: 398:         break;
   932  000908  EFFB  F004         	goto	l1710
   933  00090C                     l1680:
   934                           
   935                           ;newmain.c: 400:         PORTJ = 0x38;
   936  00090C  0E7D               	movlw	125
   937  00090E  6E88               	movwf	136,c	;volatile
   938                           
   939                           ;newmain.c: 401:         break;
   940  000910  EFFB  F004         	goto	l1710
   941  000914                     l1682:
   942                           
   943                           ;newmain.c: 403:         PORTJ = 0x79;
   944  000914  0E07               	movlw	7
   945  000916  6E88               	movwf	136,c	;volatile
   946                           
   947                           ;newmain.c: 404:         break;
   948  000918  EFFB  F004         	goto	l1710
   949  00091C                     l1684:
   950                           
   951                           ;newmain.c: 406:         PORTJ = 0x54;
   952  00091C  0E7F               	movlw	127
   953  00091E  6E88               	movwf	136,c	;volatile
   954                           
   955                           ;newmain.c: 407:         break;
   956  000920  EFFB  F004         	goto	l1710
   957  000924                     l1686:
   958                           
   959                           ;newmain.c: 409:         PORTJ = 0x5e;
   960  000924  0E6F               	movlw	111
   961  000926  6E88               	movwf	136,c	;volatile
   962                           
   963                           ;newmain.c: 410:         break;
   964  000928  EFFB  F004         	goto	l1710
   965  00092C                     l1688:
   966                           
   967                           ;newmain.c: 412:     switch (D)
   968  00092C  0E38               	movlw	56
   969  00092E  6E88               	movwf	136,c	;volatile
   970                           
   971                           ;newmain.c: 413:     {
   972  000930  EFFB  F004         	goto	l1710
   973  000934                     l1690:
   974                           
   975                           ;newmain.c: 415:         PORTH = 0x01;
   976  000934  0E79               	movlw	121
   977  000936  6E88               	movwf	136,c	;volatile
   978                           
   979                           ;newmain.c: 416:         break;
   980  000938  EFFB  F004         	goto	l1710
   981  00093C                     l1692:
   982                           
   983                           ;newmain.c: 418:         PORTH = 0x02;
   984  00093C  0E54               	movlw	84
   985  00093E  6E88               	movwf	136,c	;volatile
   986                           
   987                           ;newmain.c: 419:         break;
   988  000940  EFFB  F004         	goto	l1710
   989  000944                     l1694:
   990                           
   991                           ;newmain.c: 421:         PORTH = 0x04;
   992  000944  0E5E               	movlw	94
   993  000946  6E88               	movwf	136,c	;volatile
   994                           
   995                           ;newmain.c: 422:         break;
   996  000948  EFFB  F004         	goto	l1710
   997  00094C                     l1698:
   998  00094C  500B               	movf	sevenSeg@J^0,w,c
   999  00094E  6E09               	movwf	??_sevenSeg^0,c
  1000  000950  6A0A               	clrf	(??_sevenSeg+1)^0,c
  1001                           
  1002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 1, Range of values is 0 to 0
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte            4     3 (average)
  1008                           ;	Chosen strategy is simple_byte
  1009  000952  500A               	movf	(??_sevenSeg+1)^0,w,c
  1010  000954  0A00               	xorlw	0	; case 0
  1011  000956  B4D8               	btfsc	status,2,c
  1012  000958  EFB0  F004         	goto	l2052
  1013  00095C  EFFB  F004         	goto	l1710
  1014  000960                     l2052:
  1015                           
  1016                           ; Switch size 1, requested type "simple"
  1017                           ; Number of cases is 14, Range of values is 0 to 13
  1018                           ; switch strategies available:
  1019                           ; Name         Instructions Cycles
  1020                           ; simple_byte           43    22 (average)
  1021                           ;	Chosen strategy is simple_byte
  1022  000960  5009               	movf	??_sevenSeg^0,w,c
  1023  000962  0A00               	xorlw	0	; case 0
  1024  000964  B4D8               	btfsc	status,2,c
  1025  000966  EF6E  F004         	goto	l1668
  1026  00096A  0A01               	xorlw	1	; case 1
  1027  00096C  B4D8               	btfsc	status,2,c
  1028  00096E  EF72  F004         	goto	l1670
  1029  000972  0A03               	xorlw	3	; case 2
  1030  000974  B4D8               	btfsc	status,2,c
  1031  000976  EF76  F004         	goto	l1672
  1032  00097A  0A01               	xorlw	1	; case 3
  1033  00097C  B4D8               	btfsc	status,2,c
  1034  00097E  EF7A  F004         	goto	l1674
  1035  000982  0A07               	xorlw	7	; case 4
  1036  000984  B4D8               	btfsc	status,2,c
  1037  000986  EF7E  F004         	goto	l1676
  1038  00098A  0A01               	xorlw	1	; case 5
  1039  00098C  B4D8               	btfsc	status,2,c
  1040  00098E  EF82  F004         	goto	l1678
  1041  000992  0A03               	xorlw	3	; case 6
  1042  000994  B4D8               	btfsc	status,2,c
  1043  000996  EF86  F004         	goto	l1680
  1044  00099A  0A01               	xorlw	1	; case 7
  1045  00099C  B4D8               	btfsc	status,2,c
  1046  00099E  EF8A  F004         	goto	l1682
  1047  0009A2  0A0F               	xorlw	15	; case 8
  1048  0009A4  B4D8               	btfsc	status,2,c
  1049  0009A6  EF8E  F004         	goto	l1684
  1050  0009AA  0A01               	xorlw	1	; case 9
  1051  0009AC  B4D8               	btfsc	status,2,c
  1052  0009AE  EF92  F004         	goto	l1686
  1053  0009B2  0A03               	xorlw	3	; case 10
  1054  0009B4  B4D8               	btfsc	status,2,c
  1055  0009B6  EF96  F004         	goto	l1688
  1056  0009BA  0A01               	xorlw	1	; case 11
  1057  0009BC  B4D8               	btfsc	status,2,c
  1058  0009BE  EF9A  F004         	goto	l1690
  1059  0009C2  0A07               	xorlw	7	; case 12
  1060  0009C4  B4D8               	btfsc	status,2,c
  1061  0009C6  EF9E  F004         	goto	l1692
  1062  0009CA  0A01               	xorlw	1	; case 13
  1063  0009CC  B4D8               	btfsc	status,2,c
  1064  0009CE  EFA2  F004         	goto	l1694
  1065  0009D2  EFFB  F004         	goto	l1710
  1066  0009D6                     l1700:
  1067                           
  1068                           ;newmain.c: 427: }
  1069  0009D6  0E01               	movlw	1
  1070  0009D8  6E87               	movwf	135,c	;volatile
  1071                           
  1072                           ;newmain.c: 428: 
  1073  0009DA  EF18  F005         	goto	l249
  1074  0009DE                     l1702:
  1075                           
  1076                           ;newmain.c: 430: 
  1077  0009DE  0E02               	movlw	2
  1078  0009E0  6E87               	movwf	135,c	;volatile
  1079                           
  1080                           ;newmain.c: 431: 
  1081  0009E2  EF18  F005         	goto	l249
  1082  0009E6                     l1704:
  1083                           
  1084                           ;newmain.c: 433: void shape_shifter()
  1085  0009E6  0E04               	movlw	4
  1086  0009E8  6E87               	movwf	135,c	;volatile
  1087                           
  1088                           ;newmain.c: 434: {
  1089  0009EA  EF18  F005         	goto	l249
  1090  0009EE                     l1706:
  1091                           
  1092                           ;newmain.c: 436:     PORTE = PORTD;
  1093  0009EE  0E08               	movlw	8
  1094  0009F0  6E87               	movwf	135,c	;volatile
  1095                           
  1096                           ;newmain.c: 437:     PORTD = PORTC;
  1097  0009F2  EF18  F005         	goto	l249
  1098  0009F6                     l1710:
  1099  0009F6  5008               	movf	sevenSeg@D^0,w,c
  1100  0009F8  6E09               	movwf	??_sevenSeg^0,c
  1101  0009FA  6A0A               	clrf	(??_sevenSeg+1)^0,c
  1102                           
  1103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1104                           ; Switch size 1, requested type "simple"
  1105                           ; Number of cases is 1, Range of values is 0 to 0
  1106                           ; switch strategies available:
  1107                           ; Name         Instructions Cycles
  1108                           ; simple_byte            4     3 (average)
  1109                           ;	Chosen strategy is simple_byte
  1110  0009FC  500A               	movf	(??_sevenSeg+1)^0,w,c
  1111  0009FE  0A00               	xorlw	0	; case 0
  1112  000A00  B4D8               	btfsc	status,2,c
  1113  000A02  EF05  F005         	goto	l2054
  1114  000A06  EF18  F005         	goto	l249
  1115  000A0A                     l2054:
  1116                           
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 4, Range of values is 0 to 3
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte           13     7 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123  000A0A  5009               	movf	??_sevenSeg^0,w,c
  1124  000A0C  0A00               	xorlw	0	; case 0
  1125  000A0E  B4D8               	btfsc	status,2,c
  1126  000A10  EFEB  F004         	goto	l1700
  1127  000A14  0A01               	xorlw	1	; case 1
  1128  000A16  B4D8               	btfsc	status,2,c
  1129  000A18  EFEF  F004         	goto	l1702
  1130  000A1C  0A03               	xorlw	3	; case 2
  1131  000A1E  B4D8               	btfsc	status,2,c
  1132  000A20  EFF3  F004         	goto	l1704
  1133  000A24  0A01               	xorlw	1	; case 3
  1134  000A26  B4D8               	btfsc	status,2,c
  1135  000A28  EFF7  F004         	goto	l1706
  1136  000A2C  EF18  F005         	goto	l249
  1137  000A30                     l249:
  1138  000A30  0012               	return		;funcret
  1139  000A32                     __end_of_sevenSeg:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _input_task *****************
  1143 ;; Defined at:
  1144 ;;		line 217 in file "newmain.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    3
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text4
  1173  0005D8                     __ptext4:
  1174                           	callstack 0
  1175  0005D8                     _input_task:
  1176                           	callstack 27
  1177  0005D8                     
  1178                           ;newmain.c: 222:         }
  1179  0005D8  5021               	movf	_isGameStarted^0,w,c
  1180  0005DA  B4D8               	btfsc	status,2,c
  1181  0005DC  EFF2  F002         	goto	u161
  1182  0005E0  EFF4  F002         	goto	u160
  1183  0005E4                     u161:
  1184  0005E4  EFFC  F002         	goto	l1204
  1185  0005E8                     u160:
  1186  0005E8  5020               	movf	_isGameFinished^0,w,c
  1187  0005EA  B4D8               	btfsc	status,2,c
  1188  0005EC  EFFA  F002         	goto	u171
  1189  0005F0  EFFC  F002         	goto	u170
  1190  0005F4                     u171:
  1191  0005F4  EF22  F003         	goto	l162
  1192  0005F8                     u170:
  1193  0005F8                     l1204:
  1194                           
  1195                           ;newmain.c: 223:         else if (PORTCbits.RC0 == 1);newmain.c: 224:         {
  1196  0005F8  501F               	movf	_isRC0Pressed^0,w,c
  1197  0005FA  B4D8               	btfsc	status,2,c
  1198  0005FC  EF02  F003         	goto	u181
  1199  000600  EF04  F003         	goto	u180
  1200  000604                     u181:
  1201  000604  EF17  F003         	goto	l165
  1202  000608                     u180:
  1203  000608                     
  1204                           ;newmain.c: 225:             isRC0Pressed = 1;;newmain.c: 226:             game_state = 
      +                          G_INIT;
  1205  000608  B082               	btfsc	130,0,c	;volatile
  1206  00060A  EF09  F003         	goto	u191
  1207  00060E  EF0B  F003         	goto	u190
  1208  000612                     u191:
  1209  000612  EF22  F003         	goto	l162
  1210  000616                     u190:
  1211  000616                     
  1212                           ;newmain.c: 227:         };newmain.c: 228:     }
  1213  000616  0E00               	movlw	0
  1214  000618  6E1F               	movwf	_isRC0Pressed^0,c
  1215                           
  1216                           ;newmain.c: 229: 
  1217  00061A  0E01               	movlw	1
  1218  00061C  6E21               	movwf	_isGameStarted^0,c
  1219                           
  1220                           ;newmain.c: 230:     if (isRG0Pressed == 0)
  1221  00061E  0E00               	movlw	0
  1222  000620  6E20               	movwf	_isGameFinished^0,c
  1223                           
  1224                           ;newmain.c: 231:     {
  1225  000622  0E00               	movlw	0
  1226  000624  6E94               	movwf	148,c	;volatile
  1227                           
  1228                           ;newmain.c: 232:         if (PORTGbits.RG0 == 0)
  1229  000626  0E00               	movlw	0
  1230  000628  6E82               	movwf	130,c	;volatile
  1231  00062A  EF22  F003         	goto	l162
  1232  00062E                     l165:
  1233  00062E  A082               	btfss	130,0,c	;volatile
  1234  000630  EF1C  F003         	goto	u201
  1235  000634  EF1E  F003         	goto	u200
  1236  000638                     u201:
  1237  000638  EF22  F003         	goto	l162
  1238  00063C                     u200:
  1239  00063C                     
  1240                           ;newmain.c: 236:         };newmain.c: 237:     }
  1241  00063C  0E01               	movlw	1
  1242  00063E  6E1F               	movwf	_isRC0Pressed^0,c
  1243                           
  1244                           ;newmain.c: 238:     else if (PORTGbits.RG0 == 1)
  1245  000640  0E00               	movlw	0
  1246  000642  6E1B               	movwf	_game_state^0,c
  1247  000644                     l162:
  1248                           
  1249                           ;newmain.c: 242: 
  1250  000644  5029               	movf	_isRG0Pressed^0,w,c
  1251  000646  A4D8               	btfss	status,2,c
  1252  000648  EF28  F003         	goto	u211
  1253  00064C  EF2A  F003         	goto	u210
  1254  000650                     u211:
  1255  000650  EF37  F003         	goto	l169
  1256  000654                     u210:
  1257  000654                     
  1258                           ;newmain.c: 243:     if (isRG1Pressed == 0);newmain.c: 244:     {
  1259  000654  B086               	btfsc	134,0,c	;volatile
  1260  000656  EF2F  F003         	goto	u221
  1261  00065A  EF31  F003         	goto	u220
  1262  00065E                     u221:
  1263  00065E  EF40  F003         	goto	l171
  1264  000662                     u220:
  1265  000662                     
  1266                           ;newmain.c: 245:         if (PORTGbits.RG1 == 0);newmain.c: 246:         {
  1267  000662  0E01               	movlw	1
  1268  000664  6E29               	movwf	_isRG0Pressed^0,c
  1269                           
  1270                           ;newmain.c: 247:             isRG1Pressed = 1;
  1271  000666  0E00               	movlw	0
  1272  000668  6E24               	movwf	_whichRG^0,c
  1273  00066A  EF40  F003         	goto	l171
  1274  00066E                     l169:
  1275  00066E  A086               	btfss	134,0,c	;volatile
  1276  000670  EF3C  F003         	goto	u231
  1277  000674  EF3E  F003         	goto	u230
  1278  000678                     u231:
  1279  000678  EF40  F003         	goto	l171
  1280  00067C                     u230:
  1281  00067C                     
  1282                           ;newmain.c: 251:     else if (PORTGbits.RG1 == 1);newmain.c: 252:     {
  1283  00067C  0E00               	movlw	0
  1284  00067E  6E29               	movwf	_isRG0Pressed^0,c
  1285  000680                     l171:
  1286                           
  1287                           ;newmain.c: 255: 
  1288  000680  5028               	movf	_isRG1Pressed^0,w,c
  1289  000682  A4D8               	btfss	status,2,c
  1290  000684  EF46  F003         	goto	u241
  1291  000688  EF48  F003         	goto	u240
  1292  00068C                     u241:
  1293  00068C  EF55  F003         	goto	l173
  1294  000690                     u240:
  1295  000690                     
  1296                           ;newmain.c: 256:     if (isRG2Pressed == 0);newmain.c: 257:     {
  1297  000690  B286               	btfsc	134,1,c	;volatile
  1298  000692  EF4D  F003         	goto	u251
  1299  000696  EF4F  F003         	goto	u250
  1300  00069A                     u251:
  1301  00069A  EF5E  F003         	goto	l175
  1302  00069E                     u250:
  1303  00069E                     
  1304                           ;newmain.c: 258:         if (PORTGbits.RG2 == 0);newmain.c: 259:         {
  1305  00069E  0E01               	movlw	1
  1306  0006A0  6E28               	movwf	_isRG1Pressed^0,c
  1307                           
  1308                           ;newmain.c: 260:             isRG2Pressed = 1;
  1309  0006A2  0E01               	movlw	1
  1310  0006A4  6E24               	movwf	_whichRG^0,c
  1311  0006A6  EF5E  F003         	goto	l175
  1312  0006AA                     l173:
  1313  0006AA  A286               	btfss	134,1,c	;volatile
  1314  0006AC  EF5A  F003         	goto	u261
  1315  0006B0  EF5C  F003         	goto	u260
  1316  0006B4                     u261:
  1317  0006B4  EF5E  F003         	goto	l175
  1318  0006B8                     u260:
  1319  0006B8                     
  1320                           ;newmain.c: 264:     else if (PORTGbits.RG2 == 1);newmain.c: 265:     {
  1321  0006B8  0E00               	movlw	0
  1322  0006BA  6E28               	movwf	_isRG1Pressed^0,c
  1323  0006BC                     l175:
  1324                           
  1325                           ;newmain.c: 268: 
  1326  0006BC  5027               	movf	_isRG2Pressed^0,w,c
  1327  0006BE  A4D8               	btfss	status,2,c
  1328  0006C0  EF64  F003         	goto	u271
  1329  0006C4  EF66  F003         	goto	u270
  1330  0006C8                     u271:
  1331  0006C8  EF73  F003         	goto	l177
  1332  0006CC                     u270:
  1333  0006CC                     
  1334                           ;newmain.c: 269:     if (isRG3Pressed == 0);newmain.c: 270:     {
  1335  0006CC  B486               	btfsc	134,2,c	;volatile
  1336  0006CE  EF6B  F003         	goto	u281
  1337  0006D2  EF6D  F003         	goto	u280
  1338  0006D6                     u281:
  1339  0006D6  EF7C  F003         	goto	l179
  1340  0006DA                     u280:
  1341  0006DA                     
  1342                           ;newmain.c: 271:         if (PORTGbits.RG3 == 0);newmain.c: 272:         {
  1343  0006DA  0E01               	movlw	1
  1344  0006DC  6E27               	movwf	_isRG2Pressed^0,c
  1345                           
  1346                           ;newmain.c: 273:             isRG3Pressed = 1;
  1347  0006DE  0E02               	movlw	2
  1348  0006E0  6E24               	movwf	_whichRG^0,c
  1349  0006E2  EF7C  F003         	goto	l179
  1350  0006E6                     l177:
  1351  0006E6  A486               	btfss	134,2,c	;volatile
  1352  0006E8  EF78  F003         	goto	u291
  1353  0006EC  EF7A  F003         	goto	u290
  1354  0006F0                     u291:
  1355  0006F0  EF7C  F003         	goto	l179
  1356  0006F4                     u290:
  1357  0006F4                     
  1358                           ;newmain.c: 277:     else if (PORTGbits.RG3 == 1);newmain.c: 278:     {
  1359  0006F4  0E00               	movlw	0
  1360  0006F6  6E27               	movwf	_isRG2Pressed^0,c
  1361  0006F8                     l179:
  1362                           
  1363                           ;newmain.c: 281: 
  1364  0006F8  5026               	movf	_isRG3Pressed^0,w,c
  1365  0006FA  A4D8               	btfss	status,2,c
  1366  0006FC  EF82  F003         	goto	u301
  1367  000700  EF84  F003         	goto	u300
  1368  000704                     u301:
  1369  000704  EF91  F003         	goto	l181
  1370  000708                     u300:
  1371  000708                     
  1372                           ;newmain.c: 282:     if (isRG4Pressed == 0);newmain.c: 283:     {
  1373  000708  B686               	btfsc	134,3,c	;volatile
  1374  00070A  EF89  F003         	goto	u311
  1375  00070E  EF8B  F003         	goto	u310
  1376  000712                     u311:
  1377  000712  EF9A  F003         	goto	l183
  1378  000716                     u310:
  1379  000716                     
  1380                           ;newmain.c: 284:         if (PORTGbits.RG4 == 0);newmain.c: 285:         {
  1381  000716  0E01               	movlw	1
  1382  000718  6E26               	movwf	_isRG3Pressed^0,c
  1383                           
  1384                           ;newmain.c: 286:             isRG4Pressed = 1;
  1385  00071A  0E03               	movlw	3
  1386  00071C  6E24               	movwf	_whichRG^0,c
  1387  00071E  EF9A  F003         	goto	l183
  1388  000722                     l181:
  1389  000722  A686               	btfss	134,3,c	;volatile
  1390  000724  EF96  F003         	goto	u321
  1391  000728  EF98  F003         	goto	u320
  1392  00072C                     u321:
  1393  00072C  EF9A  F003         	goto	l183
  1394  000730                     u320:
  1395  000730                     
  1396                           ;newmain.c: 290:     else if (PORTGbits.RG4 == 1);newmain.c: 291:     {
  1397  000730  0E00               	movlw	0
  1398  000732  6E26               	movwf	_isRG3Pressed^0,c
  1399  000734                     l183:
  1400                           
  1401                           ;newmain.c: 294: }
  1402  000734  5025               	movf	_isRG4Pressed^0,w,c
  1403  000736  A4D8               	btfss	status,2,c
  1404  000738  EFA0  F003         	goto	u331
  1405  00073C  EFA2  F003         	goto	u330
  1406  000740                     u331:
  1407  000740  EFAF  F003         	goto	l185
  1408  000744                     u330:
  1409  000744                     
  1410                           ;newmain.c: 295: ;newmain.c: 296: 
  1411  000744  B886               	btfsc	134,4,c	;volatile
  1412  000746  EFA7  F003         	goto	u341
  1413  00074A  EFA9  F003         	goto	u340
  1414  00074E                     u341:
  1415  00074E  EFB8  F003         	goto	l189
  1416  000752                     u340:
  1417  000752                     
  1418                           ;newmain.c: 297: ;newmain.c: 298: 
  1419  000752  0E01               	movlw	1
  1420  000754  6E25               	movwf	_isRG4Pressed^0,c
  1421                           
  1422                           ;newmain.c: 299: 
  1423  000756  0E04               	movlw	4
  1424  000758  6E24               	movwf	_whichRG^0,c
  1425  00075A  EFB8  F003         	goto	l189
  1426  00075E                     l185:
  1427  00075E  A886               	btfss	134,4,c	;volatile
  1428  000760  EFB4  F003         	goto	u351
  1429  000764  EFB6  F003         	goto	u350
  1430  000768                     u351:
  1431  000768  EFB8  F003         	goto	l189
  1432  00076C                     u350:
  1433  00076C                     
  1434                           ;newmain.c: 303:     switch (game_state);newmain.c: 304:     {
  1435  00076C  0E00               	movlw	0
  1436  00076E  6E25               	movwf	_isRG4Pressed^0,c
  1437  000770                     l189:
  1438  000770  0012               	return		;funcret
  1439  000772                     __end_of_input_task:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _init_vars *****************
  1443 ;; Defined at:
  1444 ;;		line 60 in file "newmain.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    3
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text5
  1473  000C86                     __ptext5:
  1474                           	callstack 0
  1475  000C86                     _init_vars:
  1476                           	callstack 27
  1477  000C86                     
  1478                           ;newmain.c: 62:     isPressed = 0;
  1479  000C86  0E09               	movlw	9
  1480  000C88  6E2B               	movwf	_health^0,c
  1481                           
  1482                           ;newmain.c: 63: }
  1483  000C8A  0E01               	movlw	1
  1484  000C8C  6E2A               	movwf	_level^0,c
  1485                           
  1486                           ;newmain.c: 64: void init_ports()
  1487  000C8E  0E00               	movlw	0
  1488  000C90  6E21               	movwf	_isGameStarted^0,c
  1489                           
  1490                           ;newmain.c: 65: {
  1491  000C92  0E00               	movlw	0
  1492  000C94  6E20               	movwf	_isGameFinished^0,c
  1493                           
  1494                           ;newmain.c: 66:     ADCON1 = 0x0f;
  1495  000C96  0E00               	movlw	0
  1496  000C98  6E1F               	movwf	_isRC0Pressed^0,c
  1497  000C9A                     
  1498                           ;newmain.c: 67:     TRISA = 0x00;
  1499  000C9A  6829               	setf	_isRG0Pressed^0,c
  1500  000C9C                     
  1501                           ;newmain.c: 68:     TRISB = 0x00;
  1502  000C9C  6828               	setf	_isRG1Pressed^0,c
  1503  000C9E                     
  1504                           ;newmain.c: 69:     TRISC = 0x01;
  1505  000C9E  6827               	setf	_isRG2Pressed^0,c
  1506  000CA0                     
  1507                           ;newmain.c: 70:     TRISD = 0x00;
  1508  000CA0  6826               	setf	_isRG3Pressed^0,c
  1509  000CA2                     
  1510                           ;newmain.c: 71:     TRISE = 0x00;
  1511  000CA2  6825               	setf	_isRG4Pressed^0,c
  1512                           
  1513                           ;newmain.c: 72:     TRISF = 0x00;
  1514  000CA4  0E00               	movlw	0
  1515  000CA6  6E22               	movwf	_sevenSegCounter^0,c
  1516                           
  1517                           ;newmain.c: 73:     TRISG = 0x1f;
  1518  000CA8  0E05               	movlw	5
  1519  000CAA  6E24               	movwf	_whichRG^0,c
  1520                           
  1521                           ;newmain.c: 74:     TRISH = 0x00;
  1522  000CAC  0E00               	movlw	0
  1523  000CAE  6E1E               	movwf	_isPressed^0,c
  1524  000CB0  0012               	return		;funcret
  1525  000CB2                     __end_of_init_vars:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _init_ports *****************
  1529 ;; Defined at:
  1530 ;;		line 76 in file "newmain.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    3
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text6
  1559  000BDA                     __ptext6:
  1560                           	callstack 0
  1561  000BDA                     _init_ports:
  1562                           	callstack 27
  1563  000BDA                     
  1564                           ;newmain.c: 78:     PORTB = 0x00;
  1565  000BDA  0E0F               	movlw	15
  1566  000BDC  6EC1               	movwf	193,c	;volatile
  1567                           
  1568                           ;newmain.c: 79:     PORTD = 0x00;
  1569  000BDE  0E00               	movlw	0
  1570  000BE0  6E92               	movwf	146,c	;volatile
  1571                           
  1572                           ;newmain.c: 80:     PORTE = 0x00;
  1573  000BE2  0E00               	movlw	0
  1574  000BE4  6E93               	movwf	147,c	;volatile
  1575                           
  1576                           ;newmain.c: 81:     PORTF = 0x00;
  1577  000BE6  0E01               	movlw	1
  1578  000BE8  6E94               	movwf	148,c	;volatile
  1579                           
  1580                           ;newmain.c: 82:     PORTH = 0x00;
  1581  000BEA  0E00               	movlw	0
  1582  000BEC  6E95               	movwf	149,c	;volatile
  1583                           
  1584                           ;newmain.c: 83:     PORTJ = 0x00;
  1585  000BEE  0E00               	movlw	0
  1586  000BF0  6E96               	movwf	150,c	;volatile
  1587                           
  1588                           ;newmain.c: 84: }
  1589  000BF2  0E00               	movlw	0
  1590  000BF4  6E97               	movwf	151,c	;volatile
  1591                           
  1592                           ;newmain.c: 85: 
  1593  000BF6  0E1F               	movlw	31
  1594  000BF8  6E98               	movwf	152,c	;volatile
  1595                           
  1596                           ;newmain.c: 86: void init_irq()
  1597  000BFA  0E00               	movlw	0
  1598  000BFC  6E99               	movwf	153,c	;volatile
  1599                           
  1600                           ;newmain.c: 87: {
  1601  000BFE  0E00               	movlw	0
  1602  000C00  6E9A               	movwf	154,c	;volatile
  1603                           
  1604                           ;newmain.c: 89:     INTCONbits.TMR0IE = 1;
  1605  000C02  0E00               	movlw	0
  1606  000C04  6E80               	movwf	128,c	;volatile
  1607                           
  1608                           ;newmain.c: 90:     INTCONbits.GIE = 1;
  1609  000C06  0E00               	movlw	0
  1610  000C08  6E81               	movwf	129,c	;volatile
  1611                           
  1612                           ;newmain.c: 91:     RCONbits.IPEN = 0;
  1613  000C0A  0E00               	movlw	0
  1614  000C0C  6E83               	movwf	131,c	;volatile
  1615                           
  1616                           ;newmain.c: 92: }
  1617  000C0E  0E00               	movlw	0
  1618  000C10  6E84               	movwf	132,c	;volatile
  1619                           
  1620                           ;newmain.c: 93: 
  1621  000C12  0E00               	movlw	0
  1622  000C14  6E85               	movwf	133,c	;volatile
  1623                           
  1624                           ;newmain.c: 94: 
  1625  000C16  0E00               	movlw	0
  1626  000C18  6E87               	movwf	135,c	;volatile
  1627                           
  1628                           ;newmain.c: 95: 
  1629  000C1A  0E00               	movlw	0
  1630  000C1C  6E88               	movwf	136,c	;volatile
  1631  000C1E  0012               	return		;funcret
  1632  000C20                     __end_of_init_ports:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _init_irq *****************
  1636 ;; Defined at:
  1637 ;;		line 98 in file "newmain.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    3
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text7
  1666  000D2A                     __ptext7:
  1667                           	callstack 0
  1668  000D2A                     _init_irq:
  1669                           	callstack 27
  1670  000D2A                     
  1671                           ;newmain.c: 100: {
  1672  000D2A  0E10               	movlw	16
  1673  000D2C  6EF2               	movwf	242,c	;volatile
  1674  000D2E                     
  1675                           ;newmain.c: 101:     TMR_RUN,
  1676  000D2E  8AF2               	bsf	242,5,c	;volatile
  1677  000D30                     
  1678                           ;newmain.c: 102:     TMR_DONE
  1679  000D30  8EF2               	bsf	242,7,c	;volatile
  1680  000D32                     
  1681                           ;newmain.c: 103: } tmr_state_t;
  1682  000D32  9ED0               	bcf	208,7,c	;volatile
  1683  000D34  0012               	return		;funcret
  1684  000D36                     __end_of_init_irq:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _game_task *****************
  1688 ;; Defined at:
  1689 ;;		line 471 in file "newmain.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  count           1   21[COMRAM] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;Total ram usage:        3 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    5
  1710 ;; This function calls:
  1711 ;;		_health_decreaser
  1712 ;;		_randomgen
  1713 ;;		_reset_task
  1714 ;;		_shape_shifter
  1715 ;;		_tmr_start
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text8
  1722  00002A                     __ptext8:
  1723                           	callstack 0
  1724  00002A                     _game_task:
  1725                           	callstack 25
  1726  00002A                     
  1727                           ;newmain.c: 478:     {
  1728  00002A  0E00               	movlw	0
  1729  00002C  6E16               	movwf	game_task@count^0,c
  1730  00002E                     
  1731                           ;newmain.c: 479:         count++;
  1732  00002E  0429               	decf	_isRG0Pressed^0,w,c
  1733  000030  A4D8               	btfss	status,2,c
  1734  000032  EF1D  F000         	goto	u1071
  1735  000036  EF1F  F000         	goto	u1070
  1736  00003A                     u1071:
  1737  00003A  EF21  F000         	goto	l1786
  1738  00003E                     u1070:
  1739  00003E                     
  1740                           ;newmain.c: 480:         isRG2Pressed = -1;;newmain.c: 481:     }
  1741  00003E  2A16               	incf	game_task@count^0,f,c
  1742  000040                     
  1743                           ;newmain.c: 482:     if (isRG3Pressed == 1)
  1744  000040  6829               	setf	_isRG0Pressed^0,c
  1745  000042                     l1786:
  1746                           
  1747                           ;newmain.c: 484:         count++;
  1748  000042  0428               	decf	_isRG1Pressed^0,w,c
  1749  000044  A4D8               	btfss	status,2,c
  1750  000046  EF27  F000         	goto	u1081
  1751  00004A  EF29  F000         	goto	u1080
  1752  00004E                     u1081:
  1753  00004E  EF2B  F000         	goto	l1792
  1754  000052                     u1080:
  1755  000052                     
  1756                           ;newmain.c: 485:         isRG3Pressed = -1;;newmain.c: 486:     }
  1757  000052  2A16               	incf	game_task@count^0,f,c
  1758  000054                     
  1759                           ;newmain.c: 487:     if (isRG4Pressed == 1)
  1760  000054  6828               	setf	_isRG1Pressed^0,c
  1761  000056                     l1792:
  1762                           
  1763                           ;newmain.c: 489:         count++;
  1764  000056  0427               	decf	_isRG2Pressed^0,w,c
  1765  000058  A4D8               	btfss	status,2,c
  1766  00005A  EF31  F000         	goto	u1091
  1767  00005E  EF33  F000         	goto	u1090
  1768  000062                     u1091:
  1769  000062  EF35  F000         	goto	l1798
  1770  000066                     u1090:
  1771  000066                     
  1772                           ;newmain.c: 490:         isRG4Pressed = -1;;newmain.c: 491:     }
  1773  000066  2A16               	incf	game_task@count^0,f,c
  1774  000068                     
  1775                           ;newmain.c: 492: 
  1776  000068  6827               	setf	_isRG2Pressed^0,c
  1777  00006A                     l1798:
  1778                           
  1779                           ;newmain.c: 494:     {
  1780  00006A  0426               	decf	_isRG3Pressed^0,w,c
  1781  00006C  A4D8               	btfss	status,2,c
  1782  00006E  EF3B  F000         	goto	u1101
  1783  000072  EF3D  F000         	goto	u1100
  1784  000076                     u1101:
  1785  000076  EF3F  F000         	goto	l1804
  1786  00007A                     u1100:
  1787  00007A                     
  1788                           ;newmain.c: 495:         whichRG = -1;;newmain.c: 496:         isPressed = 1;
  1789  00007A  2A16               	incf	game_task@count^0,f,c
  1790  00007C                     
  1791                           ;newmain.c: 497:     }
  1792  00007C  6826               	setf	_isRG3Pressed^0,c
  1793  00007E                     l1804:
  1794                           
  1795                           ;newmain.c: 499: 
  1796  00007E  0425               	decf	_isRG4Pressed^0,w,c
  1797  000080  A4D8               	btfss	status,2,c
  1798  000082  EF45  F000         	goto	u1111
  1799  000086  EF47  F000         	goto	u1110
  1800  00008A                     u1111:
  1801  00008A  EF49  F000         	goto	l1810
  1802  00008E                     u1110:
  1803  00008E                     
  1804                           ;newmain.c: 500: ;newmain.c: 501:     switch (whichRG)
  1805  00008E  2A16               	incf	game_task@count^0,f,c
  1806  000090                     
  1807                           ;newmain.c: 502:     {
  1808  000090  6825               	setf	_isRG4Pressed^0,c
  1809  000092                     l1810:
  1810                           
  1811                           ;newmain.c: 505:         break;
  1812  000092  0E01               	movlw	1
  1813  000094  6416               	cpfsgt	game_task@count^0,c
  1814  000096  EF4F  F000         	goto	u1121
  1815  00009A  EF51  F000         	goto	u1120
  1816  00009E                     u1121:
  1817  00009E  EF89  F000         	goto	l1840
  1818  0000A2                     u1120:
  1819  0000A2                     
  1820                           ;newmain.c: 506:     case 0:;newmain.c: 507:         if (PORTFbits.RF0 == 1)
  1821  0000A2  6824               	setf	_whichRG^0,c
  1822  0000A4                     
  1823                           ;newmain.c: 508:             tmr_state = TMR_DONE;
  1824  0000A4  0E01               	movlw	1
  1825  0000A6  6E1E               	movwf	_isPressed^0,c
  1826  0000A8  EF89  F000         	goto	l1840
  1827  0000AC                     l1816:
  1828                           
  1829                           ;newmain.c: 516:             health_decreaser();
  1830  0000AC  EC72  F006         	call	_health_decreaser	;wreg free
  1831                           
  1832                           ;newmain.c: 517:         break;
  1833  0000B0  EFB5  F000         	goto	l1842
  1834  0000B4                     l271:
  1835                           
  1836                           ;newmain.c: 519:         if (PORTFbits.RF2 == 1)
  1837  0000B4  A085               	btfss	133,0,c	;volatile
  1838  0000B6  EF5F  F000         	goto	u1131
  1839  0000BA  EF61  F000         	goto	u1130
  1840  0000BE                     u1131:
  1841  0000BE  EF56  F000         	goto	l1816
  1842  0000C2                     u1130:
  1843  0000C2                     l1818:
  1844                           
  1845                           ;newmain.c: 520:             tmr_state = TMR_DONE;
  1846  0000C2  0E01               	movlw	1
  1847  0000C4  6E19               	movwf	_tmr_state^0,c
  1848  0000C6  EFB5  F000         	goto	l1842
  1849  0000CA                     l274:
  1850                           
  1851                           ;newmain.c: 525:         if (PORTFbits.RF3 == 1)
  1852  0000CA  A285               	btfss	133,1,c	;volatile
  1853  0000CC  EF6A  F000         	goto	u1141
  1854  0000D0  EF6C  F000         	goto	u1140
  1855  0000D4                     u1141:
  1856  0000D4  EF56  F000         	goto	l1816
  1857  0000D8                     u1140:
  1858  0000D8  EF61  F000         	goto	l1818
  1859  0000DC                     l277:
  1860                           
  1861                           ;newmain.c: 531:         if (PORTFbits.RF4 == 1)
  1862  0000DC  A485               	btfss	133,2,c	;volatile
  1863  0000DE  EF73  F000         	goto	u1151
  1864  0000E2  EF75  F000         	goto	u1150
  1865  0000E6                     u1151:
  1866  0000E6  EF56  F000         	goto	l1816
  1867  0000EA                     u1150:
  1868  0000EA  EF61  F000         	goto	l1818
  1869  0000EE                     l280:
  1870                           
  1871                           ;newmain.c: 537:         break;
  1872  0000EE  A685               	btfss	133,3,c	;volatile
  1873  0000F0  EF7C  F000         	goto	u1161
  1874  0000F4  EF7E  F000         	goto	u1160
  1875  0000F8                     u1161:
  1876  0000F8  EF56  F000         	goto	l1816
  1877  0000FC                     u1160:
  1878  0000FC  EF61  F000         	goto	l1818
  1879  000100                     l283:
  1880                           
  1881                           ;newmain.c: 543:         tmr_start(77);
  1882  000100  A885               	btfss	133,4,c	;volatile
  1883  000102  EF85  F000         	goto	u1171
  1884  000106  EF87  F000         	goto	u1170
  1885  00010A                     u1171:
  1886  00010A  EF56  F000         	goto	l1816
  1887  00010E                     u1170:
  1888  00010E  EF61  F000         	goto	l1818
  1889  000112                     l1840:
  1890  000112  5024               	movf	_whichRG^0,w,c
  1891  000114  6E14               	movwf	??_game_task^0,c
  1892  000116  6A15               	clrf	(??_game_task+1)^0,c
  1893                           
  1894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1895                           ; Switch size 1, requested type "simple"
  1896                           ; Number of cases is 2, Range of values is 0 to 255
  1897                           ; switch strategies available:
  1898                           ; Name         Instructions Cycles
  1899                           ; simple_byte            7     4 (average)
  1900                           ;	Chosen strategy is simple_byte
  1901  000118  5015               	movf	(??_game_task+1)^0,w,c
  1902  00011A  0A00               	xorlw	0	; case 0
  1903  00011C  B4D8               	btfsc	status,2,c
  1904  00011E  EF97  F000         	goto	l2056
  1905  000122  0AFF               	xorlw	255	; case 255
  1906  000124  B4D8               	btfsc	status,2,c
  1907  000126  EFAE  F000         	goto	l2058
  1908  00012A  EFB5  F000         	goto	l1842
  1909  00012E                     l2056:
  1910                           
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 5, Range of values is 0 to 4
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte           16     9 (average)
  1916                           ;	Chosen strategy is simple_byte
  1917  00012E  5014               	movf	??_game_task^0,w,c
  1918  000130  0A00               	xorlw	0	; case 0
  1919  000132  B4D8               	btfsc	status,2,c
  1920  000134  EF5A  F000         	goto	l271
  1921  000138  0A01               	xorlw	1	; case 1
  1922  00013A  B4D8               	btfsc	status,2,c
  1923  00013C  EF65  F000         	goto	l274
  1924  000140  0A03               	xorlw	3	; case 2
  1925  000142  B4D8               	btfsc	status,2,c
  1926  000144  EF6E  F000         	goto	l277
  1927  000148  0A01               	xorlw	1	; case 3
  1928  00014A  B4D8               	btfsc	status,2,c
  1929  00014C  EF77  F000         	goto	l280
  1930  000150  0A07               	xorlw	7	; case 4
  1931  000152  B4D8               	btfsc	status,2,c
  1932  000154  EF80  F000         	goto	l283
  1933  000158  EFB5  F000         	goto	l1842
  1934  00015C                     l2058:
  1935                           
  1936                           ; Switch size 1, requested type "simple"
  1937                           ; Number of cases is 1, Range of values is 255 to 255
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte            4     3 (average)
  1941                           ;	Chosen strategy is simple_byte
  1942  00015C  5014               	movf	??_game_task^0,w,c
  1943  00015E  0AFF               	xorlw	255	; case 255
  1944  000160  B4D8               	btfsc	status,2,c
  1945  000162  EF56  F000         	goto	l1816
  1946  000166  EFB5  F000         	goto	l1842
  1947  00016A                     l1842:
  1948                           
  1949                           ;newmain.c: 551: 
  1950  00016A  0E05               	movlw	5
  1951  00016C  6E24               	movwf	_whichRG^0,c
  1952                           
  1953                           ;newmain.c: 552: 
  1954  00016E  EF9C  F001         	goto	l1958
  1955  000172                     l1844:
  1956                           
  1957                           ;newmain.c: 555:             if (isPressed == 0)
  1958  000172  0E4D               	movlw	77
  1959  000174  EC66  F006         	call	_tmr_start
  1960  000178                     
  1961                           ;newmain.c: 556:             {
  1962  000178  0E01               	movlw	1
  1963  00017A  6E1B               	movwf	_game_state^0,c
  1964  00017C                     
  1965                           ;newmain.c: 558:             }
  1966  00017C  ECB9  F003         	call	_randomgen	;wreg free
  1967  000180                     
  1968                           ;newmain.c: 559:             else
  1969  000180  2A1A               	incf	_level_subcount^0,f,c
  1970  000182                     
  1971                           ;newmain.c: 560:             {
  1972  000182  0E01               	movlw	1
  1973  000184  6E2C               	movwf	_game_level^0,c
  1974                           
  1975                           ;newmain.c: 561:                 isPressed = 0;
  1976  000186  EFC9  F001         	goto	l315
  1977  00018A                     l1854:
  1978                           
  1979                           ;newmain.c: 565:                 shape_shifter();
  1980  00018A  0419               	decf	_tmr_state^0,w,c
  1981  00018C  A4D8               	btfss	status,2,c
  1982  00018E  EFCB  F000         	goto	u1181
  1983  000192  EFCD  F000         	goto	u1180
  1984  000196                     u1181:
  1985  000196  EFC9  F001         	goto	l315
  1986  00019A                     u1180:
  1987  00019A                     
  1988                           ;newmain.c: 566:                 randomgen();;newmain.c: 567:             }
  1989  00019A  501E               	movf	_isPressed^0,w,c
  1990  00019C  A4D8               	btfss	status,2,c
  1991  00019E  EFD3  F000         	goto	u1191
  1992  0001A2  EFD5  F000         	goto	u1190
  1993  0001A6                     u1191:
  1994  0001A6  EFD9  F000         	goto	l1860
  1995  0001AA                     u1190:
  1996  0001AA                     
  1997                           ;newmain.c: 568:             if (level_subcount >= L1);newmain.c: 569:             {
  1998  0001AA  EC72  F006         	call	_health_decreaser	;wreg free
  1999                           
  2000                           ;newmain.c: 570:                 shape_shifter();
  2001  0001AE  EFDB  F000         	goto	l1862
  2002  0001B2                     l1860:
  2003                           
  2004                           ;newmain.c: 572:             };newmain.c: 573:             ++level_subcount;
  2005  0001B2  0E00               	movlw	0
  2006  0001B4  6E1E               	movwf	_isPressed^0,c
  2007  0001B6                     l1862:
  2008                           
  2009                           ;newmain.c: 575:             {
  2010  0001B6  0E05               	movlw	5
  2011  0001B8  601A               	cpfslt	_level_subcount^0,c
  2012  0001BA  EFE1  F000         	goto	u1201
  2013  0001BE  EFE3  F000         	goto	u1200
  2014  0001C2                     u1201:
  2015  0001C2  EFE7  F000         	goto	l1868
  2016  0001C6                     u1200:
  2017  0001C6                     
  2018                           ;newmain.c: 576:                 game_state = LEVEL2_INIT;;newmain.c: 577:             }
  2019  0001C6  EC59  F006         	call	_shape_shifter	;wreg free
  2020  0001CA                     
  2021                           ;newmain.c: 578:             tmr_start(77);
  2022  0001CA  ECB9  F003         	call	_randomgen	;wreg free
  2023  0001CE                     l1868:
  2024                           
  2025                           ;newmain.c: 580:         break;
  2026  0001CE  0E04               	movlw	4
  2027  0001D0  641A               	cpfsgt	_level_subcount^0,c
  2028  0001D2  EFED  F000         	goto	u1211
  2029  0001D6  EFEF  F000         	goto	u1210
  2030  0001DA                     u1211:
  2031  0001DA  EFF1  F000         	goto	l1872
  2032  0001DE                     u1210:
  2033  0001DE                     
  2034                           ;newmain.c: 581:     case LEVEL2_INIT:;newmain.c: 582:         level_subcount = 0;
  2035  0001DE  EC59  F006         	call	_shape_shifter	;wreg free
  2036  0001E2                     l1872:
  2037                           
  2038                           ;newmain.c: 585: 
  2039  0001E2  2A1A               	incf	_level_subcount^0,f,c
  2040  0001E4                     
  2041                           ;newmain.c: 586:         randomgen();
  2042  0001E4  0E0B               	movlw	11
  2043  0001E6  181A               	xorwf	_level_subcount^0,w,c
  2044  0001E8  A4D8               	btfss	status,2,c
  2045  0001EA  EFF9  F000         	goto	u1221
  2046  0001EE  EFFB  F000         	goto	u1220
  2047  0001F2                     u1221:
  2048  0001F2  EFFD  F000         	goto	l1878
  2049  0001F6                     u1220:
  2050  0001F6                     
  2051                           ;newmain.c: 587:         ++level_subcount;;newmain.c: 588:         game_level = 2;
  2052  0001F6  0E02               	movlw	2
  2053  0001F8  6E1B               	movwf	_game_state^0,c
  2054  0001FA                     l1878:
  2055                           
  2056                           ;newmain.c: 590:     case LEVEL2:
  2057  0001FA  0E4D               	movlw	77
  2058  0001FC  EC66  F006         	call	_tmr_start
  2059  000200  EFC9  F001         	goto	l315
  2060  000204                     l1880:
  2061                           
  2062                           ;newmain.c: 594:             {
  2063  000204  0E00               	movlw	0
  2064  000206  6E1A               	movwf	_level_subcount^0,c
  2065  000208                     
  2066                           ;newmain.c: 595:                 health_decreaser();
  2067  000208  0E3D               	movlw	61
  2068  00020A  EC66  F006         	call	_tmr_start
  2069  00020E                     
  2070                           ;newmain.c: 596:             }
  2071  00020E  0E03               	movlw	3
  2072  000210  6E1B               	movwf	_game_state^0,c
  2073                           
  2074                           ;newmain.c: 598:             {
  2075  000212  ECB9  F003         	call	_randomgen	;wreg free
  2076  000216                     
  2077                           ;newmain.c: 599:                 isPressed = 0;
  2078  000216  2A1A               	incf	_level_subcount^0,f,c
  2079  000218                     
  2080                           ;newmain.c: 600:             }
  2081  000218  0E02               	movlw	2
  2082  00021A  6E2C               	movwf	_game_level^0,c
  2083                           
  2084                           ;newmain.c: 601:             if (level_subcount < L2)
  2085  00021C  EFC9  F001         	goto	l315
  2086  000220                     l1890:
  2087                           
  2088                           ;newmain.c: 603:                 shape_shifter();
  2089  000220  0419               	decf	_tmr_state^0,w,c
  2090  000222  A4D8               	btfss	status,2,c
  2091  000224  EF16  F001         	goto	u1231
  2092  000228  EF18  F001         	goto	u1230
  2093  00022C                     u1231:
  2094  00022C  EFC9  F001         	goto	l315
  2095  000230                     u1230:
  2096  000230                     
  2097                           ;newmain.c: 604:                 randomgen();;newmain.c: 605:             }
  2098  000230  501E               	movf	_isPressed^0,w,c
  2099  000232  A4D8               	btfss	status,2,c
  2100  000234  EF1E  F001         	goto	u1241
  2101  000238  EF20  F001         	goto	u1240
  2102  00023C                     u1241:
  2103  00023C  EF24  F001         	goto	l1896
  2104  000240                     u1240:
  2105  000240                     
  2106                           ;newmain.c: 606:             if (level_subcount >= L2);newmain.c: 607:             {
  2107  000240  EC72  F006         	call	_health_decreaser	;wreg free
  2108                           
  2109                           ;newmain.c: 608:                 shape_shifter();
  2110  000244  EF26  F001         	goto	l1898
  2111  000248                     l1896:
  2112                           
  2113                           ;newmain.c: 610:             };newmain.c: 611:             ++level_subcount;
  2114  000248  0E00               	movlw	0
  2115  00024A  6E1E               	movwf	_isPressed^0,c
  2116  00024C                     l1898:
  2117                           
  2118                           ;newmain.c: 613:             {
  2119  00024C  0E0A               	movlw	10
  2120  00024E  601A               	cpfslt	_level_subcount^0,c
  2121  000250  EF2C  F001         	goto	u1251
  2122  000254  EF2E  F001         	goto	u1250
  2123  000258                     u1251:
  2124  000258  EF32  F001         	goto	l1904
  2125  00025C                     u1250:
  2126  00025C                     
  2127                           ;newmain.c: 614:                 game_state = LEVEL3_INIT;;newmain.c: 615:             }
  2128  00025C  EC59  F006         	call	_shape_shifter	;wreg free
  2129  000260                     
  2130                           ;newmain.c: 616:             tmr_start(61);
  2131  000260  ECB9  F003         	call	_randomgen	;wreg free
  2132  000264                     l1904:
  2133                           
  2134                           ;newmain.c: 618:         break;
  2135  000264  0E09               	movlw	9
  2136  000266  641A               	cpfsgt	_level_subcount^0,c
  2137  000268  EF38  F001         	goto	u1261
  2138  00026C  EF3A  F001         	goto	u1260
  2139  000270                     u1261:
  2140  000270  EF3C  F001         	goto	l1908
  2141  000274                     u1260:
  2142  000274                     
  2143                           ;newmain.c: 619:     case LEVEL3_INIT:;newmain.c: 620:         level_subcount = 0;
  2144  000274  EC59  F006         	call	_shape_shifter	;wreg free
  2145  000278                     l1908:
  2146                           
  2147                           ;newmain.c: 623: 
  2148  000278  2A1A               	incf	_level_subcount^0,f,c
  2149  00027A                     
  2150                           ;newmain.c: 624:         randomgen();
  2151  00027A  0E10               	movlw	16
  2152  00027C  181A               	xorwf	_level_subcount^0,w,c
  2153  00027E  A4D8               	btfss	status,2,c
  2154  000280  EF44  F001         	goto	u1271
  2155  000284  EF46  F001         	goto	u1270
  2156  000288                     u1271:
  2157  000288  EF48  F001         	goto	l1914
  2158  00028C                     u1270:
  2159  00028C                     
  2160                           ;newmain.c: 625:         ++level_subcount;;newmain.c: 626:         game_level = 3;
  2161  00028C  0E04               	movlw	4
  2162  00028E  6E1B               	movwf	_game_state^0,c
  2163  000290                     l1914:
  2164                           
  2165                           ;newmain.c: 628:     case LEVEL3:
  2166  000290  0E3D               	movlw	61
  2167  000292  EC66  F006         	call	_tmr_start
  2168  000296  EFC9  F001         	goto	l315
  2169  00029A                     l1916:
  2170                           
  2171                           ;newmain.c: 632:             {
  2172  00029A  0E00               	movlw	0
  2173  00029C  6E1A               	movwf	_level_subcount^0,c
  2174  00029E                     
  2175                           ;newmain.c: 633:                 health_decreaser();
  2176  00029E  0E2E               	movlw	46
  2177  0002A0  EC66  F006         	call	_tmr_start
  2178  0002A4                     
  2179                           ;newmain.c: 634:             }
  2180  0002A4  0E05               	movlw	5
  2181  0002A6  6E1B               	movwf	_game_state^0,c
  2182                           
  2183                           ;newmain.c: 636:             {
  2184  0002A8  ECB9  F003         	call	_randomgen	;wreg free
  2185  0002AC                     
  2186                           ;newmain.c: 637:                 isPressed = 0;
  2187  0002AC  2A1A               	incf	_level_subcount^0,f,c
  2188  0002AE                     
  2189                           ;newmain.c: 638:             }
  2190  0002AE  0E03               	movlw	3
  2191  0002B0  6E2C               	movwf	_game_level^0,c
  2192                           
  2193                           ;newmain.c: 639:             if (level_subcount < L3)
  2194  0002B2  EFC9  F001         	goto	l315
  2195  0002B6                     l1926:
  2196                           
  2197                           ;newmain.c: 641:                 shape_shifter();
  2198  0002B6  0419               	decf	_tmr_state^0,w,c
  2199  0002B8  A4D8               	btfss	status,2,c
  2200  0002BA  EF61  F001         	goto	u1281
  2201  0002BE  EF63  F001         	goto	u1280
  2202  0002C2                     u1281:
  2203  0002C2  EFC9  F001         	goto	l315
  2204  0002C6                     u1280:
  2205  0002C6                     
  2206                           ;newmain.c: 642:                 randomgen();;newmain.c: 643:             }
  2207  0002C6  501E               	movf	_isPressed^0,w,c
  2208  0002C8  A4D8               	btfss	status,2,c
  2209  0002CA  EF69  F001         	goto	u1291
  2210  0002CE  EF6B  F001         	goto	u1290
  2211  0002D2                     u1291:
  2212  0002D2  EF6F  F001         	goto	l1932
  2213  0002D6                     u1290:
  2214  0002D6                     
  2215                           ;newmain.c: 644:             if (level_subcount >= L3);newmain.c: 645:             {
  2216  0002D6  EC72  F006         	call	_health_decreaser	;wreg free
  2217                           
  2218                           ;newmain.c: 646:                 shape_shifter();
  2219  0002DA  EF71  F001         	goto	l1934
  2220  0002DE                     l1932:
  2221                           
  2222                           ;newmain.c: 648:             };newmain.c: 649:             ++level_subcount;
  2223  0002DE  0E00               	movlw	0
  2224  0002E0  6E1E               	movwf	_isPressed^0,c
  2225  0002E2                     l1934:
  2226                           
  2227                           ;newmain.c: 651:             {
  2228  0002E2  0E0F               	movlw	15
  2229  0002E4  601A               	cpfslt	_level_subcount^0,c
  2230  0002E6  EF77  F001         	goto	u1301
  2231  0002EA  EF79  F001         	goto	u1300
  2232  0002EE                     u1301:
  2233  0002EE  EF7D  F001         	goto	l1940
  2234  0002F2                     u1300:
  2235  0002F2                     
  2236                           ;newmain.c: 652:                 game_state = END;;newmain.c: 653:             }
  2237  0002F2  EC59  F006         	call	_shape_shifter	;wreg free
  2238  0002F6                     
  2239                           ;newmain.c: 654:             tmr_start(46);
  2240  0002F6  ECB9  F003         	call	_randomgen	;wreg free
  2241  0002FA                     l1940:
  2242                           
  2243                           ;newmain.c: 656:         break;
  2244  0002FA  0E0E               	movlw	14
  2245  0002FC  641A               	cpfsgt	_level_subcount^0,c
  2246  0002FE  EF83  F001         	goto	u1311
  2247  000302  EF85  F001         	goto	u1310
  2248  000306                     u1311:
  2249  000306  EF87  F001         	goto	l1944
  2250  00030A                     u1310:
  2251  00030A                     
  2252                           ;newmain.c: 657:     case LOSE:;newmain.c: 658:         reset_task();
  2253  00030A  EC59  F006         	call	_shape_shifter	;wreg free
  2254  00030E                     l1944:
  2255                           
  2256                           ;newmain.c: 661:         reset_task();
  2257  00030E  2A1A               	incf	_level_subcount^0,f,c
  2258  000310                     
  2259                           ;newmain.c: 662:         break;
  2260  000310  0E15               	movlw	21
  2261  000312  181A               	xorwf	_level_subcount^0,w,c
  2262  000314  A4D8               	btfss	status,2,c
  2263  000316  EF8F  F001         	goto	u1321
  2264  00031A  EF91  F001         	goto	u1320
  2265  00031E                     u1321:
  2266  00031E  EF93  F001         	goto	l1950
  2267  000322                     u1320:
  2268  000322                     
  2269                           ;newmain.c: 663:     };newmain.c: 664: }
  2270  000322  0E06               	movlw	6
  2271  000324  6E1B               	movwf	_game_state^0,c
  2272  000326                     l1950:
  2273                           
  2274                           ;newmain.c: 666: void main(void)
  2275  000326  0E2E               	movlw	46
  2276  000328  EC66  F006         	call	_tmr_start
  2277  00032C  EFC9  F001         	goto	l315
  2278  000330                     l1952:
  2279                           
  2280                           ;newmain.c: 670:     tmr_init();
  2281  000330  EC87  F006         	call	_reset_task	;wreg free
  2282                           
  2283                           ;newmain.c: 671:     init_irq();
  2284  000334  EFC9  F001         	goto	l315
  2285  000338                     l1958:
  2286  000338  501B               	movf	_game_state^0,w,c
  2287  00033A  6E14               	movwf	??_game_task^0,c
  2288  00033C  6A15               	clrf	(??_game_task+1)^0,c
  2289                           
  2290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2291                           ; Switch size 1, requested type "simple"
  2292                           ; Number of cases is 1, Range of values is 0 to 0
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte            4     3 (average)
  2296                           ;	Chosen strategy is simple_byte
  2297  00033E  5015               	movf	(??_game_task+1)^0,w,c
  2298  000340  0A00               	xorlw	0	; case 0
  2299  000342  B4D8               	btfsc	status,2,c
  2300  000344  EFA6  F001         	goto	l2060
  2301  000348  EFC9  F001         	goto	l315
  2302  00034C                     l2060:
  2303                           
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 8, Range of values is 0 to 7
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte           25    13 (average)
  2309                           ;	Chosen strategy is simple_byte
  2310  00034C  5014               	movf	??_game_task^0,w,c
  2311  00034E  0A00               	xorlw	0	; case 0
  2312  000350  B4D8               	btfsc	status,2,c
  2313  000352  EFB9  F000         	goto	l1844
  2314  000356  0A01               	xorlw	1	; case 1
  2315  000358  B4D8               	btfsc	status,2,c
  2316  00035A  EFC5  F000         	goto	l1854
  2317  00035E  0A03               	xorlw	3	; case 2
  2318  000360  B4D8               	btfsc	status,2,c
  2319  000362  EF02  F001         	goto	l1880
  2320  000366  0A01               	xorlw	1	; case 3
  2321  000368  B4D8               	btfsc	status,2,c
  2322  00036A  EF10  F001         	goto	l1890
  2323  00036E  0A07               	xorlw	7	; case 4
  2324  000370  B4D8               	btfsc	status,2,c
  2325  000372  EF4D  F001         	goto	l1916
  2326  000376  0A01               	xorlw	1	; case 5
  2327  000378  B4D8               	btfsc	status,2,c
  2328  00037A  EF5B  F001         	goto	l1926
  2329  00037E  0A03               	xorlw	3	; case 6
  2330  000380  B4D8               	btfsc	status,2,c
  2331  000382  EF98  F001         	goto	l1952
  2332  000386  0A01               	xorlw	1	; case 7
  2333  000388  B4D8               	btfsc	status,2,c
  2334  00038A  EF98  F001         	goto	l1952
  2335  00038E  EFC9  F001         	goto	l315
  2336  000392                     l315:
  2337  000392  0012               	return		;funcret
  2338  000394                     __end_of_game_task:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _tmr_start *****************
  2342 ;; Defined at:
  2343 ;;		line 138 in file "newmain.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  ticks           1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  ticks           1    7[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        1 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    3
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_game_task
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text9
  2372  000CCC                     __ptext9:
  2373                           	callstack 0
  2374  000CCC                     _tmr_start:
  2375                           	callstack 26
  2376                           
  2377                           ;incstack = 0
  2378                           ;tmr_start@ticks stored from wreg
  2379  000CCC  6E08               	movwf	tmr_start@ticks^0,c
  2380  000CCE                     
  2381                           ;newmain.c: 138:     PORTA = 0x00;;newmain.c: 139: ;newmain.c: 140:     if (tmr1flag == 
      +                          0)
  2382  000CCE  C008  F017         	movff	tmr_start@ticks,_tmr_ticks_left
  2383  000CD2                     
  2384                           ;newmain.c: 141:     {
  2385  000CD2  0E00               	movlw	0
  2386  000CD4  6E19               	movwf	_tmr_state^0,c
  2387  000CD6                     
  2388                           ;newmain.c: 142:         htmrval = TMR1H;
  2389  000CD6  0E00               	movlw	0
  2390  000CD8  6ED7               	movwf	215,c	;volatile
  2391  000CDA  0E00               	movlw	0
  2392  000CDC  6ED6               	movwf	214,c	;volatile
  2393  000CDE                     
  2394                           ;newmain.c: 143:         ltmrval = TMR1L;
  2395  000CDE  94F2               	bcf	242,2,c	;volatile
  2396  000CE0                     
  2397                           ;newmain.c: 144:         noteval = 0x07 & ltmrval;
  2398  000CE0  8ED5               	bsf	213,7,c	;volatile
  2399  000CE2  0012               	return		;funcret
  2400  000CE4                     __end_of_tmr_start:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _shape_shifter *****************
  2404 ;; Defined at:
  2405 ;;		line 445 in file "newmain.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    3
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_game_task
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text10
  2434  000CB2                     __ptext10:
  2435                           	callstack 0
  2436  000CB2                     _shape_shifter:
  2437                           	callstack 26
  2438  000CB2                     
  2439                           ;newmain.c: 447:     tmr1flag = 0;
  2440  000CB2  CF84 FF85          	movff	3972,3973	;volatile
  2441                           
  2442                           ;newmain.c: 448: }
  2443  000CB6  CF83 FF84          	movff	3971,3972	;volatile
  2444                           
  2445                           ;newmain.c: 449: 
  2446  000CBA  CF82 FF83          	movff	3970,3971	;volatile
  2447                           
  2448                           ;newmain.c: 450: void health_decreaser()
  2449  000CBE  CF81 FF82          	movff	3969,3970	;volatile
  2450                           
  2451                           ;newmain.c: 451: {
  2452  000CC2  CF80 FF81          	movff	3968,3969	;volatile
  2453  000CC6                     
  2454                           ;newmain.c: 452:     health--;
  2455  000CC6  0E00               	movlw	0
  2456  000CC8  6E80               	movwf	128,c	;volatile
  2457  000CCA  0012               	return		;funcret
  2458  000CCC                     __end_of_shape_shifter:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _reset_task *****************
  2462 ;; Defined at:
  2463 ;;		line 455 in file "newmain.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_game_task
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text11
  2492  000D0E                     __ptext11:
  2493                           	callstack 0
  2494  000D0E                     _reset_task:
  2495                           	callstack 26
  2496  000D0E                     
  2497                           ;newmain.c: 457: }
  2498  000D0E  0E01               	movlw	1
  2499  000D10  6E20               	movwf	_isGameFinished^0,c
  2500                           
  2501                           ;newmain.c: 458: 
  2502  000D12  0E00               	movlw	0
  2503  000D14  6E21               	movwf	_isGameStarted^0,c
  2504                           
  2505                           ;newmain.c: 459: void game_task()
  2506  000D16  0E00               	movlw	0
  2507  000D18  6E1D               	movwf	_tmr1flag^0,c
  2508  000D1A  0012               	return		;funcret
  2509  000D1C                     __end_of_reset_task:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _randomgen *****************
  2513 ;; Defined at:
  2514 ;;		line 147 in file "newmain.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  intermbit       1   18[COMRAM] unsigned char 
  2519 ;;  lastbit         1   17[COMRAM] unsigned char 
  2520 ;;  num             1   16[COMRAM] unsigned char 
  2521 ;;  noteval         1   15[COMRAM] unsigned char 
  2522 ;;  val             1   14[COMRAM] unsigned char 
  2523 ;;  i               1   13[COMRAM] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        6 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    4
  2540 ;; This function calls:
  2541 ;;		___awmod
  2542 ;; This function is called by:
  2543 ;;		_game_task
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text12
  2548  000772                     __ptext12:
  2549                           	callstack 0
  2550  000772                     _randomgen:
  2551                           	callstack 25
  2552  000772                     
  2553                           ;newmain.c: 149:         noteval = 0x07 & ltmrval;;newmain.c: 150:         noteval = not
      +                          eval % 5;
  2554  000772  0E00               	movlw	0
  2555  000774  6E80               	movwf	128,c	;volatile
  2556                           
  2557                           ;newmain.c: 152:         for (i = 0; i < noteval; i++)
  2558  000776  501D               	movf	_tmr1flag^0,w,c
  2559  000778  A4D8               	btfss	status,2,c
  2560  00077A  EFC1  F003         	goto	u881
  2561  00077E  EFC3  F003         	goto	u880
  2562  000782                     u881:
  2563  000782  EFC9  F003         	goto	l1616
  2564  000786                     u880:
  2565  000786                     
  2566                           ;newmain.c: 153:         {;newmain.c: 154:             val = val << 1;
  2567  000786  CFCF F01C          	movff	4047,_htmrval	;volatile
  2568                           
  2569                           ;newmain.c: 155:         }
  2570  00078A  CFCE F023          	movff	4046,_ltmrval	;volatile
  2571  00078E                     
  2572                           ;newmain.c: 157:         if (level == 1)
  2573  00078E  0E01               	movlw	1
  2574  000790  6E1D               	movwf	_tmr1flag^0,c
  2575  000792                     l1616:
  2576                           
  2577                           ;newmain.c: 159:             lastbit = 0x01 & TMR1L;
  2578  000792  041D               	decf	_tmr1flag^0,w,c
  2579  000794  A4D8               	btfss	status,2,c
  2580  000796  EFCF  F003         	goto	u891
  2581  00079A  EFD1  F003         	goto	u890
  2582  00079E                     u891:
  2583  00079E  EF6A  F004         	goto	l159
  2584  0007A2                     u890:
  2585  0007A2                     
  2586                           ;newmain.c: 160:             intermbit = 0x01 & TMR1H;;newmain.c: 161:             htmrv
      +                          al = htmrval >> 8;
  2587  0007A2  5023               	movf	_ltmrval^0,w,c
  2588  0007A4  0B07               	andlw	7
  2589  0007A6  6E10               	movwf	randomgen@noteval^0,c
  2590  0007A8                     
  2591                           ;newmain.c: 162:             ltmrval = ltmrval >> 8;
  2592  0007A8  C010  F008         	movff	randomgen@noteval,___awmod@dividend
  2593  0007AC  6A09               	clrf	(___awmod@dividend+1)^0,c
  2594  0007AE  0E00               	movlw	0
  2595  0007B0  6E0B               	movwf	(___awmod@divisor+1)^0,c
  2596  0007B2  0E05               	movlw	5
  2597  0007B4  6E0A               	movwf	___awmod@divisor^0,c
  2598  0007B6  EC19  F005         	call	___awmod	;wreg free
  2599  0007BA  5008               	movf	?___awmod^0,w,c
  2600  0007BC  6E10               	movwf	randomgen@noteval^0,c
  2601  0007BE                     
  2602                           ;newmain.c: 163:             lastbit = lastbit << 7;
  2603  0007BE  0E01               	movlw	1
  2604  0007C0  6E0F               	movwf	randomgen@val^0,c
  2605  0007C2                     
  2606                           ;newmain.c: 164:             intermbit = intermbit << 7;
  2607  0007C2  0E00               	movlw	0
  2608  0007C4  6E0E               	movwf	randomgen@i^0,c
  2609  0007C6  EFE9  F003         	goto	l1630
  2610  0007CA                     l1626:
  2611                           
  2612                           ;newmain.c: 165:             ltmrval = ltmrval | lastbit;;newmain.c: 166:             ht
      +                          mrval = htmrval | intermbit;
  2613  0007CA  500F               	movf	randomgen@val^0,w,c
  2614  0007CC  240F               	addwf	randomgen@val^0,w,c
  2615  0007CE  6E0F               	movwf	randomgen@val^0,c
  2616  0007D0                     
  2617                           ;newmain.c: 167:         }
  2618  0007D0  2A0E               	incf	randomgen@i^0,f,c
  2619  0007D2                     l1630:
  2620  0007D2  5010               	movf	randomgen@noteval^0,w,c
  2621  0007D4  5C0E               	subwf	randomgen@i^0,w,c
  2622  0007D6  A0D8               	btfss	status,0,c
  2623  0007D8  EFF0  F003         	goto	u901
  2624  0007DC  EFF2  F003         	goto	u900
  2625  0007E0                     u901:
  2626  0007E0  EFE5  F003         	goto	l1626
  2627  0007E4                     u900:
  2628  0007E4                     
  2629                           ;newmain.c: 168:         if (level == 2)
  2630  0007E4  C00F  FF80         	movff	randomgen@val,3968	;volatile
  2631  0007E8                     
  2632                           ;newmain.c: 169:         {
  2633  0007E8  042A               	decf	_level^0,w,c
  2634  0007EA  A4D8               	btfss	status,2,c
  2635  0007EC  EFFA  F003         	goto	u911
  2636  0007F0  EFFC  F003         	goto	u910
  2637  0007F4                     u911:
  2638  0007F4  EF12  F004         	goto	l150
  2639  0007F8                     u910:
  2640  0007F8                     
  2641                           ;newmain.c: 170:             num = 3;;newmain.c: 171:             while (num > 0)
  2642  0007F8  50CE               	movf	206,w,c	;volatile
  2643  0007FA  0B01               	andlw	1
  2644  0007FC  6E12               	movwf	randomgen@lastbit^0,c
  2645                           
  2646                           ;newmain.c: 172:             {
  2647  0007FE  50CF               	movf	207,w,c	;volatile
  2648  000800  0B01               	andlw	1
  2649  000802  6E13               	movwf	randomgen@intermbit^0,c
  2650  000804                     
  2651                           ;newmain.c: 173:                 lastbit = 0x01 & TMR1L;
  2652  000804  0E00               	movlw	0
  2653  000806  6E1C               	movwf	_htmrval^0,c
  2654  000808                     
  2655                           ;newmain.c: 174:                 intermbit = 0x01 & TMR1H;
  2656  000808  0E00               	movlw	0
  2657  00080A  6E23               	movwf	_ltmrval^0,c
  2658                           
  2659                           ;newmain.c: 175:                 htmrval = htmrval >> 8;
  2660  00080C  4012               	rrncf	randomgen@lastbit^0,w,c
  2661  00080E  0B80               	andlw	128
  2662  000810  6E12               	movwf	randomgen@lastbit^0,c
  2663                           
  2664                           ;newmain.c: 176:                 ltmrval = ltmrval >> 8;
  2665  000812  4013               	rrncf	randomgen@intermbit^0,w,c
  2666  000814  0B80               	andlw	128
  2667  000816  6E13               	movwf	randomgen@intermbit^0,c
  2668                           
  2669                           ;newmain.c: 177:                 lastbit = lastbit << 7;
  2670  000818  5023               	movf	_ltmrval^0,w,c
  2671  00081A  1012               	iorwf	randomgen@lastbit^0,w,c
  2672  00081C  6E23               	movwf	_ltmrval^0,c
  2673                           
  2674                           ;newmain.c: 178:                 intermbit = intermbit << 7;
  2675  00081E  501C               	movf	_htmrval^0,w,c
  2676  000820  1013               	iorwf	randomgen@intermbit^0,w,c
  2677  000822  6E1C               	movwf	_htmrval^0,c
  2678  000824                     l150:
  2679                           
  2680                           ;newmain.c: 180:                 htmrval = htmrval | intermbit;
  2681  000824  0E02               	movlw	2
  2682  000826  182A               	xorwf	_level^0,w,c
  2683  000828  A4D8               	btfss	status,2,c
  2684  00082A  EF19  F004         	goto	u921
  2685  00082E  EF1B  F004         	goto	u920
  2686  000832                     u921:
  2687  000832  EF3E  F004         	goto	l1652
  2688  000836                     u920:
  2689  000836                     
  2690                           ;newmain.c: 181:                 num--;;newmain.c: 182:             }
  2691  000836  0E03               	movlw	3
  2692  000838  6E11               	movwf	randomgen@num^0,c
  2693                           
  2694                           ;newmain.c: 183:         }
  2695  00083A  EF36  F004         	goto	l1650
  2696  00083E                     l1642:
  2697                           
  2698                           ;newmain.c: 184:         if (level == 3);newmain.c: 185:         {
  2699  00083E  50CE               	movf	206,w,c	;volatile
  2700  000840  0B01               	andlw	1
  2701  000842  6E12               	movwf	randomgen@lastbit^0,c
  2702                           
  2703                           ;newmain.c: 186:             num = 5;
  2704  000844  50CF               	movf	207,w,c	;volatile
  2705  000846  0B01               	andlw	1
  2706  000848  6E13               	movwf	randomgen@intermbit^0,c
  2707  00084A                     
  2708                           ;newmain.c: 187:             while (num > 0)
  2709  00084A  0E00               	movlw	0
  2710  00084C  6E1C               	movwf	_htmrval^0,c
  2711  00084E                     
  2712                           ;newmain.c: 188:             {
  2713  00084E  0E00               	movlw	0
  2714  000850  6E23               	movwf	_ltmrval^0,c
  2715                           
  2716                           ;newmain.c: 189:                 lastbit = 0x01 & TMR1L;
  2717  000852  4012               	rrncf	randomgen@lastbit^0,w,c
  2718  000854  0B80               	andlw	128
  2719  000856  6E12               	movwf	randomgen@lastbit^0,c
  2720                           
  2721                           ;newmain.c: 190:                 intermbit = 0x01 & TMR1H;
  2722  000858  4013               	rrncf	randomgen@intermbit^0,w,c
  2723  00085A  0B80               	andlw	128
  2724  00085C  6E13               	movwf	randomgen@intermbit^0,c
  2725                           
  2726                           ;newmain.c: 191:                 htmrval = htmrval >> 8;
  2727  00085E  5023               	movf	_ltmrval^0,w,c
  2728  000860  1012               	iorwf	randomgen@lastbit^0,w,c
  2729  000862  6E23               	movwf	_ltmrval^0,c
  2730                           
  2731                           ;newmain.c: 192:                 ltmrval = ltmrval >> 8;
  2732  000864  501C               	movf	_htmrval^0,w,c
  2733  000866  1013               	iorwf	randomgen@intermbit^0,w,c
  2734  000868  6E1C               	movwf	_htmrval^0,c
  2735  00086A                     
  2736                           ;newmain.c: 193:                 lastbit = lastbit << 7;
  2737  00086A  0611               	decf	randomgen@num^0,f,c
  2738  00086C                     l1650:
  2739                           
  2740                           ;newmain.c: 183:         }
  2741  00086C  5011               	movf	randomgen@num^0,w,c
  2742  00086E  A4D8               	btfss	status,2,c
  2743  000870  EF3C  F004         	goto	u931
  2744  000874  EF3E  F004         	goto	u930
  2745  000878                     u931:
  2746  000878  EF1F  F004         	goto	l1642
  2747  00087C                     u930:
  2748  00087C                     l1652:
  2749                           
  2750                           ;newmain.c: 196:                 htmrval = htmrval | intermbit;
  2751  00087C  0E03               	movlw	3
  2752  00087E  182A               	xorwf	_level^0,w,c
  2753  000880  A4D8               	btfss	status,2,c
  2754  000882  EF45  F004         	goto	u941
  2755  000886  EF47  F004         	goto	u940
  2756  00088A                     u941:
  2757  00088A  EF6A  F004         	goto	l159
  2758  00088E                     u940:
  2759  00088E                     
  2760                           ;newmain.c: 197:                 num--;;newmain.c: 198:             }
  2761  00088E  0E05               	movlw	5
  2762  000890  6E11               	movwf	randomgen@num^0,c
  2763                           
  2764                           ;newmain.c: 199:         }
  2765  000892  EF62  F004         	goto	l1664
  2766  000896                     l1656:
  2767                           
  2768                           ;newmain.c: 200:     };newmain.c: 201: }
  2769  000896  50CE               	movf	206,w,c	;volatile
  2770  000898  0B01               	andlw	1
  2771  00089A  6E12               	movwf	randomgen@lastbit^0,c
  2772                           
  2773                           ;newmain.c: 202: 
  2774  00089C  50CF               	movf	207,w,c	;volatile
  2775  00089E  0B01               	andlw	1
  2776  0008A0  6E13               	movwf	randomgen@intermbit^0,c
  2777  0008A2                     
  2778                           ;newmain.c: 203: 
  2779  0008A2  0E00               	movlw	0
  2780  0008A4  6E1C               	movwf	_htmrval^0,c
  2781  0008A6                     
  2782                           ;newmain.c: 204: 
  2783  0008A6  0E00               	movlw	0
  2784  0008A8  6E23               	movwf	_ltmrval^0,c
  2785                           
  2786                           ;newmain.c: 205: void input_task()
  2787  0008AA  4012               	rrncf	randomgen@lastbit^0,w,c
  2788  0008AC  0B80               	andlw	128
  2789  0008AE  6E12               	movwf	randomgen@lastbit^0,c
  2790                           
  2791                           ;newmain.c: 206: {
  2792  0008B0  4013               	rrncf	randomgen@intermbit^0,w,c
  2793  0008B2  0B80               	andlw	128
  2794  0008B4  6E13               	movwf	randomgen@intermbit^0,c
  2795                           
  2796                           ;newmain.c: 207: 
  2797  0008B6  5023               	movf	_ltmrval^0,w,c
  2798  0008B8  1012               	iorwf	randomgen@lastbit^0,w,c
  2799  0008BA  6E23               	movwf	_ltmrval^0,c
  2800                           
  2801                           ;newmain.c: 208: 
  2802  0008BC  501C               	movf	_htmrval^0,w,c
  2803  0008BE  1013               	iorwf	randomgen@intermbit^0,w,c
  2804  0008C0  6E1C               	movwf	_htmrval^0,c
  2805  0008C2                     
  2806                           ;newmain.c: 209: 
  2807  0008C2  0611               	decf	randomgen@num^0,f,c
  2808  0008C4                     l1664:
  2809                           
  2810                           ;newmain.c: 199:         }
  2811  0008C4  5011               	movf	randomgen@num^0,w,c
  2812  0008C6  A4D8               	btfss	status,2,c
  2813  0008C8  EF68  F004         	goto	u951
  2814  0008CC  EF6A  F004         	goto	u950
  2815  0008D0                     u951:
  2816  0008D0  EF4B  F004         	goto	l1656
  2817  0008D4                     u950:
  2818  0008D4                     l159:
  2819  0008D4  0012               	return		;funcret
  2820  0008D6                     __end_of_randomgen:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function ___awmod *****************
  2824 ;; Defined at:
  2825 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  dividend        2    7[COMRAM] int 
  2828 ;;  divisor         2    9[COMRAM] int 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  sign            1   12[COMRAM] unsigned char 
  2831 ;;  counter         1   11[COMRAM] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  2    7[COMRAM] int 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    3
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_randomgen
  2852 ;;		_sevenSeg_controller
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text13
  2857  000A32                     __ptext13:
  2858                           	callstack 0
  2859  000A32                     ___awmod:
  2860                           	callstack 26
  2861  000A32  0E00               	movlw	0
  2862  000A34  6E0D               	movwf	___awmod@sign^0,c
  2863  000A36  BE09               	btfsc	(___awmod@dividend+1)^0,7,c
  2864  000A38  EF22  F005         	goto	u820
  2865  000A3C  EF20  F005         	goto	u821
  2866  000A40                     u821:
  2867  000A40  EF28  F005         	goto	l1580
  2868  000A44                     u820:
  2869  000A44  6C08               	negf	___awmod@dividend^0,c
  2870  000A46  1E09               	comf	(___awmod@dividend+1)^0,f,c
  2871  000A48  B0D8               	btfsc	status,0,c
  2872  000A4A  2A09               	incf	(___awmod@dividend+1)^0,f,c
  2873  000A4C  0E01               	movlw	1
  2874  000A4E  6E0D               	movwf	___awmod@sign^0,c
  2875  000A50                     l1580:
  2876  000A50  BE0B               	btfsc	(___awmod@divisor+1)^0,7,c
  2877  000A52  EF2F  F005         	goto	u830
  2878  000A56  EF2D  F005         	goto	u831
  2879  000A5A                     u831:
  2880  000A5A  EF33  F005         	goto	l1584
  2881  000A5E                     u830:
  2882  000A5E  6C0A               	negf	___awmod@divisor^0,c
  2883  000A60  1E0B               	comf	(___awmod@divisor+1)^0,f,c
  2884  000A62  B0D8               	btfsc	status,0,c
  2885  000A64  2A0B               	incf	(___awmod@divisor+1)^0,f,c
  2886  000A66                     l1584:
  2887  000A66  500A               	movf	___awmod@divisor^0,w,c
  2888  000A68  100B               	iorwf	(___awmod@divisor+1)^0,w,c
  2889  000A6A  B4D8               	btfsc	status,2,c
  2890  000A6C  EF3A  F005         	goto	u841
  2891  000A70  EF3C  F005         	goto	u840
  2892  000A74                     u841:
  2893  000A74  EF60  F005         	goto	l1600
  2894  000A78                     u840:
  2895  000A78  0E01               	movlw	1
  2896  000A7A  6E0C               	movwf	___awmod@counter^0,c
  2897  000A7C  EF44  F005         	goto	l1590
  2898  000A80                     l1588:
  2899  000A80  90D8               	bcf	status,0,c
  2900  000A82  360A               	rlcf	___awmod@divisor^0,f,c
  2901  000A84  360B               	rlcf	(___awmod@divisor+1)^0,f,c
  2902  000A86  2A0C               	incf	___awmod@counter^0,f,c
  2903  000A88                     l1590:
  2904  000A88  AE0B               	btfss	(___awmod@divisor+1)^0,7,c
  2905  000A8A  EF49  F005         	goto	u851
  2906  000A8E  EF4B  F005         	goto	u850
  2907  000A92                     u851:
  2908  000A92  EF40  F005         	goto	l1588
  2909  000A96                     u850:
  2910  000A96                     l1592:
  2911  000A96  500A               	movf	___awmod@divisor^0,w,c
  2912  000A98  5C08               	subwf	___awmod@dividend^0,w,c
  2913  000A9A  500B               	movf	(___awmod@divisor+1)^0,w,c
  2914  000A9C  5809               	subwfb	(___awmod@dividend+1)^0,w,c
  2915  000A9E  A0D8               	btfss	status,0,c
  2916  000AA0  EF54  F005         	goto	u861
  2917  000AA4  EF56  F005         	goto	u860
  2918  000AA8                     u861:
  2919  000AA8  EF5A  F005         	goto	l1596
  2920  000AAC                     u860:
  2921  000AAC  500A               	movf	___awmod@divisor^0,w,c
  2922  000AAE  5E08               	subwf	___awmod@dividend^0,f,c
  2923  000AB0  500B               	movf	(___awmod@divisor+1)^0,w,c
  2924  000AB2  5A09               	subwfb	(___awmod@dividend+1)^0,f,c
  2925  000AB4                     l1596:
  2926  000AB4  90D8               	bcf	status,0,c
  2927  000AB6  320B               	rrcf	(___awmod@divisor+1)^0,f,c
  2928  000AB8  320A               	rrcf	___awmod@divisor^0,f,c
  2929  000ABA  2E0C               	decfsz	___awmod@counter^0,f,c
  2930  000ABC  EF4B  F005         	goto	l1592
  2931  000AC0                     l1600:
  2932  000AC0  500D               	movf	___awmod@sign^0,w,c
  2933  000AC2  B4D8               	btfsc	status,2,c
  2934  000AC4  EF66  F005         	goto	u871
  2935  000AC8  EF68  F005         	goto	u870
  2936  000ACC                     u871:
  2937  000ACC  EF6C  F005         	goto	l1604
  2938  000AD0                     u870:
  2939  000AD0  6C08               	negf	___awmod@dividend^0,c
  2940  000AD2  1E09               	comf	(___awmod@dividend+1)^0,f,c
  2941  000AD4  B0D8               	btfsc	status,0,c
  2942  000AD6  2A09               	incf	(___awmod@dividend+1)^0,f,c
  2943  000AD8                     l1604:
  2944  000AD8  C008  F008         	movff	___awmod@dividend,?___awmod
  2945  000ADC  C009  F009         	movff	___awmod@dividend+1,?___awmod+1
  2946  000AE0  0012               	return		;funcret
  2947  000AE2                     __end_of___awmod:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _health_decreaser *****************
  2951 ;; Defined at:
  2952 ;;		line 462 in file "newmain.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    3
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_game_task
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text14
  2981  000CE4                     __ptext14:
  2982                           	callstack 0
  2983  000CE4                     _health_decreaser:
  2984                           	callstack 26
  2985  000CE4                     
  2986                           ;newmain.c: 464: 
  2987  000CE4  062B               	decf	_health^0,f,c
  2988  000CE6                     
  2989                           ;newmain.c: 465: 
  2990  000CE6  502B               	movf	_health^0,w,c
  2991  000CE8  A4D8               	btfss	status,2,c
  2992  000CEA  EF79  F006         	goto	u151
  2993  000CEE  EF7B  F006         	goto	u150
  2994  000CF2                     u151:
  2995  000CF2  EF7D  F006         	goto	l259
  2996  000CF6                     u150:
  2997  000CF6                     
  2998                           ;newmain.c: 466:     uint8_t count = 0;;newmain.c: 467:     if (isRG0Pressed == 1)
  2999  000CF6  0E07               	movlw	7
  3000  000CF8  6E1B               	movwf	_game_state^0,c
  3001  000CFA                     l259:
  3002  000CFA  0012               	return		;funcret
  3003  000CFC                     __end_of_health_decreaser:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _lowPriorityISR *****************
  3007 ;; Defined at:
  3008 ;;		line 21 in file "newmain.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		None
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        1 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    2
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		Interrupt level 1
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	intcodelo
  3037  000018                     __pintcodelo:
  3038                           	callstack 0
  3039  000018                     _lowPriorityISR:
  3040                           	callstack 25
  3041                           
  3042                           ;incstack = 0
  3043  000018  8030               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3044  00001A  CFE0 F007          	movff	bsr,??_lowPriorityISR
  3045  00001E  C007  FFE0         	movff	??_lowPriorityISR,bsr
  3046  000022  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3047  000024  0010               	retfie	
  3048  000026                     __end_of_lowPriorityISR:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _highPriorityISR *****************
  3052 ;; Defined at:
  3053 ;;		line 14 in file "newmain.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    1
  3074 ;; This function calls:
  3075 ;;		_tmr_isr
  3076 ;;		i2___awmod
  3077 ;; This function is called by:
  3078 ;;		Interrupt level 2
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	intcode
  3083  000008                     __pintcode:
  3084                           	callstack 0
  3085  000008                     _highPriorityISR:
  3086                           	callstack 25
  3087                           
  3088                           ;incstack = 0
  3089  000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3090  00000A  ED2B  F006         	call	int_func,f	;refresh shadow registers
  3091                           
  3092                           	psect	intcode_body
  3093  000C56                     __pintcode_body:
  3094                           	callstack 25
  3095  000C56                     int_func:
  3096                           	callstack 25
  3097  000C56  0006               	pop		; remove dummy address from shadow register refresh
  3098  000C58                     
  3099                           ;newmain.c: 16: int8_t isRC0Pressed;
  3100  000C58  A4F2               	btfss	242,2,c	;volatile
  3101  000C5A  EF31  F006         	goto	i2u139_41
  3102  000C5E  EF33  F006         	goto	i2u139_40
  3103  000C62                     i2u139_41:
  3104  000C62  EF35  F006         	goto	i2l2012
  3105  000C66                     i2u139_40:
  3106  000C66                     
  3107                           ;newmain.c: 17: int8_t isRG0Pressed;
  3108  000C66  EC8E  F006         	call	_tmr_isr	;wreg free
  3109  000C6A                     i2l2012:
  3110                           
  3111                           ;newmain.c: 18: int8_t isRG1Pressed;
  3112  000C6A  2A22               	incf	_sevenSegCounter^0,f,c
  3113  000C6C                     
  3114                           ;newmain.c: 19: int8_t isRG2Pressed;
  3115  000C6C  C022  F001         	movff	_sevenSegCounter,i2___awmod@dividend
  3116  000C70  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3117  000C72  0E00               	movlw	0
  3118  000C74  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3119  000C76  0E0C               	movlw	12
  3120  000C78  6E03               	movwf	i2___awmod@divisor^0,c
  3121  000C7A  EC71  F005         	call	i2___awmod	;wreg free
  3122  000C7E  5001               	movf	?i2___awmod^0,w,c
  3123  000C80  6E22               	movwf	_sevenSegCounter^0,c
  3124  000C82  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3125  000C84  0011               	retfie		f
  3126  000C86                     __end_of_highPriorityISR:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function i2___awmod *****************
  3130 ;; Defined at:
  3131 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  dividend        2    0[COMRAM] int 
  3134 ;;  divisor         2    2[COMRAM] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  sign            1    5[COMRAM] unsigned char 
  3137 ;;  counter         1    4[COMRAM] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    0[COMRAM] int 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        6 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_highPriorityISR
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text17
  3161  000AE2                     __ptext17:
  3162                           	callstack 0
  3163  000AE2                     i2___awmod:
  3164                           	callstack 25
  3165  000AE2  0E00               	movlw	0
  3166  000AE4  6E06               	movwf	i2___awmod@sign^0,c
  3167  000AE6  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3168  000AE8  EF7A  F005         	goto	i2u133_40
  3169  000AEC  EF78  F005         	goto	i2u133_41
  3170  000AF0                     i2u133_41:
  3171  000AF0  EF80  F005         	goto	i2l1980
  3172  000AF4                     i2u133_40:
  3173  000AF4  6C01               	negf	i2___awmod@dividend^0,c
  3174  000AF6  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3175  000AF8  B0D8               	btfsc	status,0,c
  3176  000AFA  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3177  000AFC  0E01               	movlw	1
  3178  000AFE  6E06               	movwf	i2___awmod@sign^0,c
  3179  000B00                     i2l1980:
  3180  000B00  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3181  000B02  EF87  F005         	goto	i2u134_40
  3182  000B06  EF85  F005         	goto	i2u134_41
  3183  000B0A                     i2u134_41:
  3184  000B0A  EF8B  F005         	goto	i2l1984
  3185  000B0E                     i2u134_40:
  3186  000B0E  6C03               	negf	i2___awmod@divisor^0,c
  3187  000B10  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  3188  000B12  B0D8               	btfsc	status,0,c
  3189  000B14  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  3190  000B16                     i2l1984:
  3191  000B16  5003               	movf	i2___awmod@divisor^0,w,c
  3192  000B18  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3193  000B1A  B4D8               	btfsc	status,2,c
  3194  000B1C  EF92  F005         	goto	i2u135_41
  3195  000B20  EF94  F005         	goto	i2u135_40
  3196  000B24                     i2u135_41:
  3197  000B24  EFB8  F005         	goto	i2l2000
  3198  000B28                     i2u135_40:
  3199  000B28  0E01               	movlw	1
  3200  000B2A  6E05               	movwf	i2___awmod@counter^0,c
  3201  000B2C  EF9C  F005         	goto	i2l1990
  3202  000B30                     i2l1988:
  3203  000B30  90D8               	bcf	status,0,c
  3204  000B32  3603               	rlcf	i2___awmod@divisor^0,f,c
  3205  000B34  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3206  000B36  2A05               	incf	i2___awmod@counter^0,f,c
  3207  000B38                     i2l1990:
  3208  000B38  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  3209  000B3A  EFA1  F005         	goto	i2u136_41
  3210  000B3E  EFA3  F005         	goto	i2u136_40
  3211  000B42                     i2u136_41:
  3212  000B42  EF98  F005         	goto	i2l1988
  3213  000B46                     i2u136_40:
  3214  000B46                     i2l1992:
  3215  000B46  5003               	movf	i2___awmod@divisor^0,w,c
  3216  000B48  5C01               	subwf	i2___awmod@dividend^0,w,c
  3217  000B4A  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3218  000B4C  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3219  000B4E  A0D8               	btfss	status,0,c
  3220  000B50  EFAC  F005         	goto	i2u137_41
  3221  000B54  EFAE  F005         	goto	i2u137_40
  3222  000B58                     i2u137_41:
  3223  000B58  EFB2  F005         	goto	i2l1996
  3224  000B5C                     i2u137_40:
  3225  000B5C  5003               	movf	i2___awmod@divisor^0,w,c
  3226  000B5E  5E01               	subwf	i2___awmod@dividend^0,f,c
  3227  000B60  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3228  000B62  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3229  000B64                     i2l1996:
  3230  000B64  90D8               	bcf	status,0,c
  3231  000B66  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3232  000B68  3203               	rrcf	i2___awmod@divisor^0,f,c
  3233  000B6A  2E05               	decfsz	i2___awmod@counter^0,f,c
  3234  000B6C  EFA3  F005         	goto	i2l1992
  3235  000B70                     i2l2000:
  3236  000B70  5006               	movf	i2___awmod@sign^0,w,c
  3237  000B72  B4D8               	btfsc	status,2,c
  3238  000B74  EFBE  F005         	goto	i2u138_41
  3239  000B78  EFC0  F005         	goto	i2u138_40
  3240  000B7C                     i2u138_41:
  3241  000B7C  EFC4  F005         	goto	i2l2004
  3242  000B80                     i2u138_40:
  3243  000B80  6C01               	negf	i2___awmod@dividend^0,c
  3244  000B82  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3245  000B84  B0D8               	btfsc	status,0,c
  3246  000B86  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3247  000B88                     i2l2004:
  3248  000B88  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3249  000B8C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3250  000B90  0012               	return		;funcret
  3251  000B92                     __end_ofi2___awmod:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _tmr_isr *****************
  3255 ;; Defined at:
  3256 ;;		line 120 in file "newmain.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_highPriorityISR
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text18
  3284  000D1C                     __ptext18:
  3285                           	callstack 0
  3286  000D1C                     _tmr_isr:
  3287                           	callstack 25
  3288  000D1C                     
  3289                           ;newmain.c: 122: }
  3290  000D1C  94F2               	bcf	242,2,c	;volatile
  3291                           
  3292                           ;newmain.c: 123: 
  3293  000D1E  2E17               	decfsz	_tmr_ticks_left^0,f,c
  3294  000D20  EF94  F006         	goto	i2l136
  3295  000D24                     
  3296                           ;newmain.c: 124: 
  3297  000D24  0E01               	movlw	1
  3298  000D26  6E19               	movwf	_tmr_state^0,c
  3299  000D28                     i2l136:
  3300  000D28  0012               	return		;funcret
  3301  000D2A                     __end_of_tmr_isr:
  3302                           	callstack 0
  3303  0000                     
  3304                           	psect	rparam
  3305  0000                     
  3306                           	psect	temp
  3307  000030                     btemp:
  3308                           	callstack 0
  3309  000030                     	ds	1
  3310  0000                     int$flags	set	btemp
  3311  0000                     wtemp8	set	btemp+1
  3312  0000                     ttemp5	set	btemp+1
  3313  0000                     ttemp6	set	btemp+4
  3314  0000                     ttemp7	set	btemp+8
  3315                           
  3316                           	psect	idloc
  3317                           
  3318                           ;Config register IDLOC0 @ 0x200000
  3319                           ;	unspecified, using default values
  3320  200000                     	org	2097152
  3321  200000  FF                 	db	255
  3322                           
  3323                           ;Config register IDLOC1 @ 0x200001
  3324                           ;	unspecified, using default values
  3325  200001                     	org	2097153
  3326  200001  FF                 	db	255
  3327                           
  3328                           ;Config register IDLOC2 @ 0x200002
  3329                           ;	unspecified, using default values
  3330  200002                     	org	2097154
  3331  200002  FF                 	db	255
  3332                           
  3333                           ;Config register IDLOC3 @ 0x200003
  3334                           ;	unspecified, using default values
  3335  200003                     	org	2097155
  3336  200003  FF                 	db	255
  3337                           
  3338                           ;Config register IDLOC4 @ 0x200004
  3339                           ;	unspecified, using default values
  3340  200004                     	org	2097156
  3341  200004  FF                 	db	255
  3342                           
  3343                           ;Config register IDLOC5 @ 0x200005
  3344                           ;	unspecified, using default values
  3345  200005                     	org	2097157
  3346  200005  FF                 	db	255
  3347                           
  3348                           ;Config register IDLOC6 @ 0x200006
  3349                           ;	unspecified, using default values
  3350  200006                     	org	2097158
  3351  200006  FF                 	db	255
  3352                           
  3353                           ;Config register IDLOC7 @ 0x200007
  3354                           ;	unspecified, using default values
  3355  200007                     	org	2097159
  3356  200007  FF                 	db	255
  3357                           
  3358                           	psect	config
  3359                           
  3360                           ; Padding undefined space
  3361  300000                     	org	3145728
  3362  300000  FF                 	db	255
  3363                           
  3364                           ;Config register CONFIG1H @ 0x300001
  3365                           ;	Oscillator Selection bits
  3366                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3367                           ;	Fail-Safe Clock Monitor Enable bit
  3368                           ;	FCMEN = 0x0, unprogrammed default
  3369                           ;	Internal/External Oscillator Switchover bit
  3370                           ;	IESO = 0x0, unprogrammed default
  3371  300001                     	org	3145729
  3372  300001  06                 	db	6
  3373                           
  3374                           ;Config register CONFIG2L @ 0x300002
  3375                           ;	unspecified, using default values
  3376                           ;	Power-up Timer Enable bit
  3377                           ;	PWRT = 0x1, unprogrammed default
  3378                           ;	Brown-out Reset Enable bits
  3379                           ;	BOREN = 0x3, unprogrammed default
  3380                           ;	Brown-out Voltage bits
  3381                           ;	BORV = 0x3, unprogrammed default
  3382  300002                     	org	3145730
  3383  300002  1F                 	db	31
  3384                           
  3385                           ;Config register CONFIG2H @ 0x300003
  3386                           ;	Watchdog Timer
  3387                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3388                           ;	Watchdog Timer Postscale Select bits
  3389                           ;	WDTPS = 0xF, unprogrammed default
  3390  300003                     	org	3145731
  3391  300003  1E                 	db	30
  3392                           
  3393                           ;Config register CONFIG3L @ 0x300004
  3394                           ;	unspecified, using default values
  3395                           ;	Processor Data Memory Mode Select bits
  3396                           ;	MODE = 0x3, unprogrammed default
  3397                           ;	Address Bus Width Select bits
  3398                           ;	ADDRBW = 0x3, unprogrammed default
  3399                           ;	Data Bus Width Select bit
  3400                           ;	DATABW = 0x1, unprogrammed default
  3401                           ;	External Bus Data Wait Enable bit
  3402                           ;	WAIT = 0x1, unprogrammed default
  3403  300004                     	org	3145732
  3404  300004  F3                 	db	243
  3405                           
  3406                           ;Config register CONFIG3H @ 0x300005
  3407                           ;	unspecified, using default values
  3408                           ;	CCP2 MUX bit
  3409                           ;	CCP2MX = 0x1, unprogrammed default
  3410                           ;	ECCP MUX bit
  3411                           ;	ECCPMX = 0x1, unprogrammed default
  3412                           ;	Low-Power Timer1 Oscillator Enable bit
  3413                           ;	LPT1OSC = 0x0, unprogrammed default
  3414                           ;	MCLR Pin Enable bit
  3415                           ;	MCLRE = 0x1, unprogrammed default
  3416  300005                     	org	3145733
  3417  300005  83                 	db	131
  3418                           
  3419                           ;Config register CONFIG4L @ 0x300006
  3420                           ;	unspecified, using default values
  3421                           ;	Stack Full/Underflow Reset Enable bit
  3422                           ;	STVREN = 0x1, unprogrammed default
  3423                           ;	Single-Supply ICSP Enable bit
  3424                           ;	LVP = 0x1, unprogrammed default
  3425                           ;	Boot Block Size Select bits
  3426                           ;	BBSIZ = 0x0, unprogrammed default
  3427                           ;	Extended Instruction Set Enable bit
  3428                           ;	XINST = 0x0, unprogrammed default
  3429                           ;	Background Debugger Enable bit
  3430                           ;	DEBUG = 0x1, unprogrammed default
  3431  300006                     	org	3145734
  3432  300006  85                 	db	133
  3433                           
  3434                           ; Padding undefined space
  3435  300007                     	org	3145735
  3436  300007  FF                 	db	255
  3437                           
  3438                           ;Config register CONFIG5L @ 0x300008
  3439                           ;	unspecified, using default values
  3440                           ;	Code Protection bit Block 0
  3441                           ;	CP0 = 0x1, unprogrammed default
  3442                           ;	Code Protection bit Block 1
  3443                           ;	CP1 = 0x1, unprogrammed default
  3444                           ;	Code Protection bit Block 2
  3445                           ;	CP2 = 0x1, unprogrammed default
  3446                           ;	Code Protection bit Block 3
  3447                           ;	CP3 = 0x1, unprogrammed default
  3448                           ;	Code Protection bit Block 4
  3449                           ;	CP4 = 0x1, unprogrammed default
  3450                           ;	Code Protection bit Block 5
  3451                           ;	CP5 = 0x1, unprogrammed default
  3452                           ;	Code Protection bit Block 6
  3453                           ;	CP6 = 0x1, unprogrammed default
  3454                           ;	Code Protection bit Block 7
  3455                           ;	CP7 = 0x1, unprogrammed default
  3456  300008                     	org	3145736
  3457  300008  FF                 	db	255
  3458                           
  3459                           ;Config register CONFIG5H @ 0x300009
  3460                           ;	unspecified, using default values
  3461                           ;	Boot Block Code Protection bit
  3462                           ;	CPB = 0x1, unprogrammed default
  3463                           ;	Data EEPROM Code Protection bit
  3464                           ;	CPD = 0x1, unprogrammed default
  3465  300009                     	org	3145737
  3466  300009  C0                 	db	192
  3467                           
  3468                           ;Config register CONFIG6L @ 0x30000A
  3469                           ;	unspecified, using default values
  3470                           ;	Write Protection bit Block 0
  3471                           ;	WRT0 = 0x1, unprogrammed default
  3472                           ;	Write Protection bit Block 1
  3473                           ;	WRT1 = 0x1, unprogrammed default
  3474                           ;	Write Protection bit Block 2
  3475                           ;	WRT2 = 0x1, unprogrammed default
  3476                           ;	Write Protection bit Block 3
  3477                           ;	WRT3 = 0x1, unprogrammed default
  3478                           ;	Write Protection bit Block 4
  3479                           ;	WRT4 = 0x1, unprogrammed default
  3480                           ;	Write Protection bit Block 5
  3481                           ;	WRT5 = 0x1, unprogrammed default
  3482                           ;	Write Protection bit Block 6
  3483                           ;	WRT6 = 0x1, unprogrammed default
  3484                           ;	Write Protection bit Block 7
  3485                           ;	WRT7 = 0x1, unprogrammed default
  3486  30000A                     	org	3145738
  3487  30000A  FF                 	db	255
  3488                           
  3489                           ;Config register CONFIG6H @ 0x30000B
  3490                           ;	unspecified, using default values
  3491                           ;	Configuration Register Write Protection bit
  3492                           ;	WRTC = 0x1, unprogrammed default
  3493                           ;	Boot Block Write Protection bit
  3494                           ;	WRTB = 0x1, unprogrammed default
  3495                           ;	Data EEPROM Write Protection bit
  3496                           ;	WRTD = 0x1, unprogrammed default
  3497  30000B                     	org	3145739
  3498  30000B  E0                 	db	224
  3499                           
  3500                           ;Config register CONFIG7L @ 0x30000C
  3501                           ;	unspecified, using default values
  3502                           ;	Table Read Protection bit Block 0
  3503                           ;	EBTR0 = 0x1, unprogrammed default
  3504                           ;	Table Read Protection bit Block 1
  3505                           ;	EBTR1 = 0x1, unprogrammed default
  3506                           ;	Table Read Protection bit Block 2
  3507                           ;	EBTR2 = 0x1, unprogrammed default
  3508                           ;	Table Read Protection bit Block 3
  3509                           ;	EBTR3 = 0x1, unprogrammed default
  3510                           ;	Table Read Protection bit Block 4
  3511                           ;	EBTR4 = 0x1, unprogrammed default
  3512                           ;	Table Read Protection bit Block 5
  3513                           ;	EBTR5 = 0x1, unprogrammed default
  3514                           ;	Table Read Protection bit Block 6
  3515                           ;	EBTR6 = 0x1, unprogrammed default
  3516                           ;	Table Read Protection bit Block 7
  3517                           ;	EBTR7 = 0x1, unprogrammed default
  3518  30000C                     	org	3145740
  3519  30000C  FF                 	db	255
  3520                           
  3521                           ;Config register CONFIG7H @ 0x30000D
  3522                           ;	unspecified, using default values
  3523                           ;	Boot Block Table Read Protection bit
  3524                           ;	EBTRB = 0x1, unprogrammed default
  3525  30000D                     	org	3145741
  3526  30000D  40                 	db	64
  3527                           tosu	equ	0xFFF
  3528                           tosh	equ	0xFFE
  3529                           tosl	equ	0xFFD
  3530                           stkptr	equ	0xFFC
  3531                           pclatu	equ	0xFFB
  3532                           pclath	equ	0xFFA
  3533                           pcl	equ	0xFF9
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           indf0	equ	0xFEF
  3541                           postinc0	equ	0xFEE
  3542                           postdec0	equ	0xFED
  3543                           preinc0	equ	0xFEC
  3544                           plusw0	equ	0xFEB
  3545                           fsr0h	equ	0xFEA
  3546                           fsr0l	equ	0xFE9
  3547                           wreg	equ	0xFE8
  3548                           indf1	equ	0xFE7
  3549                           postinc1	equ	0xFE6
  3550                           postdec1	equ	0xFE5
  3551                           preinc1	equ	0xFE4
  3552                           plusw1	equ	0xFE3
  3553                           fsr1h	equ	0xFE2
  3554                           fsr1l	equ	0xFE1
  3555                           bsr	equ	0xFE0
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           preinc2	equ	0xFDC
  3560                           plusw2	equ	0xFDB
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         13
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_game_task
    _sevenSeg_controller->___awmod
    _game_task->_randomgen
    _randomgen->___awmod

Critical Paths under _lowPriorityISR in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    _highPriorityISR->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowPriorityISR in BANK0

    None.

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowPriorityISR in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowPriorityISR in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowPriorityISR in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowPriorityISR in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowPriorityISR in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowPriorityISR in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowPriorityISR in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowPriorityISR in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowPriorityISR in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowPriorityISR in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowPriorityISR in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowPriorityISR in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowPriorityISR in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowPriorityISR in BANK14

    None.

Critical Paths under _highPriorityISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowPriorityISR in BANK15

    None.

Critical Paths under _highPriorityISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3676
                          _game_task
                           _init_irq
                         _init_ports
                          _init_vars
                         _input_task
                _sevenSeg_controller
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sevenSeg_controller                                  2     2      0    2340
                                             13 COMRAM     2     2      0
                            ___awmod
                           _sevenSeg
 ---------------------------------------------------------------------------------
 (2) _sevenSeg                                             4     3      1    1488
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _input_task                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_task                                            3     3      0    1336
                                             19 COMRAM     3     3      0
                   _health_decreaser
                          _randomgen
                         _reset_task
                      _shape_shifter
                          _tmr_start
 ---------------------------------------------------------------------------------
 (2) _tmr_start                                            1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shape_shifter                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_task                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomgen                                            6     6      0    1293
                                             13 COMRAM     6     6      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     852
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _health_decreaser                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lowPriorityISR                                       1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highPriorityISR                                      0     0      0     348
                            _tmr_isr
                          i2___awmod
 ---------------------------------------------------------------------------------
 (6) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _tmr_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_task
     _health_decreaser
     _randomgen
       ___awmod
     _reset_task
     _shape_shifter
     _tmr_start
   _init_irq
   _init_ports
   _init_vars
   _input_task
   _sevenSeg_controller
     ___awmod
     _sevenSeg
   _tmr_init

 _lowPriorityISR (ROOT)

 _highPriorityISR (ROOT)
   _tmr_isr
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      2F       1       50.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      32        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 11 13:42:36 2022

                          _L1 002F                            _L2 002E                            _L3 002D  
            randomgen@lastbit 0012                            bsr 000FE0              randomgen@noteval 0010  
                         l120 0CB0                           l200 03EC                           l123 0C1E  
                         l203 0416                           l150 0824                           l142 0CE2  
                         l126 0D34                           l206 0440                           l224 05D6  
                         l320 0BA2                           l209 046A                           l162 0644  
                         l315 0392                           l171 0680                           l139 0D0C  
                         l252 0CCA                           l149 07E4                           l181 0722  
                         l173 06AA                           l165 062E                           l159 08D4  
                         l255 0D1A                           l271 00B4                           l183 0734  
                         l175 06BC                           l280 00EE                           l185 075E  
                         l177 06E6                           l169 066E                           l249 0A30  
                         l193 0398                           l274 00CA                           l259 0CFA  
                         l283 0100                           l179 06F8                           l277 00DC  
                         l189 0770                           l197 03C2                           l573 0AE0  
                         u200 063C                           u201 0638                           u210 0654  
                         u211 0650                           u300 0708                           u220 0662  
                         u301 0704                           u221 065E                           u150 0CF6  
                         u310 0716                           u230 067C                           u151 0CF2  
                         u311 0712                           u231 0678                           u320 0730  
                         u240 0690                           u160 05E8                           u321 072C  
                         u241 068C                           u161 05E4                           u330 0744  
                         u250 069E                           u170 05F8                           u331 0740  
                         u251 069A                           u171 05F4                           u340 0752  
                         u260 06B8                           u180 0608                           u341 074E  
                         u261 06B4                           u181 0604                           u350 076C  
                         u270 06CC                           u190 0616                           u351 0768  
                         u271 06C8                           u191 0612                           u280 06DA  
                         u281 06D6                           u290 06F4                           u291 06F0  
                         u820 0A44                           u900 07E4                           u821 0A40  
                         u901 07E0                           u830 0A5E                           u910 07F8  
                         u831 0A5A                           u911 07F4                           u840 0A78  
                         u920 0836                           u841 0A74                           u921 0832  
                         u850 0A96                           u930 087C                           u851 0A92  
                         u931 0878                           u860 0AAC                           u940 088E  
                         u861 0AA8                           u941 088A                           u870 0AD0  
                         u950 08D4                           u871 0ACC                           u951 08D0  
                         u880 0786                           u960 03A6                           u881 0782  
                         u961 03A2                           u890 07A2                           u970 03D0  
                         u891 079E                           u971 03CC                           u980 03FA  
                         u981 03F6                           u990 0424                           u991 0420  
                ___awmod@sign 000D                           wreg 000FE8                          l1040 0CD2  
                        l1200 05D8                          l1042 0CD6                          l1210 063C  
                        l1202 05E8                          l1044 0CDE                          l1220 069E  
                        l1212 0654                          l1204 05F8                          l2020 0BAA  
                        l1046 0CE0                          l1038 0CCE                          l1230 0708  
                        l1222 06B8                          l1214 0662                          l1206 0608  
                        l2022 0BBA                          l1160 0CB2                          l1240 076C  
                        l1232 0716                          l1224 06CC                          l1216 067C  
                        l1208 0616                          l2024 0BCE                          l2016 0B92  
                        l1170 0CF6                          l1162 0CC6                          l1234 0730  
                        l1226 06DA                          l1218 0690                          l2050 0590  
                        l2018 0BA6                          l1164 0D0E                          l2060 034C  
                        l1180 0C9C                          l1236 0744                          l1228 06F4  
                        l2052 0960                          l1166 0CE4                          l1190 0D2A  
                        l1182 0C9E                          l1238 0752                          l2054 0A0A  
                        l1168 0CE6                          l1600 0AC0                          l2056 012E  
                        l1192 0D2E                          l1184 0CA0                          l1176 0C86  
                        l1602 0AD0                          l1610 0786                          l2058 015C  
                        l1194 0D30                          l1186 0CA2                          l1178 0C9A  
                        l1604 0AD8                          l1620 07A8                          l1612 078E  
                        l1196 0D32                          l1188 0BDA                          l1700 09D6  
                        l1630 07D2                          l1622 07BE                          l1614 078E  
                        l1702 09DE                          l1710 09F6                          l1198 0CFC  
                        l1640 0836                          l1632 07E8                          l1624 07C2  
                        l1616 0792                          l1608 0772                          l1800 007A  
                        l1704 09E6                          l1720 0394                          l1642 083E  
                        l1650 086C                          l1634 07F8                          l1626 07CA  
                        l1618 07A2                          l1810 0092                          l1802 007C  
                        l1706 09EE                          l1730 03FA                          l1722 03A6  
                        l1580 0A50                          l1572 0A32                          l1660 08A6  
                        l1644 084A                          l1652 087C                          l1636 0804  
                        l1628 07D0                          l1900 025C                          l1812 00A2  
                        l1804 007E                          l1740 045C                          l1732 0408  
                        l1724 03B4                          l1590 0A88                          l1582 0A5E  
                        l1574 0A36                          l1662 08C2                          l1654 088E  
                        l1646 084E                          l1638 0808                          l1910 027A  
                        l1902 0260                          l1814 00A4                          l1806 008E  
                        l1670 08E4                          l1750 04C6                          l1742 0478  
                        l1734 0424                          l1726 03D0                          l1592 0A96  
                        l1584 0A66                          l1576 0A44                          l1656 0896  
                        l1664 08C4                          l1648 086A                          l1920 02A4  
                        l1912 028C                          l1904 0264                          l1816 00AC  
                        l1840 0112                          l1808 0090                          l1680 090C  
                        l1672 08EC                          l1760 052A                          l1752 04EA  
                        l1744 0486                          l1736 0432                          l1728 03DE  
                        l1594 0AAC                          l1586 0A78                          l1578 0A4C  
                        l1658 08A2                          l1930 02D6                          l1922 02AC  
                        l1914 0290                          l1906 0274                          l1850 0180  
                        l1818 00C2                          l1842 016A                          l1690 0934  
                        l1682 0914                          l1674 08F4                          l1666 08D8  
                        l1762 053E                          l1754 04F8                          l1746 0494  
                        l1738 044E                          l1596 0AB4                          l1588 0A80  
                        l1940 02FA                          l1932 02DE                          l1924 02AE  
                        l1916 029A                          l1908 0278                          l1860 01B2  
                        l1852 0182                          l1844 0172                          l1780 002E  
                        l1692 093C                          l1684 091C                          l1676 08FC  
                        l1668 08DC                          l1764 054C                          l1756 0506  
                        l1748 04B8                          l1772 057C                          l1598 0ABA  
                        l1950 0326                          l1942 030A                          l1934 02E2  
                        l1926 02B6                          l1918 029E                          l1870 01DE  
                        l1862 01B6                          l1854 018A                          l1846 0178  
                        l1790 0054                          l1782 003E                          l1694 0944  
                        l1686 0924                          l1678 0904                          l1766 0560  
                        l1758 051C                          l1952 0330                          l1944 030E  
                        l1936 02F2                          l1928 02C6                          l1880 0204  
                        l1872 01E2                          l1864 01C6                          l1856 019A  
                        l1848 017C                          l1792 0056                          l1784 0040  
                        l1688 092C                          l1768 056E                          l1946 0310  
                        l1938 02F6                          l1890 0220                          l1882 0208  
                        l1874 01E4                          l1866 01CA                          l1858 01AA  
                        l1794 0066                          l1786 0042                          l1778 002A  
                        l1698 094C                          l1948 0322                          l1892 0230  
                        l1884 020E                          l1876 01F6                          l1868 01CE  
                        l1796 0068                          l1788 0052                          l1894 0240  
                        l1886 0216                          l1878 01FA                          l1958 0338  
                        l1798 006A                          l1896 0248                          l1888 0218  
                        l1898 024C                          u1000 044E                          u1001 044A  
                        u1010 0478                          u1011 0474                          u1100 007A  
                        u1020 04B8                          u1101 0076                          u1021 04B4  
                        u1110 008E                          u1030 04EA                          u1111 008A  
                        u1031 04E6                          u1200 01C6                          u1120 00A2  
                        u1040 051C                          u1201 01C2                          u1121 009E  
                        u1041 0518                          u1210 01DE                          u1130 00C2  
                        u1050 053E                          u1211 01DA                          u1131 00BE  
                        u1051 053A                          u1300 02F2                          u1220 01F6  
                        u1140 00D8                          u1060 0560                          u1301 02EE  
                        u1221 01F2                          u1141 00D4                          u1061 055C  
                        u1310 030A                          u1230 0230                          u1150 00EA  
                        u1070 003E                          u1311 0306                          u1231 022C  
                        u1151 00E6                          u1071 003A                          u1320 0322  
                        u1240 0240                          u1160 00FC                          u1080 0052  
                        u1400 0BBA                          u1321 031E                          u1241 023C  
                        u1161 00F8                          u1081 004E                          u1401 0BB6  
                        u1250 025C                          u1170 010E                          u1090 0066  
                        u1410 0BCA                          u1251 0258                          u1171 010A  
                        u1091 0062                          u1411 0BC6                          u1260 0274  
                        u1180 019A                          u1261 0270                          u1181 0196  
                        u1270 028C                          u1190 01AA                          u1271 0288  
                        u1191 01A6                          u1280 02C6                          u1281 02C2  
                        u1290 02D6                          u1291 02D2                          i1l75 001E  
                        i2l70 0C82                          _TMR0 000FD6                  _tmr_startreq 0018  
                        _main 0B92                          fsr1l 000FE1                          btemp 0030  
          randomgen@intermbit 0013                          start 0026                  ___param_bank 000000  
                       ?_main 0001               __end_of___awmod 0AE2                         _T0CON 000FD5  
                       _T1CON 000FCD                         i2l136 0D28                         i2l573 0B90  
                       _TMR1H 000FCF                         _TMR1L 000FCE                         _PORTA 000F80  
             _sevenSegCounter 0022                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                         _PORTF 000F85  
                       _PORTH 000F87                         _PORTJ 000F88                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TRISF 000F97                         _TRISG 000F98  
                       _TRISH 000F99                         _TRISJ 000F9A                         _level 002A  
                       tablat 000FF5               __end_of_tmr_isr 0D2A                         ttemp5 0031  
                       ttemp6 0034                         ttemp7 0038                         status 000FD8  
                       wtemp8 0031            __size_ofi2___awmod 00B0                _lowPriorityISR 0018  
             __initialization 0C20                  __end_of_main 0BDA                _tmr_ticks_left 0017  
       __end_of_shape_shifter 0CCC                        ??_main 0017                 __activetblptr 000003  
                      _ADCON1 000FC1      __size_of_highPriorityISR 0C7E                        i2l2000 0B70  
                      i2l2002 0B80                        i2l2010 0C66                        i2l2004 0B88  
                      i2l2012 0C6A                        i2l2014 0C6C                        i2l2008 0C58  
                      i2l1172 0D1C                        i2l1174 0D24                        i2l1980 0B00  
                      i2l1972 0AE2                        i2l1990 0B38                        i2l1982 0B0E  
                      i2l1974 0AE6                        i2l1992 0B46                        i2l1984 0B16  
                      i2l1976 0AF4                        i2l1994 0B5C                        i2l1986 0B28  
                      i2l1978 0AFC                        i2l1996 0B64                        i2l1988 0B30  
                      i2l1998 0B6A                        _INTCON 000FF2        __end_of_lowPriorityISR 0026  
   __size_of_health_decreaser 0018                     ??___awmod 000C                        _health 002B  
            __end_of_init_irq 0D36                  _isRC0Pressed 001F                        clear_0 0C46  
             ___awmod@divisor 000A               ___awmod@counter 000C                  __pdataCOMRAM 002C  
           __end_ofi2___awmod 0B92              __end_of_sevenSeg 0A32                  _isRG0Pressed 0029  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _isRG1Pressed 0028                  _isRG2Pressed 0027              __end_of_tmr_init 0D0E  
                _isRG3Pressed 0026                i2___awmod@sign 0006                     ??_tmr_isr 0001  
                _isRG4Pressed 0025                    __accesstop 0060       __end_of__initialization 0C4C  
 __end_of_sevenSeg_controller 05D8               ?_lowPriorityISR 0001                 ___rparam_used 000001  
              __pcstackCOMRAM 0001                game_task@count 0016            __size_of_game_task 036A  
                  __pnvCOMRAM 0024            __size_of_init_vars 002C             ??_highPriorityISR 0007  
                  _game_level 002C            __size_of_randomgen 0164                    _game_state 001B  
          __size_of_tmr_start 0018                     ?_init_irq 0001             __end_of_game_task 0394  
                     __Hparam 0000                       __Lparam 0000                     ?_sevenSeg 0008  
            _health_decreaser 0CE4                       ___awmod 0A32                     ?_tmr_init 0001  
                     __pcinit 0C20                    _init_ports 0BDA                       __ramtop 1000  
                     __ptext0 0B92                       __ptext1 0CFC                       __ptext2 0394  
                     __ptext3 08D6                       __ptext4 05D8                       __ptext5 0C86  
                     __ptext6 0BDA                       __ptext7 0D2A                       __ptext8 002A  
                     __ptext9 0CCC             __end_of_init_vars 0CB2              ___awmod@dividend 0008  
                     _htmrval 001C                       _ltmrval 0023                       _whichRG 0024  
                     _tmr_isr 0D1C                    _input_task 05D8             __end_of_randomgen 08D6  
              __pintcode_body 0C56          end_of_initialization 0C4C                       int_func 0C56  
                  ??_init_irq 0008                    _reset_task 0D0E                    ??_sevenSeg 0009  
                     postdec1 000FE5                       postinc0 000FEE                    ??_tmr_init 0008  
           __end_of_tmr_start 0CE4                     _PORTCbits 000F82                     _PORTFbits 000F85  
                   _PORTGbits 000F86                _isGameFinished 0020                     i2___awmod 0AE2  
            ??_lowPriorityISR 0007        __size_of_shape_shifter 001A                 __pidataCOMRAM 0D36  
                 ?_init_ports 0001           start_initialization 0C20                   ?_input_task 0001  
             _highPriorityISR 0008                    ?i2___awmod 0001                   ?_reset_task 0001  
__size_of_sevenSeg_controller 0244                 _shape_shifter 0CB2                  randomgen@val 000F  
                randomgen@num 0011                   __pbssCOMRAM 0017      __end_of_health_decreaser 0CFC  
         __size_of_init_ports 0046                    randomgen@i 000E             __size_of_init_irq 000C  
                   _game_task 002A                     __pintcode 0008                      ?___awmod 0008  
         __size_of_input_task 019A             __size_of_sevenSeg 015C                   __pintcodelo 0018  
           __size_of_tmr_init 0012                ?_shape_shifter 0001                _level_subcount 001A  
     __end_of_highPriorityISR 0C86                     _isPressed 001E           __size_of_reset_task 000E  
                    ?_tmr_isr 0001                   ??i2___awmod 0005                     _init_vars 0C86  
                   _randomgen 0772                      i2u133_40 0AF4                      i2u133_41 0AF0  
                    i2u134_40 0B0E                      i2u134_41 0B0A                      i2u135_40 0B28  
                    i2u135_41 0B24                      i2u136_40 0B46                      i2u136_41 0B42  
                    i2u137_40 0B5C                      i2u137_41 0B58                      i2u138_40 0B80  
                    i2u138_41 0B7C                      i2u139_40 0C66                      i2u139_41 0C62  
                  ?_game_task 0001                      _RCONbits 000FD0                     _tmr_state 0019  
                   _tmr_start 0CCC                 _isGameStarted 0021                    ?_init_vars 0001  
                   copy_data0 0C34            i2___awmod@dividend 0001                    ?_randomgen 0001  
                    __Hrparam 0000                      __Lrparam 0000              __size_of___awmod 00B0  
             ??_shape_shifter 0008                  ??_init_ports 0008                    ?_tmr_start 0001  
            ?_highPriorityISR 0001                  ??_input_task 0008                      __ptext10 0CB2  
                    __ptext11 0D0E                      __ptext12 0772                      __ptext13 0A32  
                    __ptext14 0CE4                      __ptext17 0AE2                      __ptext18 0D1C  
         _sevenSeg_controller 0394              __size_of_tmr_isr 000E                 __size_of_main 0048  
                    _init_irq 0D2A            __end_of_init_ports 0C20                     sevenSeg@D 0008  
                   sevenSeg@J 000B                      _tmr1flag 001D                  ??_reset_task 0008  
                 ??_game_task 0014                      _sevenSeg 08D6          ?_sevenSeg_controller 0001  
                    int$flags 0030                      _tmr_init 0CFC            __end_of_input_task 0772  
           i2___awmod@divisor 0003             i2___awmod@counter 0005                    _INTCONbits 000FF2  
          __end_of_reset_task 0D1C                   ??_init_vars 0008                tmr_start@ticks 0008  
           ?_health_decreaser 0001                      intlevel1 0000                      intlevel2 0000  
                 ??_randomgen 000E            ??_health_decreaser 0008       __size_of_lowPriorityISR 000E  
       ??_sevenSeg_controller 000E                   ??_tmr_start 0008  
