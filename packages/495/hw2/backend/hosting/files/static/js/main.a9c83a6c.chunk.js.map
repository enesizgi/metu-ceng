{"version":3,"sources":["components/RealmApp.js","utils.js","hooks/useErrorAlert.js","components/WelcomePage.js","components/UserItem.js","hooks/useCollection.js","hooks/useWatch.js","hooks/useUsers.js","hooks/util-hooks.js","components/AdminPage/UsersPage.js","hooks/useBooks.js","components/BookItem.js","components/AdminPage/BooksPage.js","components/AdminPage/index.js","components/ProfilePage.js","components/ReviewsPage.js","colors.js","components/Theme.js","components/AppName.js","components/App.js","reportWebVitals.js","index.js"],"names":["createRealmApp","id","Realm","baseUrl","RealmAppContext","React","createContext","RealmAppProvider","appId","children","useState","realmApp","setRealmApp","useEffect","currentUser","setCurrentUser","logIn","useCallback","credentials","a","logOut","removeUser","switchToAdmin","authenticatedUsers","Object","values","allUsers","filter","user","isLoggedIn","switchUser","find","userId","userToRemove","realmAppContext","useMemo","Provider","value","useRealmApp","useContext","Error","toggleBoolean","prev","isValidArrayIndex","arr","idx","length","addValueAtIndex","slice","replaceValueAtIndex","newValue","updateValueAtIndex","updater","removeValueAtIndex","getTodoIndex","todos","todo","findIndex","t","todo1","todo2","String","_id","Alert","props","elevation","variant","ErrorAlert","isOpen","message","onClose","severity","WelcomePage","isAdminLogin","onRegisterHandler","isSignup","setIsSignup","noErrors","email","password","other","error","setError","clearErrors","NonAuthErrorAlert","clearError","hideAfterMs","showErrorAlert","setShowErrorAlert","clearErrorAlert","timeout","setTimeout","clearTimeout","useErrorAlert","prevError","showPassword","setShowPassword","onFormSubmit","emailPasswordAuth","registerUser","emailPassword","console","log","handleAuthenticationError","Container","className","Card","onSubmit","e","preventDefault","formData","FormData","target","fromEntries","entries","Typography","component","gutterBottom","TextField","name","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","Button","color","err","handleUnknownError","warn","statusCode","UserItem","userActions","edge","size","username","deleteUser","data","useCollection","cluster","db","collection","mongoClient","noop","defaultChangeHandlers","onInsert","onUpdate","onReplace","onDelete","useWatch","changeHandlers","handlers","handlersRef","useRef","current","watch","change","operationType","watchTodos","useUsers","pageNumber","users","setUsers","loading","setLoading","totalUsers","setTotalUsers","userCollection","dataSourceName","count","then","i","callFunction","limit","skip","oldUsers","fullDocument","documentKey","saveUser","draftUser","_partition","insertOne","match","updateUser","userID","updatedFields","updateOne","$set","deleteOne","useShowLoader","delayMs","fn","ms","showLoader","setShowLoader","UsersPage","handleBackButtonClick","isAddUserClicked","setIsAddUserClicked","setPageNumber","marginStyle","margin","style","maxWidth","padding","LinearProgress","display","width","startIcon","Math","max","min","ceil","map","minWidth","JSON","stringify","useBooks","queryLimit","page","books","setBooks","totalBooks","setTotalBooks","numberOfReads","setNumberOfReads","ratedBooks","setRatedBooks","reviewedBooks","setReviewedBooks","bookCollection","updateRatedBooks","$exists","updateNumberOfReads","readings","updateTotalBooks","favoritedBy","getFavoriteBooksByUser","getReviewedBooks","saveBook","draftBook","updateBook","bookID","addToFavoriteBook","book","timestamp","moment","unix","removeFromFavoriteBook","rateABook","rating","parseFloat","deleteBook","BookItem","bookActions","isAdmin","isAuthor","setIsReviewButtonClicked","setIsAddBookButtonClicked","isReviewDisabled","setTempBook","isRatingDisabled","showReview","showRating","author","isFavorite","includes","ratings","ratingValue","reduce","b","review","reviews","yourRating","isBookReviewed","keys","isFiction","coverImageUrl","src","alt","maxHeight","Favorite","FavoriteBorder","title","translator","editor","publisher","Genre","year","marginBottom","Rating","precision","readOnly","onChange","wordWrap","marginTop","BooksPage","isAddBookButtonClicked","tempBook","isReviewButtonClicked","textFieldStyle","dropdownLabels","handleTextFieldChange","newBook","random","key","InputLabel","Select","labelId","MenuItem","newReviews","multiline","AdminPage","adminCurrentPage","setAdminCurrentPage","handleBooksButtonClick","handleUsersButtonClick","justifyContent","marginRight","renderPage","ProfilePage","setUser","setUserID","averageRating","setAverageRating","favoritesPageNumber","setFavoritesPageNumber","favoriteBooks","userLabels","sum","acc","curr","fontSize","newUser","marginLeft","toFixed","ReviewsPage","colors","green","500","A400","purple","orange","red","themeConfig","palette","primary","secondary","theme","createMuiTheme","ThemeProvider","AppName","AppWithRealm","App","setIsAdmin","currentPage","setCurrentPage","pages","adminID","AppBar","Toolbar","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9c83a6c.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport { baseUrl } from \"../realm.json\";\n\nfunction createRealmApp(id) {\n  return new Realm.App({ id, baseUrl });\n}\n\nconst RealmAppContext = React.createContext(null);\n\nexport function RealmAppProvider({ appId, children }) {\n  // Store Realm.App in React state. If appId changes, all children will rerender and use the new realmApp.\n  const [realmApp, setRealmApp] = React.useState(createRealmApp(appId));\n  React.useEffect(() => {\n    setRealmApp(createRealmApp(appId));\n  }, [appId]);\n  // Store the app's current user in state and wrap the built-in auth functions to modify this state\n  const [currentUser, setCurrentUser] = React.useState(realmApp.currentUser);\n  // Wrap the base logIn function to save the logged in user in state\n  const logIn = React.useCallback(\n    async (credentials) => {\n      await realmApp.logIn(credentials);\n      setCurrentUser(realmApp.currentUser);\n    },\n    [realmApp]\n  );\n  // Wrap the current user's logOut function to remove the logged out user from state\n  const logOut = React.useCallback(async () => {\n    await currentUser?.logOut();\n    await realmApp.removeUser(currentUser);\n    setCurrentUser(realmApp.currentUser);\n  }, [realmApp, currentUser]);\n\n  const switchToAdmin = React.useCallback(() => {\n    const authenticatedUsers = Object.values(realmApp.allUsers).filter(\n      (user) => user.isLoggedIn\n    );\n    realmApp.switchUser(authenticatedUsers.find((user) => user.id === \"6283fd2ac3ac799e65415025\"));\n    setCurrentUser(realmApp.currentUser);\n  }, [realmApp]);\n\n  const switchUser = React.useCallback(\n    (userId) => {\n      const user = Object.values(realmApp.allUsers).find((user) => user.id === userId);\n      if (user) {\n        realmApp.switchUser(user);\n        setCurrentUser(realmApp.currentUser);\n      }\n    },\n    [realmApp]\n  );\n\n  const removeUser = React.useCallback(\n    async (userId) => {\n      const userToRemove = Object.values(realmApp.allUsers).find(user => user.isLoggedIn);\n      await userToRemove.logOut();\n      await realmApp.removeUser(userToRemove);\n      setCurrentUser(realmApp.currentUser);\n      return;\n    },\n    [realmApp]\n  );\n\n  // Override the App's currentUser & logIn properties + include the app-level logout function\n  const realmAppContext = React.useMemo(() => {\n    return { ...realmApp, switchUser, currentUser, logIn, logOut, switchToAdmin, removeUser };\n  }, [realmApp, switchUser, currentUser, logIn, logOut, switchToAdmin, removeUser]);\n\n  return (\n    <RealmAppContext.Provider value={realmAppContext}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n}\n\nexport function useRealmApp() {\n  const realmApp = React.useContext(RealmAppContext);\n  if (!realmApp) {\n    throw new Error(\n      `No Realm App found. Make sure to call useRealmApp() inside of a <RealmAppProvider />.`\n    );\n  }\n  return realmApp;\n}\n","export const toggleBoolean = (prev) => !prev;\n\nconst isValidArrayIndex = (arr, idx) => {\n  return !(idx < 0 || idx >= arr.length);\n};\n\nexport function addValueAtIndex(arr, idx, value) {\n  if (!isValidArrayIndex(arr, idx) && idx !== arr.length) {\n    throw new Error(`Cannot add value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), value, ...arr.slice(idx)];\n}\n\nexport function replaceValueAtIndex(arr, idx, newValue) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot replace value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), newValue, ...arr.slice(idx + 1)];\n}\n\nexport function updateValueAtIndex(arr, idx, updater) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot update value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), updater(arr[idx]), ...arr.slice(idx + 1)];\n}\n\nexport function removeValueAtIndex(arr, idx) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot remove value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), ...arr.slice(idx + 1)];\n}\n\nexport const isSameTodo = (todo1, todo2) =>\n  String(todo1?._id) === String(todo2?._id);\n\nexport const getTodoIndex = (todos, todo) => {\n  const idx = todos.findIndex((t) => isSameTodo(t, todo));\n  return idx >= 0 ? idx : null;\n};\n","import React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function ErrorAlert({ isOpen, message, onClose = () => {} }) {\n  return isOpen ? (\n    <Alert onClose={onClose} severity=\"error\">\n      {message}\n    </Alert>\n  ) : null;\n}\n\nexport function useErrorAlert({ error, clearError, hideAfterMs }) {\n  const [showErrorAlert, setShowErrorAlert] = React.useState(false);\n  const clearErrorAlert = React.useCallback(() => {\n    clearError();\n    setShowErrorAlert(false);\n  }, [clearError]);\n\n  React.useEffect(() => {\n    if (error) {\n      setShowErrorAlert(true);\n      if (hideAfterMs) {\n        const timeout = setTimeout(() => {\n          clearErrorAlert();\n        }, hideAfterMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n    } else {\n      setShowErrorAlert(false);\n    }\n  }, [error, clearErrorAlert, hideAfterMs]);\n\n  return () => (\n    <ErrorAlert\n      isOpen={showErrorAlert}\n      message={error}\n      onClose={() => {\n        clearErrorAlert();\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport {\n  Container,\n  TextField,\n  Button,\n  IconButton,\n  Card,\n  Typography,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { useRealmApp } from \"./RealmApp\";\nimport { toggleBoolean } from \"../utils\";\nimport { useErrorAlert } from \"../hooks/useErrorAlert\";\n\nexport function WelcomePage({ isAdminLogin, onRegisterHandler }) {\n  const realmApp = useRealmApp();\n  // Track whether the user is logging in or signing up for a new account\n  const [isSignup, setIsSignup] = React.useState(isAdminLogin ? true : false);\n  const toggleIsSignup = () => {\n    clearErrors();\n    setIsSignup(toggleBoolean);\n  };\n  // Authentication errors\n  const noErrors = {\n    email: null,\n    password: null,\n    other: null,\n  };\n  const [error, setError] = React.useState(noErrors);\n  const clearErrors = () => setError(noErrors);\n  const NonAuthErrorAlert = useErrorAlert({\n    error: error.other,\n    clearError: () => {\n      setError((prevError) => ({ ...prevError, other: null }));\n    },\n  });\n  // Manage password visibility\n  const [showPassword, setShowPassword] = React.useState(false);\n  const toggleShowPassword = () => setShowPassword(toggleBoolean);\n\n  const onFormSubmit = async ({ email, password }) => {\n    clearErrors();\n    try {\n      if (isSignup) {\n        await realmApp.emailPasswordAuth.registerUser(email, password);\n      }\n      if (!isAdminLogin) {\n        await realmApp.logIn(Realm.Credentials.emailPassword(email, password));\n      }\n      else {\n        const credentials = Realm.Credentials.emailPassword(email, password);\n        await realmApp.logIn(credentials);\n        realmApp.removeUser(credentials);\n        realmApp.switchToAdmin();\n        onRegisterHandler();\n      }\n    } catch (err) {\n      console.log('error');\n      handleAuthenticationError(err, setError);\n    }\n  };\n\n  return (\n    <Container className=\"main-container\">\n      <Card className=\"auth-card\" variant=\"outlined\">\n        <form\n          className=\"auth-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const { email, password } = Object.fromEntries(formData.entries());\n            onFormSubmit({ email, password });\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n            {isSignup ? \"Sign Up\" : \"Log In\"}\n          </Typography>\n          <NonAuthErrorAlert />\n          <TextField\n            id=\"input-email\"\n            name=\"email\"\n            label=\"Email Address\"\n            variant=\"outlined\"\n            error={Boolean(error.email)}\n            helperText={error.email ?? \"\"}\n          />\n          <TextField\n            id=\"input-password\"\n            type={showPassword ? \"text\" : \"password\"}\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            error={Boolean(error.password)}\n            helperText={error.password ?? \"\"}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={toggleShowPassword}\n                    onMouseDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {isSignup ? \"Create Account\" : \"Log In\"}\n          </Button>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => toggleIsSignup()}\n          >\n            {isSignup && !isAdminLogin && \"Already have an account? Log In\"}\n            {!isSignup && !isAdminLogin && \"Sign up for an account\"}\n          </button>\n        </form>\n      </Card>\n    </Container>\n  );\n}\n\nfunction handleAuthenticationError(err, setError) {\n  const handleUnknownError = () => {\n    setError((prevError) => ({\n      ...prevError,\n      other: \"Something went wrong. Try again in a little bit.\",\n    }));\n    console.warn(\n      \"Something went wrong with a Realm login or signup request. See the following error for details.\"\n    );\n    console.error(err);\n  };\n  if (err instanceof Realm.MongoDBRealmError) {\n    const { error, statusCode } = err;\n    const errorType = error || statusCode;\n    switch (errorType) {\n      case \"invalid username\":\n        setError((prevError) => ({\n          ...prevError,\n          email: \"Invalid email address.\",\n        }));\n        break;\n      case \"invalid username/password\":\n      case \"invalid password\":\n      case 401:\n        setError((prevError) => ({\n          ...prevError,\n          password: \"Incorrect password.\",\n        }));\n        break;\n      case \"name already in use\":\n      case 409:\n        setError((prevError) => ({\n          ...prevError,\n          email: \"Email is already registered.\",\n        }));\n        break;\n      case \"password must be between 6 and 128 characters\":\n      case 400:\n        setError((prevError) => ({\n          ...prevError,\n          password: \"Password must be between 6 and 128 characters.\",\n        }));\n        break;\n      default:\n        handleUnknownError();\n        break;\n    }\n  } else {\n    handleUnknownError();\n  }\n}\n","import React from \"react\";\nimport {\n    IconButton,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nexport const UserItem = ({ user, userActions }) => {\n    return (\n        <div>\n            <IconButton\n                edge=\"end\"\n                size=\"small\"\n                onClick={() => {\n                    if (user.username !== \"admin\") {\n                        userActions.deleteUser(user);\n                    }\n                }}\n            >\n                <ClearIcon />\n            </IconButton>\n            <p>Username: {user?.username}</p>\n            <p>Email: {user?.data?.email}</p>\n        </div>\n    );\n};","import React from \"react\";\nimport { useRealmApp } from \"../components/RealmApp\";\n\n/**\n * Returns a MongoDB Collection client object\n * @template DocType extends Realm.Services.MongoDB.Document\n * @param {Object} config - A description of the collection.\n * @param {string} [config.cluster] - The service name of the collection's linked cluster.\n * @param {string} config.db - The name of database that contains the collection.\n * @param {string} config.collection - The name of the collection.\n * @returns {Realm.Services.MongoDB.MongoDBCollection<DocType>} config.collection - The name of the collection.\n */\nexport function useCollection({ cluster = \"mongodb-atlas\", db, collection }) {\n  const realmApp = useRealmApp();\n  return React.useMemo(() => {\n    const mdb = realmApp.currentUser.mongoClient(cluster);\n    return mdb.db(db).collection(collection);\n  }, [realmApp.currentUser, cluster, db, collection]);\n}\n","import React from \"react\";\n\n// By default we won't do anything for a change event unless the caller passed in a change handler\n// for the change event type.\nconst noop = () => {};\nconst defaultChangeHandlers = {\n  onInsert: noop,\n  onUpdate: noop,\n  onReplace: noop,\n  onDelete: noop,\n};\n\n/**\n * Opens/manages a change stream and calls provided change handlers for a given MongoDB collection.\n * @param {Realm.Services.MongoDB.MongoDBCollection<T>} collection - A MongoDB collection client object.\n * @param {Object} changeHandlers - A set of callback functions to call in response to changes.\n * @param {(change: Realm.Services.MongoDB.InsertEvent<T>) => void} [changeHandlers.onInsert] - A change handler callback that receives an Insert event.\n * @param {(change: Realm.Services.MongoDB.UpdateEvent<T>) => void} [changeHandlers.onUpdate] - A change handler callback that receives an Update event.\n * @param {(change: Realm.Services.MongoDB.ReplaceEvent<T>) => void} [changeHandlers.onReplace] - A change handler callback that receives a Replace event.\n * @param {(change: Realm.Services.MongoDB.DeleteEvent<T>) => void} [changeHandlers.onDelete] - A change handler callback that receives a Delete event.\n */\nexport function useWatch(collection, changeHandlers) {\n  const filter = React.useMemo(() => ({}), []);\n  const handlers = { ...defaultChangeHandlers, ...changeHandlers };\n  // We copy the handlers into a ref so that we can always call the latest version of each handler\n  // without causing a re-render when the callbacks change. This can prevent infinite render loops\n  // that would otherwise happen if the caller doesn't memoize their change handler functions.\n  const handlersRef = React.useRef(handlers);\n  React.useEffect(() => {\n    handlersRef.current = {\n      onInsert: handlers.onInsert,\n      onUpdate: handlers.onUpdate,\n      onReplace: handlers.onReplace,\n      onDelete: handlers.onDelete,\n    };\n  }, [\n    handlers.onInsert,\n    handlers.onUpdate,\n    handlers.onReplace,\n    handlers.onDelete,\n  ]);\n  // Set up a MongoDB change stream that calls the provided change handler callbacks.\n  React.useEffect(() => {\n    const watchTodos = async () => {\n      for await (const change of collection.watch({ filter })) {\n        switch (change.operationType) {\n          case \"insert\": {\n            handlersRef.current.onInsert(change);\n            break;\n          }\n          case \"update\": {\n            handlersRef.current.onUpdate(change);\n            break;\n          }\n          case \"replace\": {\n            handlersRef.current.onReplace(change);\n            break;\n          }\n          case \"delete\": {\n            handlersRef.current.onDelete(change);\n            break;\n          }\n          default: {\n            // change.operationType will always be one of the specified cases, so we should never hit this default\n            throw new Error(\n              `Invalid change operation type: ${change.operationType}`\n            );\n          }\n        }\n      }\n    };\n    watchTodos();\n  }, [collection, filter]);\n}\n","import React, { useEffect } from \"react\";\nimport { useRealmApp } from \"../components/RealmApp\";\nimport { useCollection } from \"./useCollection\";\nimport { dataSourceName } from \"../realm.json\";\nimport { useWatch } from \"./useWatch\";\nimport {\n  getTodoIndex,\n  addValueAtIndex,\n  updateValueAtIndex,\n  replaceValueAtIndex,\n  removeValueAtIndex\n} from \"../utils\";\n\nexport const useUsers = (pageNumber) => {\n  const realmApp = useRealmApp();\n  const [users, setUsers] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [totalUsers, setTotalUsers] = React.useState(0);\n\n  const userCollection = useCollection({\n    cluster: dataSourceName,\n    db: \"data\",\n    collection: \"users\",\n  });\n\n  useEffect(() => {\n    userCollection.count().then(i => setTotalUsers(i));\n    realmApp.currentUser.callFunction(\"getDocumentsWithLimit\", {\n      limit: 3,\n      skip: (pageNumber - 1) * 3,\n      collection: \"users\"\n    }).then(users => {\n      setUsers(users);\n      setLoading(false);\n    });\n  }, [userCollection, pageNumber, realmApp.currentUser]);\n\n  useWatch(userCollection, {\n    onInsert: (change) => {\n      setUsers((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx =\n          getTodoIndex(oldUsers, change.fullDocument) ?? oldUsers.length;\n        if (idx === oldUsers.length) {\n          return addValueAtIndex(oldUsers, idx, change.fullDocument);\n        } else {\n          return oldUsers;\n        }\n      });\n    },\n    onUpdate: (change) => {\n      setUsers((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx = getTodoIndex(oldUsers, change.fullDocument);\n        return updateValueAtIndex(oldUsers, idx, () => {\n          return change.fullDocument;\n        });\n      });\n    },\n    onReplace: (change) => {\n      setUsers((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx = getTodoIndex(oldUsers, change.fullDocument);\n        return replaceValueAtIndex(oldUsers, idx, change.fullDocument);\n      });\n    },\n    onDelete: (change) => {\n      setUsers((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx = getTodoIndex(oldUsers, { _id: change.documentKey._id });\n        if (idx >= 0) {\n          return removeValueAtIndex(oldUsers, idx);\n        } else {\n          return oldUsers;\n        }\n      });\n    },\n  });\n\n  const saveUser = async (draftUser) => {\n    draftUser._partition = realmApp.currentUser.id;\n    try {\n      await userCollection.insertOne(draftUser);\n    } catch (err) {\n      if (err.error.match(/^Duplicate key error/)) {\n        console.warn(\n          `The following error means that we tried to insert a todo multiple times (i.e. an existing todo has the same _id). In this app we just catch the error and move on. In your app, you might want to debounce the save input or implement an additional loading state to avoid sending the request in the first place.`\n        );\n      }\n      console.error(err);\n    }\n  };\n\n  const updateUser = async (userID, updatedFields) => {\n    try {\n      await userCollection.updateOne(\n        { userID: userID },\n        { $set: updatedFields }\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Delete a given todo\n  const deleteUser = async (user) => {\n    await userCollection.deleteOne({ _id: user._id });\n  };\n\n  return {\n    loading,\n    users,\n    totalUsers,\n    saveUser,\n    deleteUser,\n    updateUser\n  };\n\n};","import React from \"react\";\n\nexport function useTimeout(fn, ms) {\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      fn();\n    }, ms);\n    return () => clearTimeout(timeout);\n  }, [fn, ms]);\n}\n\nexport function useShowLoader(loading, delayMs) {\n  const [showLoader, setShowLoader] = React.useState(false);\n  useTimeout(() => {\n    if (loading) {\n      setShowLoader(true);\n    }\n  }, [delayMs]);\n  React.useEffect(() => {\n    if (!loading) {\n      setShowLoader(false);\n    }\n  }, [loading]);\n  return showLoader;\n}\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  LinearProgress,\n  Card,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { UserItem } from \"../UserItem\";\nimport { useUsers } from \"../../hooks/useUsers\";\nimport { useShowLoader } from \"../../hooks/util-hooks\";\nimport { WelcomePage } from \"../WelcomePage\";\n\nexport const UsersPage = ({\n  handleBackButtonClick,\n  isAddUserClicked,\n  setIsAddUserClicked\n}) => {\n  const [pageNumber, setPageNumber] = React.useState(1);\n  const { loading, users, totalUsers, ...userActions } = useUsers(pageNumber);\n  const showLoader = useShowLoader(loading, 200);\n\n  const onRegisterHandler = () => {\n    setIsAddUserClicked(false);\n  };\n\n  const marginStyle = {\n    margin: \"10px\"\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          handleBackButtonClick();\n          setIsAddUserClicked(false);\n        }}\n        style={{ margin: \"10px\" }}\n      >\n        Go Back\n      </Button>\n      {!isAddUserClicked && <Container className=\"main-container\" maxWidth={false} style={{padding: 0, margin: 0}}>\n        {(loading && showLoader) ? (\n          <LinearProgress />\n        ) : (\n          <div style={{display: 'block', width: \"100%\", maxWidth: '100%'}}>\n            <div className=\"title-container\">\n              <h2>\n                {`You have ${totalUsers} user${totalUsers === 1 ? \"\" : \"s\"\n                  }`}\n              </h2>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  setIsAddUserClicked(true);\n                }}\n              >\n                Add User\n              </Button>\n              <div style={marginStyle}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setPageNumber(prev => Math.max(prev - 1, 1))}\n                  style={marginStyle}\n                >\n                  Previous Page\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setPageNumber(prev => Math.min(prev + 1, Math.ceil(totalUsers / 3)))}\n                  style={marginStyle}\n                >\n                  Next Page\n                </Button>\n              </div>\n            </div>\n            <div className=\"main-container\"> \n              {users.map((user) => (\n                <Card style={{minWidth: '25%', padding: '16px', margin: '16px' }}>\n                  <UserItem\n                    key={JSON.stringify(user)}\n                    user={user}\n                    userActions={userActions}\n                  />\n                </Card>\n              ))}\n            </div>\n          </div>\n        )}\n      </Container>}\n      {isAddUserClicked && <WelcomePage\n        isAdminLogin={true}\n        onRegisterHandler={onRegisterHandler}\n      />}\n    </>\n  );\n};","import React, { useCallback, useEffect } from \"react\";\nimport { useRealmApp } from \"../components/RealmApp\";\nimport { useCollection } from \"./useCollection\";\nimport { dataSourceName } from \"../realm.json\";\nimport { useWatch } from \"./useWatch\";\nimport {\n  getTodoIndex,\n  addValueAtIndex,\n  updateValueAtIndex,\n  replaceValueAtIndex,\n  removeValueAtIndex\n} from \"../utils\";\nimport moment from \"moment\";\n\nexport const useBooks = (queryLimit, pageNumber, page) => {\n  const realmApp = useRealmApp();\n  const [books, setBooks] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [totalBooks, setTotalBooks] = React.useState(0);\n  const [numberOfReads, setNumberOfReads] = React.useState(0);\n  const [ratedBooks, setRatedBooks] = React.useState([]);\n  const [reviewedBooks, setReviewedBooks] = React.useState([]);\n\n  const bookCollection = useCollection({\n    cluster: dataSourceName,\n    db: \"data\",\n    collection: \"books\",\n  });\n\n  const updateRatedBooks = useCallback(() => {\n    bookCollection.find({ [`ratings.${realmApp.currentUser.id}`]: { $exists: true } }).then(i => setRatedBooks(i));\n  }, [bookCollection, realmApp.currentUser.id]);\n\n  const updateNumberOfReads = useCallback(() => {\n    bookCollection.count({ readings: realmApp.currentUser.id }).then(i => setNumberOfReads(i));\n  }, [bookCollection, realmApp.currentUser.id]);\n\n  const updateTotalBooks = useCallback(() => {\n    bookCollection.count({ favoritedBy: realmApp.currentUser.id }).then(i => setTotalBooks(i));\n  }, [bookCollection, realmApp.currentUser.id]);\n\n  const getFavoriteBooksByUser = useCallback(() => {\n    if (page === \"profile\") {\n      updateRatedBooks();\n      updateNumberOfReads();\n      updateTotalBooks();\n      realmApp.currentUser.callFunction(\"getFavoriteBooksByUser\", {\n        limit: queryLimit || 3,\n        skip: (pageNumber - 1) * (queryLimit || 3),\n      }).then(books => {\n        setBooks(books);\n        setLoading(false);\n      });\n    }\n  }, [pageNumber, queryLimit, realmApp, page, updateRatedBooks, updateNumberOfReads, updateTotalBooks]);\n\n  const getReviewedBooks = useCallback(() => {\n    if (page === \"reviews\") {\n      bookCollection.find({ [`reviews.${realmApp.currentUser.id}`]: { $exists: true } }).then(i => setReviewedBooks(i));\n      realmApp.currentUser.callFunction(\"getReviewsByUser\", {\n        limit: queryLimit || 3,\n        skip: (pageNumber - 1) * (queryLimit || 3),\n      }).then(books => {\n        setBooks(books);\n        setLoading(false);\n      });\n    }\n  }, [bookCollection, page, pageNumber, queryLimit, realmApp.currentUser]);\n\n  useEffect(() => {\n    if (page === \"profile\") {\n      getFavoriteBooksByUser();\n      return;\n    }\n    if (page === \"reviews\") {\n      getReviewedBooks();\n      return;\n    };\n    bookCollection.count().then(i => setTotalBooks(i));\n    realmApp.currentUser.callFunction(\"getDocumentsWithLimit\", {\n      limit: queryLimit || 3,\n      skip: (pageNumber - 1) * (queryLimit || 3),\n      collection: \"books\"\n    }).then(books => {\n      setBooks(books);\n      setLoading(false);\n    });\n  }, [bookCollection, queryLimit, pageNumber, realmApp.currentUser, page, getFavoriteBooksByUser, getReviewedBooks]);\n\n  useWatch(bookCollection, {\n    onInsert: (change) => {\n      setBooks((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx =\n          getTodoIndex(oldUsers, change.fullDocument) ?? oldUsers.length;\n        if (idx === oldUsers.length) {\n          return addValueAtIndex(oldUsers, idx, change.fullDocument);\n        } else {\n          return oldUsers;\n        }\n      });\n    },\n    onUpdate: (change) => {\n      setBooks((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx = getTodoIndex(oldUsers, change.fullDocument);\n        return updateValueAtIndex(oldUsers, idx, () => {\n          return change.fullDocument;\n        });\n      });\n    },\n    onReplace: (change) => {\n      setBooks((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx = getTodoIndex(oldUsers, change.fullDocument);\n        return replaceValueAtIndex(oldUsers, idx, change.fullDocument);\n      });\n    },\n    onDelete: (change) => {\n      setBooks((oldUsers) => {\n        if (loading) {\n          return oldUsers;\n        }\n        const idx = getTodoIndex(oldUsers, { _id: change.documentKey._id });\n        if (idx >= 0) {\n          return removeValueAtIndex(oldUsers, idx);\n        } else {\n          return oldUsers;\n        }\n      });\n    },\n  });\n\n  const saveBook = async (draftBook) => {\n    draftBook._partition = realmApp.currentUser.id;\n    try {\n      await bookCollection.insertOne(draftBook);\n    } catch (err) {\n      if (err.error.match(/^Duplicate key error/)) {\n        console.warn(\n          `The following error means that we tried to insert a todo multiple times (i.e. an existing todo has the same _id). In this app we just catch the error and move on. In your app, you might want to debounce the save input or implement an additional loading state to avoid sending the request in the first place.`\n        );\n      }\n      console.error(err);\n    }\n  };\n\n  const updateBook = async (bookID, updatedFields) => {\n    try {\n      console.log(bookID, updatedFields);\n      await bookCollection.updateOne(\n        { _id: bookID },\n        { $set: updatedFields }\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addToFavoriteBook = async (book) => {\n    try {\n      await realmApp.currentUser.callFunction(\"addBookToFavorite\", {\n        bookID: String(book._id),\n        timestamp: moment().unix()\n      });\n      getFavoriteBooksByUser();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const removeFromFavoriteBook = async (book) => {\n    try {\n      await realmApp.currentUser.callFunction(\"removeBookFromFavorite\", {\n        bookID: String(book._id),\n      });\n      getFavoriteBooksByUser();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const rateABook = async (rating, book) => {\n    try {\n      await realmApp.currentUser.callFunction(\"rateABook\", {\n        bookID: String(book._id),\n        rating: parseFloat(rating)\n      });\n      updateNumberOfReads();\n      updateRatedBooks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  // Delete a given todo\n  const deleteBook = async (book) => {\n    await bookCollection.deleteOne({ _id: book._id });\n  };\n\n  return {\n    loading,\n    books,\n    totalBooks,\n    saveBook,\n    deleteBook,\n    updateBook,\n    addToFavoriteBook,\n    removeFromFavoriteBook,\n    rateABook,\n    numberOfReads,\n    ratedBooks,\n    reviewedBooks\n  };\n};","import React, { useMemo } from \"react\";\nimport {\n  IconButton,\n  Button\n} from \"@material-ui/core\";\nimport { Rating } from '@mui/material';\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport const BookItem = ({\n  book, bookActions, isAdmin, userID, isAuthor,\n  setIsReviewButtonClicked, setIsAddBookButtonClicked,\n  isReviewDisabled, setTempBook, isRatingDisabled, showReview,\n  showRating\n}) => {\n  if (book.author === \"asdfasdf\") {\n    console.log(book);\n  }\n  const isFavorite = book?.favoritedBy?.includes(userID);\n  const rating = Object.values(book?.ratings || {});\n  const ratingValue = rating.length ? rating.reduce((a, b) => a + b) / rating.length : 0;\n  const review = book?.reviews?.[userID];\n  const yourRating = book?.ratings?.[userID];\n\n  const isBookReviewed = useMemo(() => {\n    return Object.keys(book?.reviews || {}).includes(userID);\n  }, [book, userID]);\n\n  console.log('review', book);\n\n  const isFiction = book?.isFiction;\n\n  return (\n    <div>\n      {book.coverImageUrl && (\n        <img\n          src={book.coverImageUrl}\n          alt=\"cover\"\n          style={{ maxWidth: \"40%\", maxHeight: \"40%\" }}\n        />\n      )}\n\n      {isAdmin && (\n        <IconButton\n          edge=\"end\"\n          size=\"small\"\n          onClick={() => {\n            bookActions.deleteBook(book);\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      )}\n      {!isAdmin && (\n        <IconButton\n          edge=\"end\"\n          size=\"small\"\n          onClick={() => {\n            if (isFavorite) {\n              bookActions.removeFromFavoriteBook(book);\n            } else {\n              bookActions.addToFavoriteBook(book);\n            }\n          }}\n        >\n          {isFavorite && <Favorite />}\n          {!isFavorite && <FavoriteBorder />}\n        </IconButton>\n      )}\n      <p>Title: {book?.title}</p>\n      <p>Author: {book?.author}</p>\n      <p>Translator: {book?.translator}</p>\n      <p>Editor: {book?.editor}</p>\n      <p>Publisher: {book?.publisher}</p>\n      <p>Fiction or Non-fiction?: {isFiction ? \"Fiction\" : \"Non-fiction\"}</p>\n      {isFiction && (<p>Genre: {book?.Genre}</p>)}\n      <p>Year: {book?.year}</p>\n      <div style={{ marginBottom: \"16px\" }}>\n        Rating:\n        <Rating\n          value={ratingValue}\n          precision={0.1}\n          readOnly\n        />\n      </div>\n      {!isAdmin && !isAuthor && !isRatingDisabled && (\n        <div>\n          Click to rate:\n          <Rating\n            precision={0.25}\n            onChange={e => {\n              bookActions.rateABook(e.target.value, book);\n            }}\n          />\n        </div>\n      )}\n      {!isAuthor && !isAdmin && !isReviewDisabled && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={!isBookReviewed && <AddIcon />}\n          onClick={() => {\n            setIsReviewButtonClicked(true);\n            setIsAddBookButtonClicked(false);\n            setTempBook({ ...book });\n          }}\n          style={{ margin: \"10px\" }}\n        >\n          {isBookReviewed ? \"Edit Review\" : \"Add Review\"}\n        </Button>\n      )}\n      {showReview && (\n        <div style={{width: \"90%\", wordWrap: \"break-word\", marginTop: \"10px\"}}>\n          Your Review: {review}\n        </div>\n      )}\n      {showRating && yourRating && (\n        <div style={{width: \"90%\", wordWrap: \"break-word\", marginTop: \"10px\"}}>\n          Your Rating: {yourRating}\n        </div>\n      )}\n    </div>\n  );\n};","import React from \"react\";\nimport { useBooks } from \"../../hooks/useBooks\";\nimport {\n  Container,\n  Button,\n  LinearProgress,\n  Card,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { BookItem } from \"../BookItem\";\nimport { useShowLoader } from \"../../hooks/util-hooks\";\nimport { useRealmApp } from \"../RealmApp\";\nimport { useUsers } from \"../../hooks/useUsers\";\n\nexport const BooksPage = ({\n  handleBackButtonClick,\n  isAddBookButtonClicked,\n  setIsAddBookButtonClicked,\n  isAdmin\n}) => {\n  const realmApp = useRealmApp();\n  const [pageNumber, setPageNumber] = React.useState(1);\n  const { loading, books, totalBooks, ...bookActions } = useBooks(0, pageNumber);\n  const { users } = useUsers(1);\n  const showLoader = useShowLoader(loading, 200);\n  const [tempBook, setTempBook] = React.useState({\n    isFiction: true,\n    Genre: \"Mystery\"\n  });\n  const [isReviewButtonClicked, setIsReviewButtonClicked] = React.useState(false);\n  console.log(tempBook);\n  const textFieldStyle = {\n    margin: \"10px\"\n  };\n\n  const textFieldLabels = {\n    name: \"Name\",\n    author: \"Author\",\n    translator: \"Translator\",\n    editor: \"Editor\",\n    coverImageUrl: \"Cover Image URL\",\n    publisher: \"Publisher\",\n    year: \"Year\"\n  };\n\n  const dropdownLabels = {\n    isFiction: \"isFiction\",\n    genre: \"Genre\"\n  };\n\n  const handleTextFieldChange = label => e => {\n    const newBook = { ...tempBook, [label]: e.target.value };\n    setTempBook(newBook);\n  };\n\n  const reviewChangeHandler = e => {\n    const reviews = tempBook?.reviews || {};\n    const newReviews = { ...reviews, [realmApp.currentUser.id]: e.target.value };\n    const newBook = { ...tempBook, reviews: newReviews };\n    setTempBook(newBook);\n  };\n\n  return (\n    <>\n      {(isAdmin || isAddBookButtonClicked || isReviewButtonClicked) && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            if (isAdmin) {\n              handleBackButtonClick();\n            }\n            setIsAddBookButtonClicked(false);\n            setIsReviewButtonClicked(false);\n          }}\n          style={{ margin: \"10px\" }}\n        >\n          Go Back\n        </Button>\n      )}\n      <Container maxWidth={false}>\n        {loading && showLoader && <LinearProgress />}\n        {!loading && !showLoader && !isAddBookButtonClicked && !isReviewButtonClicked && (\n          <>\n            <div className=\"title-container\">\n              <h2 className=\"title-container\">\n                {`There are ${totalBooks} book${totalBooks === 1 ? \"\" : \"s\"\n                  }`}\n              </h2>\n              {(isAdmin || users[0]?.isAuthor) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={() => setIsAddBookButtonClicked(true)}\n                >\n                  Add Book\n                </Button>\n              )}\n              <div style={textFieldStyle}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setPageNumber(prev => Math.max(prev - 1, 1))}\n                  style={textFieldStyle}\n                >\n                  Previous Page\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setPageNumber(prev => Math.min(prev + 1, Math.ceil(totalBooks / 3)))}\n                  style={textFieldStyle}\n                >\n                  Next Page\n                </Button>\n              </div>\n            </div>\n            <div className=\"main-container\">\n              {books.map((book) => (\n                <Card style={{ margin: \"16px\", padding: '16px' }}>\n                  <BookItem\n                    key={Math.random()}\n                    book={book}\n                    bookActions={bookActions}\n                    isAdmin={isAdmin}\n                    isAuthor={users[0]?.isAuthor}\n                    userID={realmApp.currentUser.id}\n                    setIsReviewButtonClicked={setIsReviewButtonClicked}\n                    setIsAddBookButtonClicked={setIsAddBookButtonClicked}\n                    setTempBook={setTempBook}\n                  />\n                </Card>\n              ))}\n            </div>\n          </>\n        )}\n        {!loading && !showLoader && isAddBookButtonClicked && (\n          <>\n            {tempBook.coverImageUrl && (\n              <img\n                src={tempBook.coverImageUrl}\n                alt=\"cover\"\n                style={{ maxWidth: \"25%\", maxHeight: \"25%\" }}\n              />\n            )}\n            <Card>\n              {Object.entries(textFieldLabels).map(([key, label]) => (\n                <TextField\n                  key={key}\n                  label={label}\n                  style={textFieldStyle}\n                  onChange={handleTextFieldChange(key)}\n                />\n              ))}\n              <InputLabel\n                id=\"demo-simple-select-label\"\n                style={textFieldStyle}\n              >\n                Fiction or Non-fiction?\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={tempBook.isFiction}\n                label=\"Age\"\n                onChange={handleTextFieldChange(dropdownLabels.isFiction)}\n                style={textFieldStyle}\n              >\n                <MenuItem value={true}>Fiction</MenuItem>\n                <MenuItem value={false}>Non-fiction</MenuItem>\n              </Select>\n              {tempBook.isFiction && (\n                <>\n                  <InputLabel\n                    id=\"demo-simple-select-label2\"\n                    style={textFieldStyle}\n                  >\n                    Genre:\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label2\"\n                    id=\"demo-simple-select2\"\n                    value={tempBook.Genre}\n                    label=\"Genre\"\n                    onChange={handleTextFieldChange(dropdownLabels.genre)}\n                    style={textFieldStyle}\n                  >\n                    <MenuItem value=\"Mystery\">Mystery</MenuItem>\n                    <MenuItem value=\"Thriller\">Thriller</MenuItem>\n                    <MenuItem value=\"Horror\">Horror</MenuItem>\n                    <MenuItem value=\"Western\">Western</MenuItem>\n                    <MenuItem value=\"Romance\">Romance</MenuItem>\n                    <MenuItem value=\"Science\">Science</MenuItem>\n                  </Select>\n                </>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  bookActions.saveBook(tempBook);\n                  setIsAddBookButtonClicked(false);\n                  setTempBook({\n                    isFiction: true,\n                    Genre: \"Mystery\"\n                  });\n                }}\n                style={textFieldStyle}\n              >\n                Save\n              </Button>\n            </Card>\n          </>\n        )}\n        {!loading && !showLoader && isReviewButtonClicked && (\n          <Card>\n          {/* {Object.entries(textFieldLabels).map(([key, label]) => (\n            <TextField\n              key={key}\n              label={label}\n              style={textFieldStyle}\n              onChange={handleTextFieldChange(key)}\n            />\n          ))} */}\n          <TextField\n              label=\"review\"\n              style={textFieldStyle}\n              onChange={reviewChangeHandler}\n              multiline={true}\n            />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              bookActions.updateBook(tempBook._id, {reviews: tempBook.reviews});\n              setIsAddBookButtonClicked(false);\n              setIsReviewButtonClicked(false);\n              setTempBook({review: \"\"});\n            }}\n            style={textFieldStyle}\n          >\n            Save\n          </Button>\n        </Card>\n        )}\n      </Container>\n    </>\n  );\n};","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { UsersPage } from \"./UsersPage\";\nimport { BooksPage } from \"./BooksPage\";\n\nexport const AdminPage = ({adminCurrentPage, setAdminCurrentPage}) => {\n  const [isAddBookButtonClicked, setIsAddBookButtonClicked] = React.useState(false);\n  const [isAddUserClicked, setIsAddUserClicked] = React.useState(false);\n\n  const handleBooksButtonClick = () => {\n    setAdminCurrentPage(\"books\");\n  };\n\n  const handleUsersButtonClick = () => {\n    setAdminCurrentPage(\"users\");\n  };\n\n  const handleBackButtonClick = () => {\n    setAdminCurrentPage(isAddBookButtonClicked ? \"books\" : (isAddUserClicked ? \"users\" : \"panel\"));\n  };\n\n  const renderPage = () => {\n    switch (adminCurrentPage) {\n      case \"panel\":\n        return (\n          <div style={{display:'flex', justifyContent: 'center', padding: '16px'}}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleBooksButtonClick}\n              style={{marginRight: '16px'}}\n            >\n              Books\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleUsersButtonClick}\n            >\n              Users\n            </Button>\n          </div>\n        );\n      case \"books\":\n        return (\n          <BooksPage\n            handleBackButtonClick={handleBackButtonClick}\n            isAddBookButtonClicked={isAddBookButtonClicked}\n            setIsAddBookButtonClicked={setIsAddBookButtonClicked}\n            isAdmin={true}\n          />\n        );\n      case \"users\":\n        return (\n          <UsersPage\n            handleBackButtonClick={handleBackButtonClick}\n            isAddUserClicked={isAddUserClicked}\n            setIsAddUserClicked={setIsAddUserClicked}\n          />\n        );\n      default:\n        return null;\n    };\n  };\n\n  return (\n    <>\n      {renderPage()}\n    </>\n  );\n\n};","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Button, Card, Container, TextField } from \"@material-ui/core\";\nimport { useUsers } from \"../hooks/useUsers\";\nimport { useBooks } from \"../hooks/useBooks\";\nimport { BookItem } from \"./BookItem\";\n\nexport const ProfilePage = ({ currentUser, isAdmin }) => {\n  const { loading, users, totalUsers, ...userActions } = useUsers(1);\n  const [user, setUser] = useState({});\n  const [userID, setUserID] = useState(\"\");\n  const [averageRating, setAverageRating] = useState(0);\n  const [favoritesPageNumber, setFavoritesPageNumber] = useState(1);\n  const { books: favoriteBooks, numberOfReads, totalBooks, ratedBooks, ...bookActions } = useBooks(0, favoritesPageNumber, \"profile\");\n  const userLabels = useMemo(\n    () => ({\n      username: \"username\",\n    }), []);\n\n  useEffect(() => {\n    setUserID(currentUser?.id);\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (users[0]?.isAuthor) {\n      return;\n    }\n    if (ratedBooks.length > 0) {\n      const sum = ratedBooks.reduce((acc, curr) => acc + parseFloat(curr.ratings[userID]), 0);\n      setAverageRating(sum / ratedBooks.length);\n    }\n  }, [ratedBooks, userID, users]);\n\n  const userChangeHandler = label => e => {\n    const newUser = { [label]: e.target.value };\n    setUser(newUser);\n  };\n\n  return (\n    <>\n      <Container\n        maxWidth=\"sm\"\n        style={{\n          marginTop: \"32px\"\n        }}\n      >\n        <Card>\n          <div\n            style={{ margin: \"10px\", fontSize: \"30px\", display: \"flex\", justifyContent: \"center\" }}\n          >Profile Page</div>\n          <div style={{ margin: \"10px\", display: \"flex\" }}>\n            Username:\n            <TextField\n              value={user.username || users[0]?.username}\n              onChange={userChangeHandler(userLabels.username)}\n              style={{ marginLeft: \"16px\" }}\n            />\n          </div>\n          <div style={{ margin: \"10px\", display: \"flex\" }}>\n            Number of Books Read: {numberOfReads}\n          </div>\n          {!users[0]?.isAuthor && (\n            <div style={{ margin: \"10px\", display: \"flex\" }}>\n              Average Rating: {averageRating.toFixed(2)}\n            </div>\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => userActions.updateUser(userID, { isAuthor: true })}\n            style={{ margin: \"10px\" }}\n          >I am an author!</Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => userActions.updateUser(userID, user)}\n            style={{ margin: \"10px\" }}\n          >Save</Button>\n\n        </Card>\n      </Container>\n\n      <>\n        <div>\n          <h2 className=\"title-container\">\n            {`You have ${totalBooks} favorite book${totalBooks === 1 ? \"\" : \"s\"\n              }`}\n          </h2>\n          <div style={{ margin: \"10px\", display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setFavoritesPageNumber(prev => Math.max(prev - 1, 1))}\n              style={{ margin: \"10px\" }}\n            >\n              Previous Page\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setFavoritesPageNumber(prev => Math.min(prev + 1, Math.ceil(totalBooks / 3)))}\n              style={{ margin: \"10px\" }}\n            >\n              Next Page\n            </Button>\n          </div>\n        </div>\n        <div className=\"main-container\">\n          {favoriteBooks.map((book) => (\n            <Card style={{ margin: \"16px\", padding: '16px' }}>\n              <BookItem\n                key={String(book._id)}\n                book={book}\n                bookActions={bookActions}\n                isAdmin={isAdmin}\n                userID={currentUser?.id}\n                isReviewDisabled={true}\n              />\n            </Card>\n          ))}\n        </div>\n      </>\n    </>\n\n  );\n}","import React from \"react\";\nimport {\n  Container,\n  Button,\n  LinearProgress,\n  Card,\n  TextField,\n  InputLabel,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { useBooks } from \"../hooks/useBooks\";\nimport { useRealmApp } from \"./RealmApp\";\nimport { useShowLoader } from \"../hooks/util-hooks\";\nimport { BookItem } from \"./BookItem\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport const ReviewsPage = ({ isAddBookButtonClicked, setIsAddBookButtonClicked }) => {\n  const realmApp = useRealmApp();\n  const [pageNumber, setPageNumber] = React.useState(1);\n  const { loading, books, reviewedBooks, totalBooks, ...bookActions } = useBooks(3, pageNumber, \"reviews\");\n  console.log(reviewedBooks);\n  console.log('pn',pageNumber);\n  console.log(books);\n  const showLoader = useShowLoader(loading, 200);\n  const [tempBook, setTempBook] = React.useState({\n    isFiction: true,\n    Genre: \"Mystery\"\n  });\n\n  const textFieldStyle = {\n    margin: \"10px\"\n  };\n\n  const textFieldLabels = {\n    name: \"Name\",\n    author: \"Author\",\n    translator: \"Translator\",\n    editor: \"Editor\",\n    coverImageUrl: \"Cover Image URL\",\n    publisher: \"Publisher\",\n    year: \"Year\"\n  };\n  const dropdownLabels = {\n    isFiction: \"isFiction\",\n    genre: \"Genre\"\n  };\n\n  const handleTextFieldChange = label => e => {\n    const newBook = { ...tempBook, [label]: e.target.value };\n    setTempBook(newBook);\n  };\n\n  return (\n    <>\n      {isAddBookButtonClicked && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            setIsAddBookButtonClicked(false);\n          }}\n          style={{ margin: \"10px\" }}\n        >\n          Go Back\n        </Button>\n      )}\n      <Container maxWidth={false}>\n        {loading && showLoader && <LinearProgress />}\n        {!loading && !showLoader && !isAddBookButtonClicked && (\n          <>\n            <div className=\"title-container\">\n              <h2 className=\"title-container\">\n                {`You have ${reviewedBooks.length} review${reviewedBooks.length === 1 ? \"\" : \"s\"\n                  }`}\n              </h2>\n              {/* <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => setIsAddBookButtonClicked(true)}\n              >\n                Add Review\n              </Button> */}\n              <div style={textFieldStyle}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setPageNumber(prev => Math.max(prev - 1, 1))}\n                  style={textFieldStyle}\n                >\n                  Previous Page\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setPageNumber(prev => Math.min(prev + 1, Math.ceil(reviewedBooks.length / 3)))}\n                  style={textFieldStyle}\n                >\n                  Next Page\n                </Button>\n              </div>\n            </div>\n            <div className=\"main-container\">\n              {books.map((book) => (\n                <Card style={{ margin: \"16px\", padding: '16px' }}>\n                  <BookItem\n                    key={Math.random()}\n                    book={book}\n                    bookActions={bookActions}\n                    isAdmin={false}\n                    userID={realmApp.currentUser.id}\n                    isReviewDisabled={true}\n                    isRatingDisabled={true}\n                    showReview={true}\n                    showRating={true}\n                  />\n                </Card>\n              ))}\n            </div>\n          </>\n        )}\n        {!loading && !showLoader && isAddBookButtonClicked && (\n          <>\n            <Card>\n              {Object.entries(textFieldLabels).map(([key, label]) => (\n                <TextField\n                  key={key}\n                  label={label}\n                  style={textFieldStyle}\n                  onChange={handleTextFieldChange(key)}\n                />\n              ))}\n              <InputLabel\n                id=\"demo-simple-select-label\"\n                style={textFieldStyle}\n              >\n                Fiction or Non-fiction?\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={tempBook.isFiction}\n                label=\"Age\"\n                onChange={handleTextFieldChange(dropdownLabels.isFiction)}\n                style={textFieldStyle}\n              >\n                <MenuItem value={true}>Fiction</MenuItem>\n                <MenuItem value={false}>Non-fiction</MenuItem>\n              </Select>\n              {tempBook.isFiction && (\n                <>\n                  <InputLabel\n                    id=\"demo-simple-select-label2\"\n                    style={textFieldStyle}\n                  >\n                    Genre:\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label2\"\n                    id=\"demo-simple-select2\"\n                    value={tempBook.Genre}\n                    label=\"Genre\"\n                    onChange={handleTextFieldChange(dropdownLabels.genre)}\n                    style={textFieldStyle}\n                  >\n                    <MenuItem value=\"Mystery\">Mystery</MenuItem>\n                    <MenuItem value=\"Thriller\">Thriller</MenuItem>\n                    <MenuItem value=\"Horror\">Horror</MenuItem>\n                    <MenuItem value=\"Western\">Western</MenuItem>\n                    <MenuItem value=\"Romance\">Romance</MenuItem>\n                    <MenuItem value=\"Science\">Science</MenuItem>\n                  </Select>\n                </>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  bookActions.saveBook(tempBook);\n                  setIsAddBookButtonClicked(false);\n                  setTempBook({\n                    isFiction: true,\n                    Genre: \"Mystery\"\n                  });\n                }}\n                style={textFieldStyle}\n              >\n                Save\n              </Button>\n            </Card>\n          </>\n        )}\n      </Container>\n    </>\n  );\n\n};","import { green, purple, orange, red } from \"@material-ui/core/colors\";\n\nexport const colors = {\n  green: {\n    ...green,\n    500: \"#09804C\",\n    A400: \"#B9EACD\",\n  },\n  purple: {\n    ...purple,\n    500: \"#6200EE\",\n    A400: \"#9795F9\",\n  },\n  orange,\n  red,\n};\n","import {\n  ThemeProvider as MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core\";\nimport { colors } from \"../colors\";\n\nconst themeConfig = {\n  palette: {\n    primary: colors.green,\n    secondary: colors.green,\n  },\n}\n\nconst theme = createMuiTheme(themeConfig);\n\nexport function ThemeProvider({ children }) {\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const API_TYPE_NAME = \"MQL\"\n\nexport function AppName() {\n  return (\n    <Typography className=\"app-bar-title\" component=\"h1\" variant=\"h5\">\n      IBDb: Internet Book Database\n    </Typography>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { AppBar, Toolbar, Button, Typography } from \"@material-ui/core\";\nimport { WelcomePage } from \"./WelcomePage\";\nimport { AdminPage } from \"./AdminPage/\";\nimport { ProfilePage } from \"./ProfilePage\";\nimport { BooksPage } from \"./AdminPage/BooksPage\";\nimport { ReviewsPage } from './ReviewsPage';\nimport { RealmAppProvider, useRealmApp } from \"./RealmApp\";\nimport { ThemeProvider } from \"./Theme\";\nimport { AppName } from \"./AppName\";\nimport { appId } from \"../realm.json\";\nimport \"./App.css\";\n\nexport default function AppWithRealm() {\n  return (\n    <ThemeProvider>\n      <RealmAppProvider appId={appId}>\n        <App />\n      </RealmAppProvider>\n    </ThemeProvider>\n  );\n}\n\nfunction App() {\n  const { currentUser, logOut } = useRealmApp();\n  const [isAdmin, setIsAdmin] = React.useState(false);\n  const [currentPage, setCurrentPage] = React.useState(\"home\");\n  const [adminCurrentPage, setAdminCurrentPage] = React.useState(\"panel\"); // State for adminPage\n  const [isAddBookButtonClicked, setIsAddBookButtonClicked] = React.useState(false); // for author books add button\n  const marginStyle = {\n    margin: \"10px\"\n  };\n\n  const pages = {\n    home: \"home\",\n    profile: \"profile\",\n    admin: \"admin\",\n    books: \"books\",\n    reviews: \"reviews\"\n  };\n\n  useEffect(() => {\n    const adminID = \"6283fd2ac3ac799e65415025\";\n    setIsAdmin(currentUser?.id === adminID);\n    if (currentUser?.id === adminID) {\n      setCurrentPage(pages.admin);\n    }\n  }, [currentUser, pages.admin]);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <AppName />\n          {currentUser && (\n            <>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={async () => {\n                  setCurrentPage(isAdmin ? pages.admin : pages.home);\n                  if (isAdmin) {\n                    setAdminCurrentPage(\"panel\");\n                  }\n                }}\n                style={marginStyle}\n              >\n                <Typography variant=\"button\">Home</Typography>\n              </Button>\n              {!isAdmin &&\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={async () => {\n                    setCurrentPage(pages.reviews);\n                  }}\n                  style={marginStyle}\n                >\n                  <Typography variant=\"button\">Reviews</Typography>\n                </Button>\n              }\n              {!isAdmin &&\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={async () => {\n                    setCurrentPage(pages.books);\n                  }}\n                  style={marginStyle}\n                >\n                  <Typography variant=\"button\">Books</Typography>\n                </Button>\n              }\n              {!isAdmin &&\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={async () => {\n                    setCurrentPage(pages.profile);\n                  }}\n                  style={marginStyle}\n                >\n                  <Typography variant=\"button\">Profile</Typography>\n                </Button>\n              }\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={async () => {\n                  try {\n                    await logOut();\n                  } catch (error) {\n                    console.log('error', error);\n                  }\n                  window.location.reload();\n                }}\n                style={marginStyle}\n              >\n                <Typography variant=\"button\">Log Out</Typography>\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      {currentUser && isAdmin && currentPage === pages.admin &&\n        <AdminPage\n          adminCurrentPage={adminCurrentPage}\n          setAdminCurrentPage={setAdminCurrentPage}\n        />\n      }\n      {!currentUser && !isAdmin && currentPage === pages.home && <WelcomePage />}\n      {currentUser && !isAdmin && currentPage === pages.reviews && (\n        <ReviewsPage\n          isAddBookButtonClicked={isAddBookButtonClicked}\n          setIsAddBookButtonClicked={setIsAddBookButtonClicked}\n        />\n      )}\n      {currentUser && !isAdmin && currentPage === pages.books && (\n        <BooksPage\n          isAddBookButtonClicked={isAddBookButtonClicked}\n          setIsAddBookButtonClicked={setIsAddBookButtonClicked}\n        />\n      )}\n      {!isAdmin && currentUser && currentPage === pages.profile &&\n        <ProfilePage\n          currentUser={currentUser}\n          isAdmin={isAdmin}\n        />}\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}