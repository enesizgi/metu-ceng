# MUHAMMED ENES İZGİ
# 2310142
# SECTION 1

.pos 0
    irmovq Stack, %rsp
    irmovq root, %rdi
    call max_btree
    halt

max_btree:
    pushq %rdi
    pushq %r8
    irmovq $-9223372036854775808, %rax
    andq %rdi, %rdi
    jne not_null
    popq %r8
    popq %rdi
    ret
not_null:
    pushq %r12
    pushq %r9
    pushq %r10
    mrmovq (%rdi), %rax # max = root->value;
    rrmovq %rdi, %r12
    mrmovq 8(%rdi), %rdi
    rrmovq %rax, %r8
    pushq %r12
    call max_btree
    popq %r12
    rrmovq %r8, %r9
    rrmovq %rax, %r10
    subq %r9, %r10
    jge second_if
    rrmovq %r8, %rax
second_if:
    mrmovq 16(%r12), %rdi
    rrmovq %rax, %r8
    pushq %r12
    call max_btree
    popq %r12
    rrmovq %r8, %r9
    rrmovq %rax, %r10
    subq %r9, %r10
    jge return
    rrmovq %r8, %rax
return:
    popq %r10
    popq %r9
    popq %r12
    popq %r8
    popq %rdi
    ret





# A binary (not search!) tree,
# absolutely positioned again.
.pos 0x200
root:
    .quad 5
    .quad node7
    .quad node12
node7:
    .quad 7
    .quad node25
    .quad node905
node25:
    .quad 25
    .quad 0
    .quad 0
node905:
    .quad 905
    .quad nodem1
    .quad 0
nodem1:
    .quad -1
    .quad 0
    .quad 0
node12:
    .quad 12
    .quad node219
    .quad nodem10
node219:
    .quad 219
    .quad 0
    .quad 0
nodem10:
    .quad -10
    .quad 0
    .quad node331
node331:
    .quad 331
    .quad 0
    .quad 0

.pos 0x800
Stack:
